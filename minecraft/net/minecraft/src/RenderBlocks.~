// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) braces deadcode fieldsfirst 

package net.minecraft.src;

import net.minecraft.client.Minecraft;
import org.lwjgl.opengl.GL11;

// Referenced classes of package net.minecraft.src:
//            IBlockAccess, Block, MathHelper, BlockRail, 
//            BlockDragonEgg, BlockFence, BlockPane, BlockFenceGate, 
//            BlockCauldron, BlockBrewingStand, ModLoader, BlockEndPortalFrame, 
//            Tessellator, BlockBed, Direction, EntityRenderer, 
//            BlockRedstoneRepeater, BlockPistonBase, BlockPistonExtension, Vec3D, 
//            BlockFire, BlockRedstoneWire, BlockStem, Material, 
//            BlockFluid, World, BlockDoor, BlockGrass, 
//            ChestItemRenderHelper

public class RenderBlocks
{

    public IBlockAccess field_1772_a;
    public int field_1771_b;
    public boolean field_1774_c;
    public boolean field_1773_d;
    public static boolean field_27406_a = true;
    public static boolean cfgGrassFix = true;
    public boolean field_31088_b;
    public boolean field_35942_c[];
    public int field_31087_g;
    public int field_31086_h;
    public int field_31085_i;
    public int field_31084_j;
    public int field_31083_k;
    public int field_31082_l;
    public boolean field_22385_e;
    public float field_22384_f;
    public float field_22383_g;
    public float field_22382_h;
    public float field_22381_i;
    public float field_22380_j;
    public float field_22379_k;
    public float field_22378_l;
    public float field_22377_m;
    public float field_22376_n;
    public float field_22375_o;
    public float field_22374_p;
    public float field_22373_q;
    public float field_22372_r;
    public float field_22371_s;
    public float field_22370_t;
    public float field_22369_u;
    public float field_22368_v;
    public float field_22367_w;
    public float field_22366_x;
    public float field_22365_y;
    public float field_22364_z;
    public float field_22362_A;
    public float field_22360_B;
    public float field_22358_C;
    public float field_22356_D;
    public float field_22354_E;
    public float field_22353_F;
    public int field_35936_P;
    public int field_35935_Q;
    public int field_35938_R;
    public int field_35937_S;
    public int field_35932_T;
    public int field_35931_U;
    public int field_35934_V;
    public int field_35933_W;
    public int field_35940_X;
    public int field_35939_Y;
    public int field_35941_Z;
    public int field_35951_aa;
    public int field_35952_ab;
    public int field_35949_ac;
    public int field_35950_ad;
    public int field_35955_ae;
    public int field_35956_af;
    public int field_35953_ag;
    public int field_35954_ah;
    public int field_35945_ai;
    public int field_35946_aj;
    public int field_35943_ak;
    public int field_35944_al;
    public int field_35947_am;
    public int field_35948_an;
    public float field_22351_H;
    public float field_22350_I;
    public float field_22349_J;
    public float field_22348_K;
    public float field_22347_L;
    public float field_22346_M;
    public float field_22345_N;
    public float field_22344_O;
    public float field_22343_P;
    public float field_22342_Q;
    public float field_22341_R;
    public float field_22340_S;
    public boolean field_22339_T;
    public boolean field_22338_U;
    public boolean field_22337_V;
    public boolean field_22336_W;
    public boolean field_22335_X;
    public boolean field_22334_Y;
    public boolean field_22333_Z;
    public boolean field_22363_aa;
    public boolean field_22361_ab;
    public boolean field_22359_ac;
    public boolean field_22357_ad;
    public boolean field_22355_ae;

    public RenderBlocks(IBlockAccess iblockaccess)
    {
        field_1771_b = -1;
        field_1774_c = false;
        field_1773_d = false;
        field_31088_b = true;
        field_35942_c = new boolean[256];
        field_31087_g = 0;
        field_31086_h = 0;
        field_31085_i = 0;
        field_31084_j = 0;
        field_31083_k = 0;
        field_31082_l = 0;
        field_35946_aj = 1;
        field_1772_a = iblockaccess;
        for(int i = 0; i < 256; i++)
        {
            Block block = Block.field_345_n[i];
            if(block != null)
            {
                if(block == Block.field_4063_aU)
                {
                    field_35942_c[i] = true;
                }
                if(block.func_242_c() && block.func_217_b())
                {
                    field_35942_c[i] = true;
                }
            }
        }

    }

    public RenderBlocks()
    {
        field_1771_b = -1;
        field_1774_c = false;
        field_1773_d = false;
        field_31088_b = true;
        field_35942_c = new boolean[256];
        field_31087_g = 0;
        field_31086_h = 0;
        field_31085_i = 0;
        field_31084_j = 0;
        field_31083_k = 0;
        field_31082_l = 0;
        field_35946_aj = 1;
    }

    public void func_40727_a()
    {
        field_1771_b = -1;
    }

    public void func_1223_a(Block block, int i, int j, int k, int l)
    {
        field_1771_b = l;
        func_1234_a(block, i, j, k);
        field_1771_b = -1;
    }

    public void func_31075_a(Block block, int i, int j, int k)
    {
        field_1773_d = true;
        func_1234_a(block, i, j, k);
        field_1773_d = false;
    }

    public boolean func_35927_a(int i, int j, int k, int l)
    {
        if(this != null)
        {
            return false;
        }
        byte byte0 = 13;
        byte byte1 = 52;
        byte byte2 = 32;
        int i1 = MathHelper.func_35597_a(i - byte0);
        int j1 = MathHelper.func_35597_a(k - byte1);
        if(j1 <= byte2 && i1 <= byte2 && (i1 == byte2 || j1 == byte2) && field_35942_c[field_1772_a.func_600_a(i, j, k)])
        {
            int k1 = 5;
            if(i == byte0 - byte2)
            {
                k1--;
            }
            if(i == byte0 + byte2)
            {
                k1++;
            }
            if(k == byte1 - byte2)
            {
                k1 -= 3;
            }
            if(k == byte1 + byte2)
            {
                k1 += 3;
            }
            func_35921_b(k1, i, j, k);
            return true;
        } else
        {
            return false;
        }
    }

    public boolean func_1234_a(Block block, int i, int j, int k)
    {
        int l = block.func_210_f();
        block.func_238_a(field_1772_a, i, j, k);
        return l != 0 ? l != 4 ? l != 13 ? l != 1 ? l != 19 ? l != 23 ? l != 6 ? l != 2 ? l != 3 ? l != 5 ? l != 8 ? l != 7 ? l != 9 ? l != 10 ? l != 27 ? l != 11 ? l != 12 ? l != 14 ? l != 15 ? l != 16 ? l != 17 ? l != 18 ? l != 20 ? l != 21 ? l != 24 ? l != 25 ? l != 26 ? ModLoader.RenderWorldBlock(this, field_1772_a, i, j, k, block, l) : func_40729_s(block, i, j, k) : func_40730_a((BlockBrewingStand)block, i, j, k) : func_40728_a((BlockCauldron)block, i, j, k) : func_35923_a((BlockFenceGate)block, i, j, k) : func_35929_i(block, i, j, k) : func_35922_a((BlockPane)block, i, j, k) : func_31080_c(block, i, j, k, true) : func_31074_b(block, i, j, k, false) : func_22332_q(block, i, j, k) : func_22331_p(block, i, j, k) : func_1229_c(block, i, j, k) : func_35925_a((BlockFence)block, i, j, k) : func_41088_a((BlockDragonEgg)block, i, j, k) : func_1214_n(block, i, j, k) : func_1216_f((BlockRail)block, i, j, k) : func_1218_o(block, i, j, k) : func_1221_g(block, i, j, k) : func_1242_e(block, i, j, k) : func_1235_d(block, i, j, k) : func_1241_b(block, i, j, k) : func_35930_l(block, i, j, k) : func_40726_m(block, i, j, k) : func_1232_i(block, i, j, k) : func_1226_h(block, i, j, k) : func_1233_l(block, i, j, k) : func_1222_j(block, i, j, k) : func_1228_k(block, i, j, k);
    }

    public boolean func_40729_s(Block block, int i, int j, int k)
    {
        int l = field_1772_a.func_602_e(i, j, k);
        int i1 = l & 3;
        if(i1 == 0)
        {
            field_31083_k = 3;
        } else
        if(i1 == 3)
        {
            field_31083_k = 1;
        } else
        if(i1 == 1)
        {
            field_31083_k = 2;
        }
        if(!BlockEndPortalFrame.func_40212_d(l))
        {
            block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 0.8125F, 1.0F);
            func_1228_k(block, i, j, k);
            block.func_237_e();
            field_31083_k = 0;
            return true;
        } else
        {
            block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 0.8125F, 1.0F);
            func_1228_k(block, i, j, k);
            field_1771_b = 174;
            block.func_213_a(0.25F, 0.8125F, 0.25F, 0.75F, 1.0F, 0.75F);
            func_1228_k(block, i, j, k);
            func_40727_a();
            block.func_237_e();
            field_31083_k = 0;
            return true;
        }
    }

    public boolean func_22331_p(Block block, int i, int j, int k)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int l = field_1772_a.func_602_e(i, j, k);
        int i1 = BlockBed.func_22030_c(l);
        boolean flag = BlockBed.func_22032_d(l);
        float f = 0.5F;
        float f1 = 1.0F;
        float f2 = 0.8F;
        float f3 = 0.6F;
        int j1 = block.func_35275_c(field_1772_a, i, j, k);
        tessellator.func_35835_b(j1);
        tessellator.func_987_a(f, f, f);
        int k1 = block.func_211_a(field_1772_a, i, j, k, 0);
        int l1 = (k1 & 0xf) << 4;
        int i2 = k1 & 0xf0;
        double d = (float)l1 / 256F;
        double d1 = ((double)(l1 + 16) - 0.01D) / 256D;
        double d2 = (float)i2 / 256F;
        double d3 = ((double)(i2 + 16) - 0.01D) / 256D;
        double d4 = (double)i + block.field_370_bf;
        double d5 = (double)i + block.field_364_bi;
        double d6 = (double)j + block.field_368_bg + 0.1875D;
        double d7 = (double)k + block.field_366_bh;
        double d8 = (double)k + block.field_360_bk;
        tessellator.func_983_a(d4, d6, d8, d, d3);
        tessellator.func_983_a(d4, d6, d7, d, d2);
        tessellator.func_983_a(d5, d6, d7, d1, d2);
        tessellator.func_983_a(d5, d6, d8, d1, d3);
        tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j + 1, k));
        tessellator.func_987_a(f1, f1, f1);
        k1 = block.func_211_a(field_1772_a, i, j, k, 1);
        l1 = (k1 & 0xf) << 4;
        i2 = k1 & 0xf0;
        d = (float)l1 / 256F;
        d1 = ((double)(l1 + 16) - 0.01D) / 256D;
        d2 = (float)i2 / 256F;
        d3 = ((double)(i2 + 16) - 0.01D) / 256D;
        d4 = d;
        d5 = d1;
        d6 = d2;
        d7 = d2;
        d8 = d;
        double d9 = d1;
        double d10 = d3;
        double d11 = d3;
        if(i1 == 0)
        {
            d5 = d;
            d6 = d3;
            d8 = d1;
            d11 = d2;
        } else
        if(i1 == 2)
        {
            d4 = d1;
            d7 = d3;
            d9 = d;
            d10 = d2;
        } else
        if(i1 == 3)
        {
            d4 = d1;
            d7 = d3;
            d9 = d;
            d10 = d2;
            d5 = d;
            d6 = d3;
            d8 = d1;
            d11 = d2;
        }
        double d12 = (double)i + block.field_370_bf;
        double d13 = (double)i + block.field_364_bi;
        double d14 = (double)j + block.field_362_bj;
        double d15 = (double)k + block.field_366_bh;
        double d16 = (double)k + block.field_360_bk;
        tessellator.func_983_a(d13, d14, d16, d8, d10);
        tessellator.func_983_a(d13, d14, d15, d4, d6);
        tessellator.func_983_a(d12, d14, d15, d5, d7);
        tessellator.func_983_a(d12, d14, d16, d9, d11);
        k1 = Direction.field_22280_a[i1];
        if(flag)
        {
            k1 = Direction.field_22280_a[Direction.field_22279_b[i1]];
        }
        byte byte0 = 4;
        switch(i1)
        {
        case 0: // '\0'
            byte0 = 5;
            break;

        case 1: // '\001'
            byte0 = 3;
            break;

        case 3: // '\003'
            byte0 = 2;
            break;
        }
        if(k1 != 2 && (field_1773_d || block.func_260_c(field_1772_a, i, j, k - 1, 2)))
        {
            tessellator.func_35835_b(block.field_366_bh <= 0.0D ? block.func_35275_c(field_1772_a, i, j, k - 1) : j1);
            tessellator.func_987_a(f2, f2, f2);
            field_1774_c = byte0 == 2;
            func_1220_c(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 2));
        }
        if(k1 != 3 && (field_1773_d || block.func_260_c(field_1772_a, i, j, k + 1, 3)))
        {
            tessellator.func_35835_b(block.field_360_bk >= 1.0D ? block.func_35275_c(field_1772_a, i, j, k + 1) : j1);
            tessellator.func_987_a(f2, f2, f2);
            field_1774_c = byte0 == 3;
            func_1225_d(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 3));
        }
        if(k1 != 4 && (field_1773_d || block.func_260_c(field_1772_a, i - 1, j, k, 4)))
        {
            tessellator.func_35835_b(block.field_366_bh <= 0.0D ? block.func_35275_c(field_1772_a, i - 1, j, k) : j1);
            tessellator.func_987_a(f3, f3, f3);
            field_1774_c = byte0 == 4;
            func_1231_e(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 4));
        }
        if(k1 != 5 && (field_1773_d || block.func_260_c(field_1772_a, i + 1, j, k, 5)))
        {
            tessellator.func_35835_b(block.field_360_bk >= 1.0D ? block.func_35275_c(field_1772_a, i + 1, j, k) : j1);
            tessellator.func_987_a(f3, f3, f3);
            field_1774_c = byte0 == 5;
            func_1236_f(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 5));
        }
        field_1774_c = false;
        return true;
    }

    public boolean func_40730_a(BlockBrewingStand blockbrewingstand, int i, int j, int k)
    {
        blockbrewingstand.func_213_a(0.4375F, 0.0F, 0.4375F, 0.5625F, 0.875F, 0.5625F);
        func_1228_k(blockbrewingstand, i, j, k);
        field_1771_b = 156;
        blockbrewingstand.func_213_a(0.5625F, 0.0F, 0.3125F, 0.9375F, 0.125F, 0.6875F);
        func_1228_k(blockbrewingstand, i, j, k);
        blockbrewingstand.func_213_a(0.125F, 0.0F, 0.0625F, 0.5F, 0.125F, 0.4375F);
        func_1228_k(blockbrewingstand, i, j, k);
        blockbrewingstand.func_213_a(0.125F, 0.0F, 0.5625F, 0.5F, 0.125F, 0.9375F);
        func_1228_k(blockbrewingstand, i, j, k);
        func_40727_a();
        Tessellator tessellator = Tessellator.field_1512_a;
        tessellator.func_35835_b(blockbrewingstand.func_35275_c(field_1772_a, i, j, k));
        float f = 1.0F;
        int l = blockbrewingstand.func_207_d(field_1772_a, i, j, k);
        float f1 = (float)(l >> 16 & 0xff) / 255F;
        float f2 = (float)(l >> 8 & 0xff) / 255F;
        float f3 = (float)(l & 0xff) / 255F;
        if(EntityRenderer.field_28135_a)
        {
            float f4 = (f1 * 30F + f2 * 59F + f3 * 11F) / 100F;
            float f5 = (f1 * 30F + f2 * 70F) / 100F;
            float f6 = (f1 * 30F + f3 * 70F) / 100F;
            f1 = f4;
            f2 = f5;
            f3 = f6;
        }
        tessellator.func_987_a(f * f1, f * f2, f * f3);
        int i1 = blockbrewingstand.func_232_a(0, 0);
        if(field_1771_b >= 0)
        {
            i1 = field_1771_b;
        }
        int j1 = (i1 & 0xf) << 4;
        int k1 = i1 & 0xf0;
        double d = (float)k1 / 256F;
        double d1 = ((float)k1 + 15.99F) / 256F;
        int l1 = field_1772_a.func_602_e(i, j, k);
        for(int i2 = 0; i2 < 3; i2++)
        {
            double d2 = ((double)i2 * 3.1415926535897931D * 2D) / 3D + 1.5707963267948966D;
            double d3 = ((float)j1 + 8F) / 256F;
            double d4 = ((float)j1 + 15.99F) / 256F;
            if((l1 & 1 << i2) != 0)
            {
                d3 = ((float)j1 + 7.99F) / 256F;
                d4 = ((float)j1 + 0.0F) / 256F;
            }
            double d5 = (double)i + 0.5D;
            double d6 = (double)i + 0.5D + (Math.sin(d2) * 8D) / 16D;
            double d7 = (double)k + 0.5D;
            double d8 = (double)k + 0.5D + (Math.cos(d2) * 8D) / 16D;
            tessellator.func_983_a(d5, j + 1, d7, d3, d);
            tessellator.func_983_a(d5, j + 0, d7, d3, d1);
            tessellator.func_983_a(d6, j + 0, d8, d4, d1);
            tessellator.func_983_a(d6, j + 1, d8, d4, d);
            tessellator.func_983_a(d6, j + 1, d8, d4, d);
            tessellator.func_983_a(d6, j + 0, d8, d4, d1);
            tessellator.func_983_a(d5, j + 0, d7, d3, d1);
            tessellator.func_983_a(d5, j + 1, d7, d3, d);
        }

        blockbrewingstand.func_237_e();
        return true;
    }

    public boolean func_40728_a(BlockCauldron blockcauldron, int i, int j, int k)
    {
        func_1228_k(blockcauldron, i, j, k);
        Tessellator tessellator = Tessellator.field_1512_a;
        tessellator.func_35835_b(blockcauldron.func_35275_c(field_1772_a, i, j, k));
        float f = 1.0F;
        int l = blockcauldron.func_207_d(field_1772_a, i, j, k);
        float f1 = (float)(l >> 16 & 0xff) / 255F;
        float f2 = (float)(l >> 8 & 0xff) / 255F;
        float f3 = (float)(l & 0xff) / 255F;
        if(EntityRenderer.field_28135_a)
        {
            float f6 = (f1 * 30F + f2 * 59F + f3 * 11F) / 100F;
            float f4 = (f1 * 30F + f2 * 70F) / 100F;
            float f7 = (f1 * 30F + f3 * 70F) / 100F;
            f1 = f6;
            f2 = f4;
            f3 = f7;
        }
        tessellator.func_987_a(f * f1, f * f2, f * f3);
        char c = '\232';
        float f5 = 0.125F;
        func_1236_f(blockcauldron, ((float)i - 1.0F) + f5, j, k, c);
        func_1231_e(blockcauldron, ((float)i + 1.0F) - f5, j, k, c);
        func_1225_d(blockcauldron, i, j, ((float)k - 1.0F) + f5, c);
        func_1220_c(blockcauldron, i, j, ((float)k + 1.0F) - f5, c);
        char c1 = '\213';
        func_1217_b(blockcauldron, i, ((float)j - 1.0F) + 0.25F, k, c1);
        func_1244_a(blockcauldron, i, ((float)j + 1.0F) - 0.75F, k, c1);
        int i1 = field_1772_a.func_602_e(i, j, k);
        if(i1 > 0)
        {
            char c2 = '\315';
            if(i1 > 3)
            {
                i1 = 3;
            }
            func_1217_b(blockcauldron, i, ((float)j - 1.0F) + (6F + (float)i1 * 3F) / 16F, k, c2);
        }
        return true;
    }

    public boolean func_1241_b(Block block, int i, int j, int k)
    {
        int l = field_1772_a.func_602_e(i, j, k);
        Tessellator tessellator = Tessellator.field_1512_a;
        tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j, k));
        tessellator.func_987_a(1.0F, 1.0F, 1.0F);
        double d = 0.40000000596046448D;
        double d1 = 0.5D - d;
        double d2 = 0.20000000298023224D;
        if(l == 1)
        {
            func_1237_a(block, (double)i - d1, (double)j + d2, k, -d, 0.0D);
        } else
        if(l == 2)
        {
            func_1237_a(block, (double)i + d1, (double)j + d2, k, d, 0.0D);
        } else
        if(l == 3)
        {
            func_1237_a(block, i, (double)j + d2, (double)k - d1, 0.0D, -d);
        } else
        if(l == 4)
        {
            func_1237_a(block, i, (double)j + d2, (double)k + d1, 0.0D, d);
        } else
        {
            func_1237_a(block, i, j, k, 0.0D, 0.0D);
        }
        return true;
    }

    public boolean func_22332_q(Block block, int i, int j, int k)
    {
        int l = field_1772_a.func_602_e(i, j, k);
        int i1 = l & 3;
        int j1 = (l & 0xc) >> 2;
        func_1228_k(block, i, j, k);
        Tessellator tessellator = Tessellator.field_1512_a;
        tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j, k));
        tessellator.func_987_a(1.0F, 1.0F, 1.0F);
        double d = -0.1875D;
        double d1 = 0.0D;
        double d2 = 0.0D;
        double d3 = 0.0D;
        double d4 = 0.0D;
        switch(i1)
        {
        case 0: // '\0'
            d4 = -0.3125D;
            d2 = BlockRedstoneRepeater.field_22024_a[j1];
            break;

        case 1: // '\001'
            d3 = 0.3125D;
            d1 = -BlockRedstoneRepeater.field_22024_a[j1];
            break;

        case 2: // '\002'
            d4 = 0.3125D;
            d2 = -BlockRedstoneRepeater.field_22024_a[j1];
            break;

        case 3: // '\003'
            d3 = -0.3125D;
            d1 = BlockRedstoneRepeater.field_22024_a[j1];
            break;
        }
        func_1237_a(block, (double)i + d1, (double)j + d, (double)k + d2, 0.0D, 0.0D);
        func_1237_a(block, (double)i + d3, (double)j + d, (double)k + d4, 0.0D, 0.0D);
        int k1 = block.func_218_a(1);
        int l1 = (k1 & 0xf) << 4;
        int i2 = k1 & 0xf0;
        double d5 = (float)l1 / 256F;
        double d6 = ((float)l1 + 15.99F) / 256F;
        double d7 = (float)i2 / 256F;
        double d8 = ((float)i2 + 15.99F) / 256F;
        double d9 = 0.125D;
        double d10 = i + 1;
        double d11 = i + 1;
        double d12 = i + 0;
        double d13 = i + 0;
        double d14 = k + 0;
        double d15 = k + 1;
        double d16 = k + 1;
        double d17 = k + 0;
        double d18 = (double)j + d9;
        if(i1 == 2)
        {
            d10 = d11 = i + 0;
            d12 = d13 = i + 1;
            d14 = d17 = k + 1;
            d15 = d16 = k + 0;
        } else
        if(i1 == 3)
        {
            d10 = d13 = i + 0;
            d11 = d12 = i + 1;
            d14 = d15 = k + 0;
            d16 = d17 = k + 1;
        } else
        if(i1 == 1)
        {
            d10 = d13 = i + 1;
            d11 = d12 = i + 0;
            d14 = d15 = k + 1;
            d16 = d17 = k + 0;
        }
        tessellator.func_983_a(d13, d18, d17, d5, d7);
        tessellator.func_983_a(d12, d18, d16, d5, d8);
        tessellator.func_983_a(d11, d18, d15, d6, d8);
        tessellator.func_983_a(d10, d18, d14, d6, d7);
        return true;
    }

    public void func_31078_d(Block block, int i, int j, int k)
    {
        field_1773_d = true;
        func_31074_b(block, i, j, k, true);
        field_1773_d = false;
    }

    public boolean func_31074_b(Block block, int i, int j, int k, boolean flag)
    {
        int l = field_1772_a.func_602_e(i, j, k);
        boolean flag1 = flag || (l & 8) != 0;
        int i1 = BlockPistonBase.func_31044_d(l);
        if(flag1)
        {
            switch(i1)
            {
            case 0: // '\0'
                field_31087_g = 3;
                field_31086_h = 3;
                field_31085_i = 3;
                field_31084_j = 3;
                block.func_213_a(0.0F, 0.25F, 0.0F, 1.0F, 1.0F, 1.0F);
                break;

            case 1: // '\001'
                block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 0.75F, 1.0F);
                break;

            case 2: // '\002'
                field_31085_i = 1;
                field_31084_j = 2;
                block.func_213_a(0.0F, 0.0F, 0.25F, 1.0F, 1.0F, 1.0F);
                break;

            case 3: // '\003'
                field_31085_i = 2;
                field_31084_j = 1;
                field_31083_k = 3;
                field_31082_l = 3;
                block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.75F);
                break;

            case 4: // '\004'
                field_31087_g = 1;
                field_31086_h = 2;
                field_31083_k = 2;
                field_31082_l = 1;
                block.func_213_a(0.25F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
                break;

            case 5: // '\005'
                field_31087_g = 2;
                field_31086_h = 1;
                field_31083_k = 1;
                field_31082_l = 2;
                block.func_213_a(0.0F, 0.0F, 0.0F, 0.75F, 1.0F, 1.0F);
                break;
            }
            func_1228_k(block, i, j, k);
            field_31087_g = 0;
            field_31086_h = 0;
            field_31085_i = 0;
            field_31084_j = 0;
            field_31083_k = 0;
            field_31082_l = 0;
            block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
        } else
        {
            switch(i1)
            {
            case 0: // '\0'
                field_31087_g = 3;
                field_31086_h = 3;
                field_31085_i = 3;
                field_31084_j = 3;
                break;

            case 2: // '\002'
                field_31085_i = 1;
                field_31084_j = 2;
                break;

            case 3: // '\003'
                field_31085_i = 2;
                field_31084_j = 1;
                field_31083_k = 3;
                field_31082_l = 3;
                break;

            case 4: // '\004'
                field_31087_g = 1;
                field_31086_h = 2;
                field_31083_k = 2;
                field_31082_l = 1;
                break;

            case 5: // '\005'
                field_31087_g = 2;
                field_31086_h = 1;
                field_31083_k = 1;
                field_31082_l = 2;
                break;
            }
            func_1228_k(block, i, j, k);
            field_31087_g = 0;
            field_31086_h = 0;
            field_31085_i = 0;
            field_31084_j = 0;
            field_31083_k = 0;
            field_31082_l = 0;
        }
        return true;
    }

    public void func_31076_a(double d, double d1, double d2, double d3, double d4, double d5, float f, double d6)
    {
        int i = 108;
        if(field_1771_b >= 0)
        {
            i = field_1771_b;
        }
        int j = (i & 0xf) << 4;
        int k = i & 0xf0;
        Tessellator tessellator = Tessellator.field_1512_a;
        double d7 = (float)(j + 0) / 256F;
        double d8 = (float)(k + 0) / 256F;
        double d9 = (((double)j + d6) - 0.01D) / 256D;
        double d10 = ((double)((float)k + 4F) - 0.01D) / 256D;
        tessellator.func_987_a(f, f, f);
        tessellator.func_983_a(d, d3, d4, d9, d8);
        tessellator.func_983_a(d, d2, d4, d7, d8);
        tessellator.func_983_a(d1, d2, d5, d7, d10);
        tessellator.func_983_a(d1, d3, d5, d9, d10);
    }

    public void func_31081_b(double d, double d1, double d2, double d3, double d4, double d5, float f, double d6)
    {
        int i = 108;
        if(field_1771_b >= 0)
        {
            i = field_1771_b;
        }
        int j = (i & 0xf) << 4;
        int k = i & 0xf0;
        Tessellator tessellator = Tessellator.field_1512_a;
        double d7 = (float)(j + 0) / 256F;
        double d8 = (float)(k + 0) / 256F;
        double d9 = (((double)j + d6) - 0.01D) / 256D;
        double d10 = ((double)((float)k + 4F) - 0.01D) / 256D;
        tessellator.func_987_a(f, f, f);
        tessellator.func_983_a(d, d2, d5, d9, d8);
        tessellator.func_983_a(d, d2, d4, d7, d8);
        tessellator.func_983_a(d1, d3, d4, d7, d10);
        tessellator.func_983_a(d1, d3, d5, d9, d10);
    }

    public void func_31077_c(double d, double d1, double d2, double d3, double d4, double d5, float f, double d6)
    {
        int i = 108;
        if(field_1771_b >= 0)
        {
            i = field_1771_b;
        }
        int j = (i & 0xf) << 4;
        int k = i & 0xf0;
        Tessellator tessellator = Tessellator.field_1512_a;
        double d7 = (float)(j + 0) / 256F;
        double d8 = (float)(k + 0) / 256F;
        double d9 = (((double)j + d6) - 0.01D) / 256D;
        double d10 = ((double)((float)k + 4F) - 0.01D) / 256D;
        tessellator.func_987_a(f, f, f);
        tessellator.func_983_a(d1, d2, d4, d9, d8);
        tessellator.func_983_a(d, d2, d4, d7, d8);
        tessellator.func_983_a(d, d3, d5, d7, d10);
        tessellator.func_983_a(d1, d3, d5, d9, d10);
    }

    public void func_31079_a(Block block, int i, int j, int k, boolean flag)
    {
        field_1773_d = true;
        func_31080_c(block, i, j, k, flag);
        field_1773_d = false;
    }

    public boolean func_31080_c(Block block, int i, int j, int k, boolean flag)
    {
        int l = field_1772_a.func_602_e(i, j, k);
        int i1 = BlockPistonExtension.func_31050_c(l);
        float f = block.func_241_c(field_1772_a, i, j, k);
        float f1 = flag ? 1.0F : 0.5F;
        double d = flag ? 16D : 8D;
        switch(i1)
        {
        case 0: // '\0'
            field_31087_g = 3;
            field_31086_h = 3;
            field_31085_i = 3;
            field_31084_j = 3;
            block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 0.25F, 1.0F);
            func_1228_k(block, i, j, k);
            func_31076_a((float)i + 0.375F, (float)i + 0.625F, (float)j + 0.25F, (float)j + 0.25F + f1, (float)k + 0.625F, (float)k + 0.625F, f * 0.8F, d);
            func_31076_a((float)i + 0.625F, (float)i + 0.375F, (float)j + 0.25F, (float)j + 0.25F + f1, (float)k + 0.375F, (float)k + 0.375F, f * 0.8F, d);
            func_31076_a((float)i + 0.375F, (float)i + 0.375F, (float)j + 0.25F, (float)j + 0.25F + f1, (float)k + 0.375F, (float)k + 0.625F, f * 0.6F, d);
            func_31076_a((float)i + 0.625F, (float)i + 0.625F, (float)j + 0.25F, (float)j + 0.25F + f1, (float)k + 0.625F, (float)k + 0.375F, f * 0.6F, d);
            break;

        case 1: // '\001'
            block.func_213_a(0.0F, 0.75F, 0.0F, 1.0F, 1.0F, 1.0F);
            func_1228_k(block, i, j, k);
            func_31076_a((float)i + 0.375F, (float)i + 0.625F, (((float)j - 0.25F) + 1.0F) - f1, ((float)j - 0.25F) + 1.0F, (float)k + 0.625F, (float)k + 0.625F, f * 0.8F, d);
            func_31076_a((float)i + 0.625F, (float)i + 0.375F, (((float)j - 0.25F) + 1.0F) - f1, ((float)j - 0.25F) + 1.0F, (float)k + 0.375F, (float)k + 0.375F, f * 0.8F, d);
            func_31076_a((float)i + 0.375F, (float)i + 0.375F, (((float)j - 0.25F) + 1.0F) - f1, ((float)j - 0.25F) + 1.0F, (float)k + 0.375F, (float)k + 0.625F, f * 0.6F, d);
            func_31076_a((float)i + 0.625F, (float)i + 0.625F, (((float)j - 0.25F) + 1.0F) - f1, ((float)j - 0.25F) + 1.0F, (float)k + 0.625F, (float)k + 0.375F, f * 0.6F, d);
            break;

        case 2: // '\002'
            field_31085_i = 1;
            field_31084_j = 2;
            block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.25F);
            func_1228_k(block, i, j, k);
            func_31081_b((float)i + 0.375F, (float)i + 0.375F, (float)j + 0.625F, (float)j + 0.375F, (float)k + 0.25F, (float)k + 0.25F + f1, f * 0.6F, d);
            func_31081_b((float)i + 0.625F, (float)i + 0.625F, (float)j + 0.375F, (float)j + 0.625F, (float)k + 0.25F, (float)k + 0.25F + f1, f * 0.6F, d);
            func_31081_b((float)i + 0.375F, (float)i + 0.625F, (float)j + 0.375F, (float)j + 0.375F, (float)k + 0.25F, (float)k + 0.25F + f1, f * 0.5F, d);
            func_31081_b((float)i + 0.625F, (float)i + 0.375F, (float)j + 0.625F, (float)j + 0.625F, (float)k + 0.25F, (float)k + 0.25F + f1, f, d);
            break;

        case 3: // '\003'
            field_31085_i = 2;
            field_31084_j = 1;
            field_31083_k = 3;
            field_31082_l = 3;
            block.func_213_a(0.0F, 0.0F, 0.75F, 1.0F, 1.0F, 1.0F);
            func_1228_k(block, i, j, k);
            func_31081_b((float)i + 0.375F, (float)i + 0.375F, (float)j + 0.625F, (float)j + 0.375F, (((float)k - 0.25F) + 1.0F) - f1, ((float)k - 0.25F) + 1.0F, f * 0.6F, d);
            func_31081_b((float)i + 0.625F, (float)i + 0.625F, (float)j + 0.375F, (float)j + 0.625F, (((float)k - 0.25F) + 1.0F) - f1, ((float)k - 0.25F) + 1.0F, f * 0.6F, d);
            func_31081_b((float)i + 0.375F, (float)i + 0.625F, (float)j + 0.375F, (float)j + 0.375F, (((float)k - 0.25F) + 1.0F) - f1, ((float)k - 0.25F) + 1.0F, f * 0.5F, d);
            func_31081_b((float)i + 0.625F, (float)i + 0.375F, (float)j + 0.625F, (float)j + 0.625F, (((float)k - 0.25F) + 1.0F) - f1, ((float)k - 0.25F) + 1.0F, f, d);
            break;

        case 4: // '\004'
            field_31087_g = 1;
            field_31086_h = 2;
            field_31083_k = 2;
            field_31082_l = 1;
            block.func_213_a(0.0F, 0.0F, 0.0F, 0.25F, 1.0F, 1.0F);
            func_1228_k(block, i, j, k);
            func_31077_c((float)i + 0.25F, (float)i + 0.25F + f1, (float)j + 0.375F, (float)j + 0.375F, (float)k + 0.625F, (float)k + 0.375F, f * 0.5F, d);
            func_31077_c((float)i + 0.25F, (float)i + 0.25F + f1, (float)j + 0.625F, (float)j + 0.625F, (float)k + 0.375F, (float)k + 0.625F, f, d);
            func_31077_c((float)i + 0.25F, (float)i + 0.25F + f1, (float)j + 0.375F, (float)j + 0.625F, (float)k + 0.375F, (float)k + 0.375F, f * 0.6F, d);
            func_31077_c((float)i + 0.25F, (float)i + 0.25F + f1, (float)j + 0.625F, (float)j + 0.375F, (float)k + 0.625F, (float)k + 0.625F, f * 0.6F, d);
            break;

        case 5: // '\005'
            field_31087_g = 2;
            field_31086_h = 1;
            field_31083_k = 1;
            field_31082_l = 2;
            block.func_213_a(0.75F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
            func_1228_k(block, i, j, k);
            func_31077_c((((float)i - 0.25F) + 1.0F) - f1, ((float)i - 0.25F) + 1.0F, (float)j + 0.375F, (float)j + 0.375F, (float)k + 0.625F, (float)k + 0.375F, f * 0.5F, d);
            func_31077_c((((float)i - 0.25F) + 1.0F) - f1, ((float)i - 0.25F) + 1.0F, (float)j + 0.625F, (float)j + 0.625F, (float)k + 0.375F, (float)k + 0.625F, f, d);
            func_31077_c((((float)i - 0.25F) + 1.0F) - f1, ((float)i - 0.25F) + 1.0F, (float)j + 0.375F, (float)j + 0.625F, (float)k + 0.375F, (float)k + 0.375F, f * 0.6F, d);
            func_31077_c((((float)i - 0.25F) + 1.0F) - f1, ((float)i - 0.25F) + 1.0F, (float)j + 0.625F, (float)j + 0.375F, (float)k + 0.625F, (float)k + 0.625F, f * 0.6F, d);
            break;
        }
        field_31087_g = 0;
        field_31086_h = 0;
        field_31085_i = 0;
        field_31084_j = 0;
        field_31083_k = 0;
        field_31082_l = 0;
        block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
        return true;
    }

    public boolean func_1229_c(Block block, int i, int j, int k)
    {
        int l = field_1772_a.func_602_e(i, j, k);
        int i1 = l & 7;
        boolean flag = (l & 8) > 0;
        Tessellator tessellator = Tessellator.field_1512_a;
        boolean flag1 = field_1771_b >= 0;
        if(!flag1)
        {
            field_1771_b = Block.field_335_x.field_378_bb;
        }
        float f = 0.25F;
        float f1 = 0.1875F;
        float f2 = 0.1875F;
        if(i1 == 5)
        {
            block.func_213_a(0.5F - f1, 0.0F, 0.5F - f, 0.5F + f1, f2, 0.5F + f);
        } else
        if(i1 == 6)
        {
            block.func_213_a(0.5F - f, 0.0F, 0.5F - f1, 0.5F + f, f2, 0.5F + f1);
        } else
        if(i1 == 4)
        {
            block.func_213_a(0.5F - f1, 0.5F - f, 1.0F - f2, 0.5F + f1, 0.5F + f, 1.0F);
        } else
        if(i1 == 3)
        {
            block.func_213_a(0.5F - f1, 0.5F - f, 0.0F, 0.5F + f1, 0.5F + f, f2);
        } else
        if(i1 == 2)
        {
            block.func_213_a(1.0F - f2, 0.5F - f, 0.5F - f1, 1.0F, 0.5F + f, 0.5F + f1);
        } else
        if(i1 == 1)
        {
            block.func_213_a(0.0F, 0.5F - f, 0.5F - f1, f2, 0.5F + f, 0.5F + f1);
        }
        func_1228_k(block, i, j, k);
        if(!flag1)
        {
            field_1771_b = -1;
        }
        tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j, k));
        float f3 = 1.0F;
        if(Block.field_339_t[block.field_376_bc] > 0)
        {
            f3 = 1.0F;
        }
        tessellator.func_987_a(f3, f3, f3);
        int j1 = block.func_218_a(0);
        if(field_1771_b >= 0)
        {
            j1 = field_1771_b;
        }
        int k1 = (j1 & 0xf) << 4;
        int l1 = j1 & 0xf0;
        float f4 = (float)k1 / 256F;
        float f5 = ((float)k1 + 15.99F) / 256F;
        float f6 = (float)l1 / 256F;
        float f7 = ((float)l1 + 15.99F) / 256F;
        Vec3D avec3d[] = new Vec3D[8];
        float f8 = 0.0625F;
        float f9 = 0.0625F;
        float f10 = 0.625F;
        avec3d[0] = Vec3D.func_1248_b(-f8, 0.0D, -f9);
        avec3d[1] = Vec3D.func_1248_b(f8, 0.0D, -f9);
        avec3d[2] = Vec3D.func_1248_b(f8, 0.0D, f9);
        avec3d[3] = Vec3D.func_1248_b(-f8, 0.0D, f9);
        avec3d[4] = Vec3D.func_1248_b(-f8, f10, -f9);
        avec3d[5] = Vec3D.func_1248_b(f8, f10, -f9);
        avec3d[6] = Vec3D.func_1248_b(f8, f10, f9);
        avec3d[7] = Vec3D.func_1248_b(-f8, f10, f9);
        for(int i2 = 0; i2 < 8; i2++)
        {
            if(flag)
            {
                avec3d[i2].field_1779_c -= 0.0625D;
                avec3d[i2].func_1258_a(0.6981317F);
            } else
            {
                avec3d[i2].field_1779_c += 0.0625D;
                avec3d[i2].func_1258_a(-0.6981317F);
            }
            if(i1 == 6)
            {
                avec3d[i2].func_1249_b(1.570796F);
            }
            if(i1 < 5)
            {
                avec3d[i2].field_1775_b -= 0.375D;
                avec3d[i2].func_1258_a(1.570796F);
                if(i1 == 4)
                {
                    avec3d[i2].func_1249_b(0.0F);
                }
                if(i1 == 3)
                {
                    avec3d[i2].func_1249_b(3.141593F);
                }
                if(i1 == 2)
                {
                    avec3d[i2].func_1249_b(1.570796F);
                }
                if(i1 == 1)
                {
                    avec3d[i2].func_1249_b(-1.570796F);
                }
                avec3d[i2].field_1776_a += (double)i + 0.5D;
                avec3d[i2].field_1775_b += (float)j + 0.5F;
                avec3d[i2].field_1779_c += (double)k + 0.5D;
            } else
            {
                avec3d[i2].field_1776_a += (double)i + 0.5D;
                avec3d[i2].field_1775_b += (float)j + 0.125F;
                avec3d[i2].field_1779_c += (double)k + 0.5D;
            }
        }

        Vec3D vec3d = null;
        Vec3D vec3d1 = null;
        Vec3D vec3d2 = null;
        Vec3D vec3d3 = null;
        for(int j2 = 0; j2 < 6; j2++)
        {
            if(j2 == 0)
            {
                f4 = (float)(k1 + 7) / 256F;
                f5 = ((float)(k1 + 9) - 0.01F) / 256F;
                f6 = (float)(l1 + 6) / 256F;
                f7 = ((float)(l1 + 8) - 0.01F) / 256F;
            } else
            if(j2 == 2)
            {
                f4 = (float)(k1 + 7) / 256F;
                f5 = ((float)(k1 + 9) - 0.01F) / 256F;
                f6 = (float)(l1 + 6) / 256F;
                f7 = ((float)(l1 + 16) - 0.01F) / 256F;
            }
            if(j2 == 0)
            {
                vec3d = avec3d[0];
                vec3d1 = avec3d[1];
                vec3d2 = avec3d[2];
                vec3d3 = avec3d[3];
            } else
            if(j2 == 1)
            {
                vec3d = avec3d[7];
                vec3d1 = avec3d[6];
                vec3d2 = avec3d[5];
                vec3d3 = avec3d[4];
            } else
            if(j2 == 2)
            {
                vec3d = avec3d[1];
                vec3d1 = avec3d[0];
                vec3d2 = avec3d[4];
                vec3d3 = avec3d[5];
            } else
            if(j2 == 3)
            {
                vec3d = avec3d[2];
                vec3d1 = avec3d[1];
                vec3d2 = avec3d[5];
                vec3d3 = avec3d[6];
            } else
            if(j2 == 4)
            {
                vec3d = avec3d[3];
                vec3d1 = avec3d[2];
                vec3d2 = avec3d[6];
                vec3d3 = avec3d[7];
            } else
            if(j2 == 5)
            {
                vec3d = avec3d[0];
                vec3d1 = avec3d[3];
                vec3d2 = avec3d[7];
                vec3d3 = avec3d[4];
            }
            tessellator.func_983_a(vec3d.field_1776_a, vec3d.field_1775_b, vec3d.field_1779_c, f4, f7);
            tessellator.func_983_a(vec3d1.field_1776_a, vec3d1.field_1775_b, vec3d1.field_1779_c, f5, f7);
            tessellator.func_983_a(vec3d2.field_1776_a, vec3d2.field_1775_b, vec3d2.field_1779_c, f5, f6);
            tessellator.func_983_a(vec3d3.field_1776_a, vec3d3.field_1775_b, vec3d3.field_1779_c, f4, f6);
        }

        return true;
    }

    public boolean func_35921_b(int i, int j, int k, int l)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        for(int i1 = 0; i1 < 6; i1++)
        {
            int j1 = j;
            int k1 = k;
            int l1 = l;
            if((i1 == 2 || i1 == 3) && (i - 1) / 3 == 1 || (i1 == 4 || i1 == 5) && (i - 1) % 3 == 1)
            {
                continue;
            }
            int i2 = 252;
            int j2 = 0;
            if(i == 2)
            {
                j2 = 0;
            }
            if(i == 4)
            {
                j2 = 1;
            }
            if(i == 8)
            {
                j2 = 2;
            }
            if(i == 6)
            {
                j2 = 3;
            }
            if(i == 1)
            {
                j2 = 0;
            }
            if(i == 3)
            {
                j2 = 3;
            }
            if(i == 7)
            {
                j2 = 1;
            }
            if(i == 9)
            {
                j2 = 2;
            }
            if(i != 2 && i != 4 && i != 6 && i != 8)
            {
                if(i1 >= 2)
                {
                    if(i == 1)
                    {
                        i2--;
                        if(i1 == 5 || i1 == 3)
                        {
                            continue;
                        }
                        if(i1 == 4)
                        {
                            j2++;
                        }
                    } else
                    if(i == 3)
                    {
                        i2--;
                        if(i1 == 5 || i1 == 2)
                        {
                            continue;
                        }
                        if(i1 == 3)
                        {
                            j2++;
                        }
                    } else
                    if(i == 7)
                    {
                        i2--;
                        if(i1 == 4 || i1 == 3)
                        {
                            continue;
                        }
                        if(i1 == 2)
                        {
                            j2++;
                        }
                    } else
                    if(i == 9)
                    {
                        i2--;
                        if(i1 == 4 || i1 == 2)
                        {
                            continue;
                        }
                        if(i1 == 5)
                        {
                            j2++;
                        }
                    }
                }
            } else
            {
                i2--;
            }
            if(i1 == 0)
            {
                k1 = k + 1;
            }
            if(i1 == 1)
            {
                k1--;
            }
            if(i1 == 2)
            {
                j1 = j + 1;
            }
            if(i1 == 3)
            {
                j1--;
            }
            if(i1 == 4)
            {
                l1 = l + 1;
            }
            if(i1 == 5)
            {
                l1--;
            }
            if(!field_35942_c[field_1772_a.func_600_a(j1, k1, l1)])
            {
                char c = '\u4000';
                tessellator.func_990_b(c);
                tessellator.func_35835_b(field_1772_a.func_35451_b(j1, k1, l1, 2));
                int k2 = (i2 & 0xf) << 4;
                int l2 = i2 & 0xf0;
                double d = ((double)k2 + 0.0D) / 256D;
                double d1 = ((double)k2 + 15.99D) / 256D;
                double d2 = (float)l2 / 256F;
                double d3 = ((float)l2 + 15.99F) / 256F;
                double d4 = d;
                double d5 = d1;
                double d6 = d1;
                double d7 = d;
                double d8 = d3;
                double d9 = d3;
                double d10 = d2;
                double d11 = d2;
                if(j2 != 0)
                {
                    if(j2 == 1)
                    {
                        d4 = d;
                        d5 = d;
                        d6 = d1;
                        d7 = d1;
                        d8 = d2;
                        d9 = d3;
                        d10 = d3;
                        d11 = d2;
                    } else
                    if(j2 == 2)
                    {
                        d4 = d1;
                        d5 = d;
                        d6 = d;
                        d7 = d1;
                        d8 = d2;
                        d9 = d2;
                        d10 = d3;
                        d11 = d3;
                    } else
                    if(j2 == 3)
                    {
                        d4 = d1;
                        d5 = d1;
                        d6 = d;
                        d7 = d;
                        d8 = d3;
                        d9 = d2;
                        d10 = d2;
                        d11 = d3;
                    }
                }
                double d12 = 0.0031250000465661287D;
                double d13 = 0.0D - d12;
                double d14 = 1.0D + d12;
                if(i1 == 0)
                {
                    tessellator.func_983_a((double)j + d13, (double)(k + 1) + d12, (double)l + d13, d5, d9);
                    tessellator.func_983_a((double)j + d13, (double)(k + 1) + d12, (double)l + d14, d6, d10);
                    tessellator.func_983_a((double)j + d14, (double)(k + 1) + d12, (double)l + d14, d7, d11);
                    tessellator.func_983_a((double)j + d14, (double)(k + 1) + d12, (double)l + d13, d4, d8);
                } else
                if(i1 == 1)
                {
                    tessellator.func_983_a((double)j + d13, (double)(k + 0) - d12, (double)l + d14, d6, d10);
                    tessellator.func_983_a((double)j + d13, (double)(k + 0) - d12, (double)l + d13, d5, d9);
                    tessellator.func_983_a((double)j + d14, (double)(k + 0) - d12, (double)l + d13, d4, d8);
                    tessellator.func_983_a((double)j + d14, (double)(k + 0) - d12, (double)l + d14, d7, d11);
                } else
                if(i1 == 2)
                {
                    tessellator.func_983_a((double)(j + 1) + d12, (double)k + d13, (double)l + d14, d6, d10);
                    tessellator.func_983_a((double)(j + 1) + d12, (double)k + d13, (double)l + d13, d5, d9);
                    tessellator.func_983_a((double)(j + 1) + d12, (double)k + d14, (double)l + d13, d4, d8);
                    tessellator.func_983_a((double)(j + 1) + d12, (double)k + d14, (double)l + d14, d7, d11);
                } else
                if(i1 == 3)
                {
                    tessellator.func_983_a((double)(j + 0) - d12, (double)k + d13, (double)l + d13, d5, d9);
                    tessellator.func_983_a((double)(j + 0) - d12, (double)k + d13, (double)l + d14, d6, d10);
                    tessellator.func_983_a((double)(j + 0) - d12, (double)k + d14, (double)l + d14, d7, d11);
                    tessellator.func_983_a((double)(j + 0) - d12, (double)k + d14, (double)l + d13, d4, d8);
                } else
                if(i1 == 4)
                {
                    tessellator.func_983_a((double)j + d13, (double)k + d14, (double)(l + 1) + d12, d6, d10);
                    tessellator.func_983_a((double)j + d13, (double)k + d13, (double)(l + 1) + d12, d5, d9);
                    tessellator.func_983_a((double)j + d14, (double)k + d13, (double)(l + 1) + d12, d4, d8);
                    tessellator.func_983_a((double)j + d14, (double)k + d14, (double)(l + 1) + d12, d7, d11);
                } else
                if(i1 == 5)
                {
                    tessellator.func_983_a((double)j + d14, (double)k + d13, (double)(l + 0) - d12, d4, d8);
                    tessellator.func_983_a((double)j + d13, (double)k + d13, (double)(l + 0) - d12, d5, d9);
                    tessellator.func_983_a((double)j + d13, (double)k + d14, (double)(l + 0) - d12, d6, d10);
                    tessellator.func_983_a((double)j + d14, (double)k + d14, (double)(l + 0) - d12, d7, d11);
                }
            }
        }

        return true;
    }

    public boolean func_1235_d(Block block, int i, int j, int k)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int l = block.func_218_a(0);
        if(field_1771_b >= 0)
        {
            l = field_1771_b;
        }
        tessellator.func_987_a(1.0F, 1.0F, 1.0F);
        tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j, k));
        int i1 = (l & 0xf) << 4;
        int j1 = l & 0xf0;
        double d = (float)i1 / 256F;
        double d1 = ((float)i1 + 15.99F) / 256F;
        double d2 = (float)j1 / 256F;
        double d3 = ((float)j1 + 15.99F) / 256F;
        float f = 1.4F;
        if(!field_1772_a.func_28100_h(i, j - 1, k) && !Block.field_402_as.func_261_b(field_1772_a, i, j - 1, k))
        {
            float f1 = 0.2F;
            float f2 = 0.0625F;
            if((i + j + k & 1) == 1)
            {
                d = (float)i1 / 256F;
                d1 = ((float)i1 + 15.99F) / 256F;
                d2 = (float)(j1 + 16) / 256F;
                d3 = ((float)j1 + 15.99F + 16F) / 256F;
            }
            if((i / 2 + j / 2 + k / 2 & 1) == 1)
            {
                double d4 = d1;
                d1 = d;
                d = d4;
            }
            if(Block.field_402_as.func_261_b(field_1772_a, i - 1, j, k))
            {
                tessellator.func_983_a((float)i + f1, (float)j + f + f2, k + 1, d1, d2);
                tessellator.func_983_a(i + 0, (float)(j + 0) + f2, k + 1, d1, d3);
                tessellator.func_983_a(i + 0, (float)(j + 0) + f2, k + 0, d, d3);
                tessellator.func_983_a((float)i + f1, (float)j + f + f2, k + 0, d, d2);
                tessellator.func_983_a((float)i + f1, (float)j + f + f2, k + 0, d, d2);
                tessellator.func_983_a(i + 0, (float)(j + 0) + f2, k + 0, d, d3);
                tessellator.func_983_a(i + 0, (float)(j + 0) + f2, k + 1, d1, d3);
                tessellator.func_983_a((float)i + f1, (float)j + f + f2, k + 1, d1, d2);
            }
            if(Block.field_402_as.func_261_b(field_1772_a, i + 1, j, k))
            {
                tessellator.func_983_a((float)(i + 1) - f1, (float)j + f + f2, k + 0, d, d2);
                tessellator.func_983_a((i + 1) - 0, (float)(j + 0) + f2, k + 0, d, d3);
                tessellator.func_983_a((i + 1) - 0, (float)(j + 0) + f2, k + 1, d1, d3);
                tessellator.func_983_a((float)(i + 1) - f1, (float)j + f + f2, k + 1, d1, d2);
                tessellator.func_983_a((float)(i + 1) - f1, (float)j + f + f2, k + 1, d1, d2);
                tessellator.func_983_a((i + 1) - 0, (float)(j + 0) + f2, k + 1, d1, d3);
                tessellator.func_983_a((i + 1) - 0, (float)(j + 0) + f2, k + 0, d, d3);
                tessellator.func_983_a((float)(i + 1) - f1, (float)j + f + f2, k + 0, d, d2);
            }
            if(Block.field_402_as.func_261_b(field_1772_a, i, j, k - 1))
            {
                tessellator.func_983_a(i + 0, (float)j + f + f2, (float)k + f1, d1, d2);
                tessellator.func_983_a(i + 0, (float)(j + 0) + f2, k + 0, d1, d3);
                tessellator.func_983_a(i + 1, (float)(j + 0) + f2, k + 0, d, d3);
                tessellator.func_983_a(i + 1, (float)j + f + f2, (float)k + f1, d, d2);
                tessellator.func_983_a(i + 1, (float)j + f + f2, (float)k + f1, d, d2);
                tessellator.func_983_a(i + 1, (float)(j + 0) + f2, k + 0, d, d3);
                tessellator.func_983_a(i + 0, (float)(j + 0) + f2, k + 0, d1, d3);
                tessellator.func_983_a(i + 0, (float)j + f + f2, (float)k + f1, d1, d2);
            }
            if(Block.field_402_as.func_261_b(field_1772_a, i, j, k + 1))
            {
                tessellator.func_983_a(i + 1, (float)j + f + f2, (float)(k + 1) - f1, d, d2);
                tessellator.func_983_a(i + 1, (float)(j + 0) + f2, (k + 1) - 0, d, d3);
                tessellator.func_983_a(i + 0, (float)(j + 0) + f2, (k + 1) - 0, d1, d3);
                tessellator.func_983_a(i + 0, (float)j + f + f2, (float)(k + 1) - f1, d1, d2);
                tessellator.func_983_a(i + 0, (float)j + f + f2, (float)(k + 1) - f1, d1, d2);
                tessellator.func_983_a(i + 0, (float)(j + 0) + f2, (k + 1) - 0, d1, d3);
                tessellator.func_983_a(i + 1, (float)(j + 0) + f2, (k + 1) - 0, d, d3);
                tessellator.func_983_a(i + 1, (float)j + f + f2, (float)(k + 1) - f1, d, d2);
            }
            if(Block.field_402_as.func_261_b(field_1772_a, i, j + 1, k))
            {
                double d5 = (double)i + 0.5D + 0.5D;
                double d7 = ((double)i + 0.5D) - 0.5D;
                double d9 = (double)k + 0.5D + 0.5D;
                double d11 = ((double)k + 0.5D) - 0.5D;
                double d13 = ((double)i + 0.5D) - 0.5D;
                double d15 = (double)i + 0.5D + 0.5D;
                double d17 = ((double)k + 0.5D) - 0.5D;
                double d20 = (double)k + 0.5D + 0.5D;
                d = (float)i1 / 256F;
                d1 = ((float)i1 + 15.99F) / 256F;
                d2 = (float)j1 / 256F;
                d3 = ((float)j1 + 15.99F) / 256F;
                j++;
                f = -0.2F;
                if((i + j + k & 1) == 0)
                {
                    tessellator.func_983_a(d13, (float)j + f, k + 0, d1, d2);
                    tessellator.func_983_a(d5, j + 0, k + 0, d1, d3);
                    tessellator.func_983_a(d5, j + 0, k + 1, d, d3);
                    tessellator.func_983_a(d13, (float)j + f, k + 1, d, d2);
                    d = (float)i1 / 256F;
                    d1 = ((float)i1 + 15.99F) / 256F;
                    d2 = (float)(j1 + 16) / 256F;
                    d3 = ((float)j1 + 15.99F + 16F) / 256F;
                    tessellator.func_983_a(d15, (float)j + f, k + 1, d1, d2);
                    tessellator.func_983_a(d7, j + 0, k + 1, d1, d3);
                    tessellator.func_983_a(d7, j + 0, k + 0, d, d3);
                    tessellator.func_983_a(d15, (float)j + f, k + 0, d, d2);
                } else
                {
                    tessellator.func_983_a(i + 0, (float)j + f, d20, d1, d2);
                    tessellator.func_983_a(i + 0, j + 0, d11, d1, d3);
                    tessellator.func_983_a(i + 1, j + 0, d11, d, d3);
                    tessellator.func_983_a(i + 1, (float)j + f, d20, d, d2);
                    d = (float)i1 / 256F;
                    d1 = ((float)i1 + 15.99F) / 256F;
                    d2 = (float)(j1 + 16) / 256F;
                    d3 = ((float)j1 + 15.99F + 16F) / 256F;
                    tessellator.func_983_a(i + 1, (float)j + f, d17, d1, d2);
                    tessellator.func_983_a(i + 1, j + 0, d9, d1, d3);
                    tessellator.func_983_a(i + 0, j + 0, d9, d, d3);
                    tessellator.func_983_a(i + 0, (float)j + f, d17, d, d2);
                }
            }
        } else
        {
            double d19 = (double)i + 0.5D + 0.20000000000000001D;
            double d6 = ((double)i + 0.5D) - 0.20000000000000001D;
            double d8 = (double)k + 0.5D + 0.20000000000000001D;
            double d10 = ((double)k + 0.5D) - 0.20000000000000001D;
            double d12 = ((double)i + 0.5D) - 0.29999999999999999D;
            double d14 = (double)i + 0.5D + 0.29999999999999999D;
            double d16 = ((double)k + 0.5D) - 0.29999999999999999D;
            double d18 = (double)k + 0.5D + 0.29999999999999999D;
            tessellator.func_983_a(d12, (float)j + f, k + 1, d1, d2);
            tessellator.func_983_a(d19, j + 0, k + 1, d1, d3);
            tessellator.func_983_a(d19, j + 0, k + 0, d, d3);
            tessellator.func_983_a(d12, (float)j + f, k + 0, d, d2);
            tessellator.func_983_a(d14, (float)j + f, k + 0, d1, d2);
            tessellator.func_983_a(d6, j + 0, k + 0, d1, d3);
            tessellator.func_983_a(d6, j + 0, k + 1, d, d3);
            tessellator.func_983_a(d14, (float)j + f, k + 1, d, d2);
            d = (float)i1 / 256F;
            d1 = ((float)i1 + 15.99F) / 256F;
            d2 = (float)(j1 + 16) / 256F;
            d3 = ((float)j1 + 15.99F + 16F) / 256F;
            tessellator.func_983_a(i + 1, (float)j + f, d18, d1, d2);
            tessellator.func_983_a(i + 1, j + 0, d10, d1, d3);
            tessellator.func_983_a(i + 0, j + 0, d10, d, d3);
            tessellator.func_983_a(i + 0, (float)j + f, d18, d, d2);
            tessellator.func_983_a(i + 0, (float)j + f, d16, d1, d2);
            tessellator.func_983_a(i + 0, j + 0, d8, d1, d3);
            tessellator.func_983_a(i + 1, j + 0, d8, d, d3);
            tessellator.func_983_a(i + 1, (float)j + f, d16, d, d2);
            d19 = ((double)i + 0.5D) - 0.5D;
            d6 = (double)i + 0.5D + 0.5D;
            d8 = ((double)k + 0.5D) - 0.5D;
            d10 = (double)k + 0.5D + 0.5D;
            d12 = ((double)i + 0.5D) - 0.40000000000000002D;
            d14 = (double)i + 0.5D + 0.40000000000000002D;
            d16 = ((double)k + 0.5D) - 0.40000000000000002D;
            d18 = (double)k + 0.5D + 0.40000000000000002D;
            tessellator.func_983_a(d12, (float)j + f, k + 0, d, d2);
            tessellator.func_983_a(d19, j + 0, k + 0, d, d3);
            tessellator.func_983_a(d19, j + 0, k + 1, d1, d3);
            tessellator.func_983_a(d12, (float)j + f, k + 1, d1, d2);
            tessellator.func_983_a(d14, (float)j + f, k + 1, d, d2);
            tessellator.func_983_a(d6, j + 0, k + 1, d, d3);
            tessellator.func_983_a(d6, j + 0, k + 0, d1, d3);
            tessellator.func_983_a(d14, (float)j + f, k + 0, d1, d2);
            d = (float)i1 / 256F;
            d1 = ((float)i1 + 15.99F) / 256F;
            d2 = (float)j1 / 256F;
            d3 = ((float)j1 + 15.99F) / 256F;
            tessellator.func_983_a(i + 0, (float)j + f, d18, d, d2);
            tessellator.func_983_a(i + 0, j + 0, d10, d, d3);
            tessellator.func_983_a(i + 1, j + 0, d10, d1, d3);
            tessellator.func_983_a(i + 1, (float)j + f, d18, d1, d2);
            tessellator.func_983_a(i + 1, (float)j + f, d16, d, d2);
            tessellator.func_983_a(i + 1, j + 0, d8, d, d3);
            tessellator.func_983_a(i + 0, j + 0, d8, d1, d3);
            tessellator.func_983_a(i + 0, (float)j + f, d16, d1, d2);
        }
        return true;
    }

    public boolean func_1242_e(Block block, int i, int j, int k)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int l = field_1772_a.func_602_e(i, j, k);
        int i1 = block.func_232_a(1, l);
        if(field_1771_b >= 0)
        {
            i1 = field_1771_b;
        }
        tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j, k));
        float f = 1.0F;
        float f1 = (float)l / 15F;
        float f2 = f1 * 0.6F + 0.4F;
        if(l == 0)
        {
            f2 = 0.3F;
        }
        float f3 = f1 * f1 * 0.7F - 0.5F;
        float f4 = f1 * f1 * 0.6F - 0.7F;
        if(f3 < 0.0F)
        {
            f3 = 0.0F;
        }
        if(f4 < 0.0F)
        {
            f4 = 0.0F;
        }
        tessellator.func_987_a(f2, f3, f4);
        int j1 = (i1 & 0xf) << 4;
        int k1 = i1 & 0xf0;
        double d = (float)j1 / 256F;
        double d2 = ((float)j1 + 15.99F) / 256F;
        double d4 = (float)k1 / 256F;
        double d6 = ((float)k1 + 15.99F) / 256F;
        boolean flag = BlockRedstoneWire.func_279_b(field_1772_a, i - 1, j, k, 1) || !field_1772_a.func_28100_h(i - 1, j, k) && BlockRedstoneWire.func_279_b(field_1772_a, i - 1, j - 1, k, -1);
        boolean flag1 = BlockRedstoneWire.func_279_b(field_1772_a, i + 1, j, k, 3) || !field_1772_a.func_28100_h(i + 1, j, k) && BlockRedstoneWire.func_279_b(field_1772_a, i + 1, j - 1, k, -1);
        boolean flag2 = BlockRedstoneWire.func_279_b(field_1772_a, i, j, k - 1, 2) || !field_1772_a.func_28100_h(i, j, k - 1) && BlockRedstoneWire.func_279_b(field_1772_a, i, j - 1, k - 1, -1);
        boolean flag3 = BlockRedstoneWire.func_279_b(field_1772_a, i, j, k + 1, 0) || !field_1772_a.func_28100_h(i, j, k + 1) && BlockRedstoneWire.func_279_b(field_1772_a, i, j - 1, k + 1, -1);
        if(!field_1772_a.func_28100_h(i, j + 1, k))
        {
            if(field_1772_a.func_28100_h(i - 1, j, k) && BlockRedstoneWire.func_279_b(field_1772_a, i - 1, j + 1, k, -1))
            {
                flag = true;
            }
            if(field_1772_a.func_28100_h(i + 1, j, k) && BlockRedstoneWire.func_279_b(field_1772_a, i + 1, j + 1, k, -1))
            {
                flag1 = true;
            }
            if(field_1772_a.func_28100_h(i, j, k - 1) && BlockRedstoneWire.func_279_b(field_1772_a, i, j + 1, k - 1, -1))
            {
                flag2 = true;
            }
            if(field_1772_a.func_28100_h(i, j, k + 1) && BlockRedstoneWire.func_279_b(field_1772_a, i, j + 1, k + 1, -1))
            {
                flag3 = true;
            }
        }
        float f5 = i + 0;
        float f6 = i + 1;
        float f7 = k + 0;
        float f8 = k + 1;
        byte byte0 = 0;
        if((flag || flag1) && !flag2 && !flag3)
        {
            byte0 = 1;
        }
        if((flag2 || flag3) && !flag1 && !flag)
        {
            byte0 = 2;
        }
        if(byte0 != 0)
        {
            d = (float)(j1 + 16) / 256F;
            d2 = ((float)(j1 + 16) + 15.99F) / 256F;
            d4 = (float)k1 / 256F;
            d6 = ((float)k1 + 15.99F) / 256F;
        }
        if(byte0 == 0)
        {
            if(!flag)
            {
                f5 += 0.3125F;
            }
            if(!flag)
            {
                d += 0.01953125D;
            }
            if(!flag1)
            {
                f6 -= 0.3125F;
            }
            if(!flag1)
            {
                d2 -= 0.01953125D;
            }
            if(!flag2)
            {
                f7 += 0.3125F;
            }
            if(!flag2)
            {
                d4 += 0.01953125D;
            }
            if(!flag3)
            {
                f8 -= 0.3125F;
            }
            if(!flag3)
            {
                d6 -= 0.01953125D;
            }
            tessellator.func_983_a(f6, (double)j + 0.015625D, f8, d2, d6);
            tessellator.func_983_a(f6, (double)j + 0.015625D, f7, d2, d4);
            tessellator.func_983_a(f5, (double)j + 0.015625D, f7, d, d4);
            tessellator.func_983_a(f5, (double)j + 0.015625D, f8, d, d6);
            tessellator.func_987_a(f, f, f);
            tessellator.func_983_a(f6, (double)j + 0.015625D, f8, d2, d6 + 0.0625D);
            tessellator.func_983_a(f6, (double)j + 0.015625D, f7, d2, d4 + 0.0625D);
            tessellator.func_983_a(f5, (double)j + 0.015625D, f7, d, d4 + 0.0625D);
            tessellator.func_983_a(f5, (double)j + 0.015625D, f8, d, d6 + 0.0625D);
        } else
        if(byte0 == 1)
        {
            tessellator.func_983_a(f6, (double)j + 0.015625D, f8, d2, d6);
            tessellator.func_983_a(f6, (double)j + 0.015625D, f7, d2, d4);
            tessellator.func_983_a(f5, (double)j + 0.015625D, f7, d, d4);
            tessellator.func_983_a(f5, (double)j + 0.015625D, f8, d, d6);
            tessellator.func_987_a(f, f, f);
            tessellator.func_983_a(f6, (double)j + 0.015625D, f8, d2, d6 + 0.0625D);
            tessellator.func_983_a(f6, (double)j + 0.015625D, f7, d2, d4 + 0.0625D);
            tessellator.func_983_a(f5, (double)j + 0.015625D, f7, d, d4 + 0.0625D);
            tessellator.func_983_a(f5, (double)j + 0.015625D, f8, d, d6 + 0.0625D);
        } else
        if(byte0 == 2)
        {
            tessellator.func_983_a(f6, (double)j + 0.015625D, f8, d2, d6);
            tessellator.func_983_a(f6, (double)j + 0.015625D, f7, d, d6);
            tessellator.func_983_a(f5, (double)j + 0.015625D, f7, d, d4);
            tessellator.func_983_a(f5, (double)j + 0.015625D, f8, d2, d4);
            tessellator.func_987_a(f, f, f);
            tessellator.func_983_a(f6, (double)j + 0.015625D, f8, d2, d6 + 0.0625D);
            tessellator.func_983_a(f6, (double)j + 0.015625D, f7, d, d6 + 0.0625D);
            tessellator.func_983_a(f5, (double)j + 0.015625D, f7, d, d4 + 0.0625D);
            tessellator.func_983_a(f5, (double)j + 0.015625D, f8, d2, d4 + 0.0625D);
        }
        if(!field_1772_a.func_28100_h(i, j + 1, k))
        {
            double d1 = (float)(j1 + 16) / 256F;
            double d3 = ((float)(j1 + 16) + 15.99F) / 256F;
            double d5 = (float)k1 / 256F;
            double d7 = ((float)k1 + 15.99F) / 256F;
            if(field_1772_a.func_28100_h(i - 1, j, k) && field_1772_a.func_600_a(i - 1, j + 1, k) == Block.field_394_aw.field_376_bc)
            {
                tessellator.func_987_a(f * f2, f * f3, f * f4);
                tessellator.func_983_a((double)i + 0.015625D, (float)(j + 1) + 0.021875F, k + 1, d3, d5);
                tessellator.func_983_a((double)i + 0.015625D, j + 0, k + 1, d1, d5);
                tessellator.func_983_a((double)i + 0.015625D, j + 0, k + 0, d1, d7);
                tessellator.func_983_a((double)i + 0.015625D, (float)(j + 1) + 0.021875F, k + 0, d3, d7);
                tessellator.func_987_a(f, f, f);
                tessellator.func_983_a((double)i + 0.015625D, (float)(j + 1) + 0.021875F, k + 1, d3, d5 + 0.0625D);
                tessellator.func_983_a((double)i + 0.015625D, j + 0, k + 1, d1, d5 + 0.0625D);
                tessellator.func_983_a((double)i + 0.015625D, j + 0, k + 0, d1, d7 + 0.0625D);
                tessellator.func_983_a((double)i + 0.015625D, (float)(j + 1) + 0.021875F, k + 0, d3, d7 + 0.0625D);
            }
            if(field_1772_a.func_28100_h(i + 1, j, k) && field_1772_a.func_600_a(i + 1, j + 1, k) == Block.field_394_aw.field_376_bc)
            {
                tessellator.func_987_a(f * f2, f * f3, f * f4);
                tessellator.func_983_a((double)(i + 1) - 0.015625D, j + 0, k + 1, d1, d7);
                tessellator.func_983_a((double)(i + 1) - 0.015625D, (float)(j + 1) + 0.021875F, k + 1, d3, d7);
                tessellator.func_983_a((double)(i + 1) - 0.015625D, (float)(j + 1) + 0.021875F, k + 0, d3, d5);
                tessellator.func_983_a((double)(i + 1) - 0.015625D, j + 0, k + 0, d1, d5);
                tessellator.func_987_a(f, f, f);
                tessellator.func_983_a((double)(i + 1) - 0.015625D, j + 0, k + 1, d1, d7 + 0.0625D);
                tessellator.func_983_a((double)(i + 1) - 0.015625D, (float)(j + 1) + 0.021875F, k + 1, d3, d7 + 0.0625D);
                tessellator.func_983_a((double)(i + 1) - 0.015625D, (float)(j + 1) + 0.021875F, k + 0, d3, d5 + 0.0625D);
                tessellator.func_983_a((double)(i + 1) - 0.015625D, j + 0, k + 0, d1, d5 + 0.0625D);
            }
            if(field_1772_a.func_28100_h(i, j, k - 1) && field_1772_a.func_600_a(i, j + 1, k - 1) == Block.field_394_aw.field_376_bc)
            {
                tessellator.func_987_a(f * f2, f * f3, f * f4);
                tessellator.func_983_a(i + 1, j + 0, (double)k + 0.015625D, d1, d7);
                tessellator.func_983_a(i + 1, (float)(j + 1) + 0.021875F, (double)k + 0.015625D, d3, d7);
                tessellator.func_983_a(i + 0, (float)(j + 1) + 0.021875F, (double)k + 0.015625D, d3, d5);
                tessellator.func_983_a(i + 0, j + 0, (double)k + 0.015625D, d1, d5);
                tessellator.func_987_a(f, f, f);
                tessellator.func_983_a(i + 1, j + 0, (double)k + 0.015625D, d1, d7 + 0.0625D);
                tessellator.func_983_a(i + 1, (float)(j + 1) + 0.021875F, (double)k + 0.015625D, d3, d7 + 0.0625D);
                tessellator.func_983_a(i + 0, (float)(j + 1) + 0.021875F, (double)k + 0.015625D, d3, d5 + 0.0625D);
                tessellator.func_983_a(i + 0, j + 0, (double)k + 0.015625D, d1, d5 + 0.0625D);
            }
            if(field_1772_a.func_28100_h(i, j, k + 1) && field_1772_a.func_600_a(i, j + 1, k + 1) == Block.field_394_aw.field_376_bc)
            {
                tessellator.func_987_a(f * f2, f * f3, f * f4);
                tessellator.func_983_a(i + 1, (float)(j + 1) + 0.021875F, (double)(k + 1) - 0.015625D, d3, d5);
                tessellator.func_983_a(i + 1, j + 0, (double)(k + 1) - 0.015625D, d1, d5);
                tessellator.func_983_a(i + 0, j + 0, (double)(k + 1) - 0.015625D, d1, d7);
                tessellator.func_983_a(i + 0, (float)(j + 1) + 0.021875F, (double)(k + 1) - 0.015625D, d3, d7);
                tessellator.func_987_a(f, f, f);
                tessellator.func_983_a(i + 1, (float)(j + 1) + 0.021875F, (double)(k + 1) - 0.015625D, d3, d5 + 0.0625D);
                tessellator.func_983_a(i + 1, j + 0, (double)(k + 1) - 0.015625D, d1, d5 + 0.0625D);
                tessellator.func_983_a(i + 0, j + 0, (double)(k + 1) - 0.015625D, d1, d7 + 0.0625D);
                tessellator.func_983_a(i + 0, (float)(j + 1) + 0.021875F, (double)(k + 1) - 0.015625D, d3, d7 + 0.0625D);
            }
        }
        return true;
    }

    public boolean func_1216_f(BlockRail blockrail, int i, int j, int k)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int l = field_1772_a.func_602_e(i, j, k);
        int i1 = blockrail.func_232_a(0, l);
        if(field_1771_b >= 0)
        {
            i1 = field_1771_b;
        }
        if(blockrail.func_27042_h())
        {
            l &= 7;
        }
        tessellator.func_35835_b(blockrail.func_35275_c(field_1772_a, i, j, k));
        tessellator.func_987_a(1.0F, 1.0F, 1.0F);
        int j1 = (i1 & 0xf) << 4;
        int k1 = i1 & 0xf0;
        double d = (float)j1 / 256F;
        double d1 = ((float)j1 + 15.99F) / 256F;
        double d2 = (float)k1 / 256F;
        double d3 = ((float)k1 + 15.99F) / 256F;
        double d4 = 0.0625D;
        double d5 = i + 1;
        double d6 = i + 1;
        double d7 = i + 0;
        double d8 = i + 0;
        double d9 = k + 0;
        double d10 = k + 1;
        double d11 = k + 1;
        double d12 = k + 0;
        double d13 = (double)j + d4;
        double d14 = (double)j + d4;
        double d15 = (double)j + d4;
        double d16 = (double)j + d4;
        if(l != 1 && l != 2 && l != 3 && l != 7)
        {
            if(l == 8)
            {
                d5 = d6 = i + 0;
                d7 = d8 = i + 1;
                d9 = d12 = k + 1;
                d10 = d11 = k + 0;
            } else
            if(l == 9)
            {
                d5 = d8 = i + 0;
                d6 = d7 = i + 1;
                d9 = d10 = k + 0;
                d11 = d12 = k + 1;
            }
        } else
        {
            d5 = d8 = i + 1;
            d6 = d7 = i + 0;
            d9 = d10 = k + 1;
            d11 = d12 = k + 0;
        }
        if(l != 2 && l != 4)
        {
            if(l == 3 || l == 5)
            {
                d14++;
                d15++;
            }
        } else
        {
            d13++;
            d16++;
        }
        tessellator.func_983_a(d5, d13, d9, d1, d2);
        tessellator.func_983_a(d6, d14, d10, d1, d3);
        tessellator.func_983_a(d7, d15, d11, d, d3);
        tessellator.func_983_a(d8, d16, d12, d, d2);
        tessellator.func_983_a(d8, d16, d12, d, d2);
        tessellator.func_983_a(d7, d15, d11, d, d3);
        tessellator.func_983_a(d6, d14, d10, d1, d3);
        tessellator.func_983_a(d5, d13, d9, d1, d2);
        return true;
    }

    public boolean func_1221_g(Block block, int i, int j, int k)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int l = block.func_218_a(0);
        if(field_1771_b >= 0)
        {
            l = field_1771_b;
        }
        tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j, k));
        float f = 1.0F;
        tessellator.func_987_a(f, f, f);
        int i1 = (l & 0xf) << 4;
        int j1 = l & 0xf0;
        double d = (float)i1 / 256F;
        double d1 = ((float)i1 + 15.99F) / 256F;
        double d2 = (float)j1 / 256F;
        double d3 = ((float)j1 + 15.99F) / 256F;
        int k1 = field_1772_a.func_602_e(i, j, k);
        double d4 = 0.0D;
        double d5 = 0.05000000074505806D;
        if(k1 == 5)
        {
            tessellator.func_983_a((double)i + d5, (double)(j + 1) + d4, (double)(k + 1) + d4, d, d2);
            tessellator.func_983_a((double)i + d5, (double)(j + 0) - d4, (double)(k + 1) + d4, d, d3);
            tessellator.func_983_a((double)i + d5, (double)(j + 0) - d4, (double)(k + 0) - d4, d1, d3);
            tessellator.func_983_a((double)i + d5, (double)(j + 1) + d4, (double)(k + 0) - d4, d1, d2);
        }
        if(k1 == 4)
        {
            tessellator.func_983_a((double)(i + 1) - d5, (double)(j + 0) - d4, (double)(k + 1) + d4, d1, d3);
            tessellator.func_983_a((double)(i + 1) - d5, (double)(j + 1) + d4, (double)(k + 1) + d4, d1, d2);
            tessellator.func_983_a((double)(i + 1) - d5, (double)(j + 1) + d4, (double)(k + 0) - d4, d, d2);
            tessellator.func_983_a((double)(i + 1) - d5, (double)(j + 0) - d4, (double)(k + 0) - d4, d, d3);
        }
        if(k1 == 3)
        {
            tessellator.func_983_a((double)(i + 1) + d4, (double)(j + 0) - d4, (double)k + d5, d1, d3);
            tessellator.func_983_a((double)(i + 1) + d4, (double)(j + 1) + d4, (double)k + d5, d1, d2);
            tessellator.func_983_a((double)(i + 0) - d4, (double)(j + 1) + d4, (double)k + d5, d, d2);
            tessellator.func_983_a((double)(i + 0) - d4, (double)(j + 0) - d4, (double)k + d5, d, d3);
        }
        if(k1 == 2)
        {
            tessellator.func_983_a((double)(i + 1) + d4, (double)(j + 1) + d4, (double)(k + 1) - d5, d, d2);
            tessellator.func_983_a((double)(i + 1) + d4, (double)(j + 0) - d4, (double)(k + 1) - d5, d, d3);
            tessellator.func_983_a((double)(i + 0) - d4, (double)(j + 0) - d4, (double)(k + 1) - d5, d1, d3);
            tessellator.func_983_a((double)(i + 0) - d4, (double)(j + 1) + d4, (double)(k + 1) - d5, d1, d2);
        }
        return true;
    }

    public boolean func_35929_i(Block block, int i, int j, int k)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int l = block.func_218_a(0);
        if(field_1771_b >= 0)
        {
            l = field_1771_b;
        }
        float f = 1.0F;
        tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j, k));
        int i1 = block.func_207_d(field_1772_a, i, j, k);
        float f1 = (float)(i1 >> 16 & 0xff) / 255F;
        float f2 = (float)(i1 >> 8 & 0xff) / 255F;
        float f3 = (float)(i1 & 0xff) / 255F;
        tessellator.func_987_a(f * f1, f * f2, f * f3);
        i1 = (l & 0xf) << 4;
        int j1 = l & 0xf0;
        double d = (float)i1 / 256F;
        double d1 = ((float)i1 + 15.99F) / 256F;
        double d2 = (float)j1 / 256F;
        double d3 = ((float)j1 + 15.99F) / 256F;
        double d4 = 0.05000000074505806D;
        int k1 = field_1772_a.func_602_e(i, j, k);
        if((k1 & 2) != 0)
        {
            tessellator.func_983_a((double)i + d4, j + 1, k + 1, d, d2);
            tessellator.func_983_a((double)i + d4, j + 0, k + 1, d, d3);
            tessellator.func_983_a((double)i + d4, j + 0, k + 0, d1, d3);
            tessellator.func_983_a((double)i + d4, j + 1, k + 0, d1, d2);
            tessellator.func_983_a((double)i + d4, j + 1, k + 0, d1, d2);
            tessellator.func_983_a((double)i + d4, j + 0, k + 0, d1, d3);
            tessellator.func_983_a((double)i + d4, j + 0, k + 1, d, d3);
            tessellator.func_983_a((double)i + d4, j + 1, k + 1, d, d2);
        }
        if((k1 & 8) != 0)
        {
            tessellator.func_983_a((double)(i + 1) - d4, j + 0, k + 1, d1, d3);
            tessellator.func_983_a((double)(i + 1) - d4, j + 1, k + 1, d1, d2);
            tessellator.func_983_a((double)(i + 1) - d4, j + 1, k + 0, d, d2);
            tessellator.func_983_a((double)(i + 1) - d4, j + 0, k + 0, d, d3);
            tessellator.func_983_a((double)(i + 1) - d4, j + 0, k + 0, d, d3);
            tessellator.func_983_a((double)(i + 1) - d4, j + 1, k + 0, d, d2);
            tessellator.func_983_a((double)(i + 1) - d4, j + 1, k + 1, d1, d2);
            tessellator.func_983_a((double)(i + 1) - d4, j + 0, k + 1, d1, d3);
        }
        if((k1 & 4) != 0)
        {
            tessellator.func_983_a(i + 1, j + 0, (double)k + d4, d1, d3);
            tessellator.func_983_a(i + 1, j + 1, (double)k + d4, d1, d2);
            tessellator.func_983_a(i + 0, j + 1, (double)k + d4, d, d2);
            tessellator.func_983_a(i + 0, j + 0, (double)k + d4, d, d3);
            tessellator.func_983_a(i + 0, j + 0, (double)k + d4, d, d3);
            tessellator.func_983_a(i + 0, j + 1, (double)k + d4, d, d2);
            tessellator.func_983_a(i + 1, j + 1, (double)k + d4, d1, d2);
            tessellator.func_983_a(i + 1, j + 0, (double)k + d4, d1, d3);
        }
        if((k1 & 1) != 0)
        {
            tessellator.func_983_a(i + 1, j + 1, (double)(k + 1) - d4, d, d2);
            tessellator.func_983_a(i + 1, j + 0, (double)(k + 1) - d4, d, d3);
            tessellator.func_983_a(i + 0, j + 0, (double)(k + 1) - d4, d1, d3);
            tessellator.func_983_a(i + 0, j + 1, (double)(k + 1) - d4, d1, d2);
            tessellator.func_983_a(i + 0, j + 1, (double)(k + 1) - d4, d1, d2);
            tessellator.func_983_a(i + 0, j + 0, (double)(k + 1) - d4, d1, d3);
            tessellator.func_983_a(i + 1, j + 0, (double)(k + 1) - d4, d, d3);
            tessellator.func_983_a(i + 1, j + 1, (double)(k + 1) - d4, d, d2);
        }
        if(field_1772_a.func_28100_h(i, j + 1, k))
        {
            tessellator.func_983_a(i + 1, (double)(j + 1) - d4, k + 0, d, d2);
            tessellator.func_983_a(i + 1, (double)(j + 1) - d4, k + 1, d, d3);
            tessellator.func_983_a(i + 0, (double)(j + 1) - d4, k + 1, d1, d3);
            tessellator.func_983_a(i + 0, (double)(j + 1) - d4, k + 0, d1, d2);
        }
        return true;
    }

    public boolean func_35922_a(BlockPane blockpane, int i, int j, int k)
    {
        int l = field_1772_a.func_35452_b();
        Tessellator tessellator = Tessellator.field_1512_a;
        tessellator.func_35835_b(blockpane.func_35275_c(field_1772_a, i, j, k));
        float f = 1.0F;
        int i1 = blockpane.func_207_d(field_1772_a, i, j, k);
        float f1 = (float)(i1 >> 16 & 0xff) / 255F;
        float f2 = (float)(i1 >> 8 & 0xff) / 255F;
        float f3 = (float)(i1 & 0xff) / 255F;
        if(EntityRenderer.field_28135_a)
        {
            float f4 = (f1 * 30F + f2 * 59F + f3 * 11F) / 100F;
            float f5 = (f1 * 30F + f2 * 70F) / 100F;
            float f6 = (f1 * 30F + f3 * 70F) / 100F;
            f1 = f4;
            f2 = f5;
            f3 = f6;
        }
        tessellator.func_987_a(f * f1, f * f2, f * f3);
        boolean flag = false;
        boolean flag1 = false;
        int l1;
        int i2;
        if(field_1771_b >= 0)
        {
            l1 = field_1771_b;
            i2 = field_1771_b;
        } else
        {
            int j1 = field_1772_a.func_602_e(i, j, k);
            l1 = blockpane.func_232_a(0, j1);
            i2 = blockpane.func_35299_s();
        }
        int k1 = (l1 & 0xf) << 4;
        int j2 = l1 & 0xf0;
        double d = (float)k1 / 256F;
        double d1 = ((float)k1 + 7.99F) / 256F;
        double d2 = ((float)k1 + 15.99F) / 256F;
        double d3 = (float)j2 / 256F;
        double d4 = ((float)j2 + 15.99F) / 256F;
        int k2 = (i2 & 0xf) << 4;
        int l2 = i2 & 0xf0;
        double d5 = (float)(k2 + 7) / 256F;
        double d6 = ((float)k2 + 8.99F) / 256F;
        double d7 = (float)l2 / 256F;
        double d8 = (float)(l2 + 8) / 256F;
        double d9 = ((float)l2 + 15.99F) / 256F;
        double d10 = i;
        double d11 = (double)i + 0.5D;
        double d12 = i + 1;
        double d13 = k;
        double d14 = (double)k + 0.5D;
        double d15 = k + 1;
        double d16 = ((double)i + 0.5D) - 0.0625D;
        double d17 = (double)i + 0.5D + 0.0625D;
        double d18 = ((double)k + 0.5D) - 0.0625D;
        double d19 = (double)k + 0.5D + 0.0625D;
        boolean flag2 = blockpane.func_35298_d(field_1772_a.func_600_a(i, j, k - 1));
        boolean flag3 = blockpane.func_35298_d(field_1772_a.func_600_a(i, j, k + 1));
        boolean flag4 = blockpane.func_35298_d(field_1772_a.func_600_a(i - 1, j, k));
        boolean flag5 = blockpane.func_35298_d(field_1772_a.func_600_a(i + 1, j, k));
        boolean flag6 = blockpane.func_260_c(field_1772_a, i, j + 1, k, 1);
        boolean flag7 = blockpane.func_260_c(field_1772_a, i, j - 1, k, 0);
        if((!flag4 || !flag5) && (flag4 || flag5 || flag2 || flag3))
        {
            if(flag4 && !flag5)
            {
                tessellator.func_983_a(d10, j + 1, d14, d, d3);
                tessellator.func_983_a(d10, j + 0, d14, d, d4);
                tessellator.func_983_a(d11, j + 0, d14, d1, d4);
                tessellator.func_983_a(d11, j + 1, d14, d1, d3);
                tessellator.func_983_a(d11, j + 1, d14, d, d3);
                tessellator.func_983_a(d11, j + 0, d14, d, d4);
                tessellator.func_983_a(d10, j + 0, d14, d1, d4);
                tessellator.func_983_a(d10, j + 1, d14, d1, d3);
                if(!flag3 && !flag2)
                {
                    tessellator.func_983_a(d11, j + 1, d19, d5, d7);
                    tessellator.func_983_a(d11, j + 0, d19, d5, d9);
                    tessellator.func_983_a(d11, j + 0, d18, d6, d9);
                    tessellator.func_983_a(d11, j + 1, d18, d6, d7);
                    tessellator.func_983_a(d11, j + 1, d18, d5, d7);
                    tessellator.func_983_a(d11, j + 0, d18, d5, d9);
                    tessellator.func_983_a(d11, j + 0, d19, d6, d9);
                    tessellator.func_983_a(d11, j + 1, d19, d6, d7);
                }
                if(flag6 || j < l - 1 && field_1772_a.func_20084_d(i - 1, j + 1, k))
                {
                    tessellator.func_983_a(d10, (double)(j + 1) + 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d19, d6, d9);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d18, d5, d9);
                    tessellator.func_983_a(d10, (double)(j + 1) + 0.01D, d18, d5, d8);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d10, (double)(j + 1) + 0.01D, d19, d6, d9);
                    tessellator.func_983_a(d10, (double)(j + 1) + 0.01D, d18, d5, d9);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d18, d5, d8);
                }
                if(flag7 || j > 1 && field_1772_a.func_20084_d(i - 1, j - 1, k))
                {
                    tessellator.func_983_a(d10, (double)j - 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d19, d6, d9);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d18, d5, d9);
                    tessellator.func_983_a(d10, (double)j - 0.01D, d18, d5, d8);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d10, (double)j - 0.01D, d19, d6, d9);
                    tessellator.func_983_a(d10, (double)j - 0.01D, d18, d5, d9);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d18, d5, d8);
                }
            } else
            if(!flag4 && flag5)
            {
                tessellator.func_983_a(d11, j + 1, d14, d1, d3);
                tessellator.func_983_a(d11, j + 0, d14, d1, d4);
                tessellator.func_983_a(d12, j + 0, d14, d2, d4);
                tessellator.func_983_a(d12, j + 1, d14, d2, d3);
                tessellator.func_983_a(d12, j + 1, d14, d1, d3);
                tessellator.func_983_a(d12, j + 0, d14, d1, d4);
                tessellator.func_983_a(d11, j + 0, d14, d2, d4);
                tessellator.func_983_a(d11, j + 1, d14, d2, d3);
                if(!flag3 && !flag2)
                {
                    tessellator.func_983_a(d11, j + 1, d18, d5, d7);
                    tessellator.func_983_a(d11, j + 0, d18, d5, d9);
                    tessellator.func_983_a(d11, j + 0, d19, d6, d9);
                    tessellator.func_983_a(d11, j + 1, d19, d6, d7);
                    tessellator.func_983_a(d11, j + 1, d19, d5, d7);
                    tessellator.func_983_a(d11, j + 0, d19, d5, d9);
                    tessellator.func_983_a(d11, j + 0, d18, d6, d9);
                    tessellator.func_983_a(d11, j + 1, d18, d6, d7);
                }
                if(flag6 || j < l - 1 && field_1772_a.func_20084_d(i + 1, j + 1, k))
                {
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d19, d6, d7);
                    tessellator.func_983_a(d12, (double)(j + 1) + 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d12, (double)(j + 1) + 0.01D, d18, d5, d8);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d18, d5, d7);
                    tessellator.func_983_a(d12, (double)(j + 1) + 0.01D, d19, d6, d7);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d18, d5, d8);
                    tessellator.func_983_a(d12, (double)(j + 1) + 0.01D, d18, d5, d7);
                }
                if(flag7 || j > 1 && field_1772_a.func_20084_d(i + 1, j - 1, k))
                {
                    tessellator.func_983_a(d11, (double)j - 0.01D, d19, d6, d7);
                    tessellator.func_983_a(d12, (double)j - 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d12, (double)j - 0.01D, d18, d5, d8);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d18, d5, d7);
                    tessellator.func_983_a(d12, (double)j - 0.01D, d19, d6, d7);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d18, d5, d8);
                    tessellator.func_983_a(d12, (double)j - 0.01D, d18, d5, d7);
                }
            }
        } else
        {
            tessellator.func_983_a(d10, j + 1, d14, d, d3);
            tessellator.func_983_a(d10, j + 0, d14, d, d4);
            tessellator.func_983_a(d12, j + 0, d14, d2, d4);
            tessellator.func_983_a(d12, j + 1, d14, d2, d3);
            tessellator.func_983_a(d12, j + 1, d14, d, d3);
            tessellator.func_983_a(d12, j + 0, d14, d, d4);
            tessellator.func_983_a(d10, j + 0, d14, d2, d4);
            tessellator.func_983_a(d10, j + 1, d14, d2, d3);
            if(flag6)
            {
                tessellator.func_983_a(d10, (double)(j + 1) + 0.01D, d19, d6, d9);
                tessellator.func_983_a(d12, (double)(j + 1) + 0.01D, d19, d6, d7);
                tessellator.func_983_a(d12, (double)(j + 1) + 0.01D, d18, d5, d7);
                tessellator.func_983_a(d10, (double)(j + 1) + 0.01D, d18, d5, d9);
                tessellator.func_983_a(d12, (double)(j + 1) + 0.01D, d19, d6, d9);
                tessellator.func_983_a(d10, (double)(j + 1) + 0.01D, d19, d6, d7);
                tessellator.func_983_a(d10, (double)(j + 1) + 0.01D, d18, d5, d7);
                tessellator.func_983_a(d12, (double)(j + 1) + 0.01D, d18, d5, d9);
            } else
            {
                if(j < l - 1 && field_1772_a.func_20084_d(i - 1, j + 1, k))
                {
                    tessellator.func_983_a(d10, (double)(j + 1) + 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d19, d6, d9);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d18, d5, d9);
                    tessellator.func_983_a(d10, (double)(j + 1) + 0.01D, d18, d5, d8);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d10, (double)(j + 1) + 0.01D, d19, d6, d9);
                    tessellator.func_983_a(d10, (double)(j + 1) + 0.01D, d18, d5, d9);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d18, d5, d8);
                }
                if(j < l - 1 && field_1772_a.func_20084_d(i + 1, j + 1, k))
                {
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d19, d6, d7);
                    tessellator.func_983_a(d12, (double)(j + 1) + 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d12, (double)(j + 1) + 0.01D, d18, d5, d8);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d18, d5, d7);
                    tessellator.func_983_a(d12, (double)(j + 1) + 0.01D, d19, d6, d7);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d11, (double)(j + 1) + 0.01D, d18, d5, d8);
                    tessellator.func_983_a(d12, (double)(j + 1) + 0.01D, d18, d5, d7);
                }
            }
            if(flag7)
            {
                tessellator.func_983_a(d10, (double)j - 0.01D, d19, d6, d9);
                tessellator.func_983_a(d12, (double)j - 0.01D, d19, d6, d7);
                tessellator.func_983_a(d12, (double)j - 0.01D, d18, d5, d7);
                tessellator.func_983_a(d10, (double)j - 0.01D, d18, d5, d9);
                tessellator.func_983_a(d12, (double)j - 0.01D, d19, d6, d9);
                tessellator.func_983_a(d10, (double)j - 0.01D, d19, d6, d7);
                tessellator.func_983_a(d10, (double)j - 0.01D, d18, d5, d7);
                tessellator.func_983_a(d12, (double)j - 0.01D, d18, d5, d9);
            } else
            {
                if(j > 1 && field_1772_a.func_20084_d(i - 1, j - 1, k))
                {
                    tessellator.func_983_a(d10, (double)j - 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d19, d6, d9);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d18, d5, d9);
                    tessellator.func_983_a(d10, (double)j - 0.01D, d18, d5, d8);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d10, (double)j - 0.01D, d19, d6, d9);
                    tessellator.func_983_a(d10, (double)j - 0.01D, d18, d5, d9);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d18, d5, d8);
                }
                if(j > 1 && field_1772_a.func_20084_d(i + 1, j - 1, k))
                {
                    tessellator.func_983_a(d11, (double)j - 0.01D, d19, d6, d7);
                    tessellator.func_983_a(d12, (double)j - 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d12, (double)j - 0.01D, d18, d5, d8);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d18, d5, d7);
                    tessellator.func_983_a(d12, (double)j - 0.01D, d19, d6, d7);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d19, d6, d8);
                    tessellator.func_983_a(d11, (double)j - 0.01D, d18, d5, d8);
                    tessellator.func_983_a(d12, (double)j - 0.01D, d18, d5, d7);
                }
            }
        }
        if((!flag2 || !flag3) && (flag4 || flag5 || flag2 || flag3))
        {
            if(flag2 && !flag3)
            {
                tessellator.func_983_a(d11, j + 1, d13, d, d3);
                tessellator.func_983_a(d11, j + 0, d13, d, d4);
                tessellator.func_983_a(d11, j + 0, d14, d1, d4);
                tessellator.func_983_a(d11, j + 1, d14, d1, d3);
                tessellator.func_983_a(d11, j + 1, d14, d, d3);
                tessellator.func_983_a(d11, j + 0, d14, d, d4);
                tessellator.func_983_a(d11, j + 0, d13, d1, d4);
                tessellator.func_983_a(d11, j + 1, d13, d1, d3);
                if(!flag5 && !flag4)
                {
                    tessellator.func_983_a(d16, j + 1, d14, d5, d7);
                    tessellator.func_983_a(d16, j + 0, d14, d5, d9);
                    tessellator.func_983_a(d17, j + 0, d14, d6, d9);
                    tessellator.func_983_a(d17, j + 1, d14, d6, d7);
                    tessellator.func_983_a(d17, j + 1, d14, d5, d7);
                    tessellator.func_983_a(d17, j + 0, d14, d5, d9);
                    tessellator.func_983_a(d16, j + 0, d14, d6, d9);
                    tessellator.func_983_a(d16, j + 1, d14, d6, d7);
                }
                if(flag6 || j < l - 1 && field_1772_a.func_20084_d(i, j + 1, k - 1))
                {
                    tessellator.func_983_a(d16, j + 1, d13, d6, d7);
                    tessellator.func_983_a(d16, j + 1, d14, d6, d8);
                    tessellator.func_983_a(d17, j + 1, d14, d5, d8);
                    tessellator.func_983_a(d17, j + 1, d13, d5, d7);
                    tessellator.func_983_a(d16, j + 1, d14, d6, d7);
                    tessellator.func_983_a(d16, j + 1, d13, d6, d8);
                    tessellator.func_983_a(d17, j + 1, d13, d5, d8);
                    tessellator.func_983_a(d17, j + 1, d14, d5, d7);
                }
                if(flag7 || j > 1 && field_1772_a.func_20084_d(i, j - 1, k - 1))
                {
                    tessellator.func_983_a(d16, j, d13, d6, d7);
                    tessellator.func_983_a(d16, j, d14, d6, d8);
                    tessellator.func_983_a(d17, j, d14, d5, d8);
                    tessellator.func_983_a(d17, j, d13, d5, d7);
                    tessellator.func_983_a(d16, j, d14, d6, d7);
                    tessellator.func_983_a(d16, j, d13, d6, d8);
                    tessellator.func_983_a(d17, j, d13, d5, d8);
                    tessellator.func_983_a(d17, j, d14, d5, d7);
                }
            } else
            if(!flag2 && flag3)
            {
                tessellator.func_983_a(d11, j + 1, d14, d1, d3);
                tessellator.func_983_a(d11, j + 0, d14, d1, d4);
                tessellator.func_983_a(d11, j + 0, d15, d2, d4);
                tessellator.func_983_a(d11, j + 1, d15, d2, d3);
                tessellator.func_983_a(d11, j + 1, d15, d1, d3);
                tessellator.func_983_a(d11, j + 0, d15, d1, d4);
                tessellator.func_983_a(d11, j + 0, d14, d2, d4);
                tessellator.func_983_a(d11, j + 1, d14, d2, d3);
                if(!flag5 && !flag4)
                {
                    tessellator.func_983_a(d17, j + 1, d14, d5, d7);
                    tessellator.func_983_a(d17, j + 0, d14, d5, d9);
                    tessellator.func_983_a(d16, j + 0, d14, d6, d9);
                    tessellator.func_983_a(d16, j + 1, d14, d6, d7);
                    tessellator.func_983_a(d16, j + 1, d14, d5, d7);
                    tessellator.func_983_a(d16, j + 0, d14, d5, d9);
                    tessellator.func_983_a(d17, j + 0, d14, d6, d9);
                    tessellator.func_983_a(d17, j + 1, d14, d6, d7);
                }
                if(flag6 || j < l - 1 && field_1772_a.func_20084_d(i, j + 1, k + 1))
                {
                    tessellator.func_983_a(d16, j + 1, d14, d5, d8);
                    tessellator.func_983_a(d16, j + 1, d15, d5, d9);
                    tessellator.func_983_a(d17, j + 1, d15, d6, d9);
                    tessellator.func_983_a(d17, j + 1, d14, d6, d8);
                    tessellator.func_983_a(d16, j + 1, d15, d5, d8);
                    tessellator.func_983_a(d16, j + 1, d14, d5, d9);
                    tessellator.func_983_a(d17, j + 1, d14, d6, d9);
                    tessellator.func_983_a(d17, j + 1, d15, d6, d8);
                }
                if(flag7 || j > 1 && field_1772_a.func_20084_d(i, j - 1, k + 1))
                {
                    tessellator.func_983_a(d16, j, d14, d5, d8);
                    tessellator.func_983_a(d16, j, d15, d5, d9);
                    tessellator.func_983_a(d17, j, d15, d6, d9);
                    tessellator.func_983_a(d17, j, d14, d6, d8);
                    tessellator.func_983_a(d16, j, d15, d5, d8);
                    tessellator.func_983_a(d16, j, d14, d5, d9);
                    tessellator.func_983_a(d17, j, d14, d6, d9);
                    tessellator.func_983_a(d17, j, d15, d6, d8);
                }
            }
        } else
        {
            tessellator.func_983_a(d11, j + 1, d15, d, d3);
            tessellator.func_983_a(d11, j + 0, d15, d, d4);
            tessellator.func_983_a(d11, j + 0, d13, d2, d4);
            tessellator.func_983_a(d11, j + 1, d13, d2, d3);
            tessellator.func_983_a(d11, j + 1, d13, d, d3);
            tessellator.func_983_a(d11, j + 0, d13, d, d4);
            tessellator.func_983_a(d11, j + 0, d15, d2, d4);
            tessellator.func_983_a(d11, j + 1, d15, d2, d3);
            if(flag6)
            {
                tessellator.func_983_a(d17, j + 1, d15, d6, d9);
                tessellator.func_983_a(d17, j + 1, d13, d6, d7);
                tessellator.func_983_a(d16, j + 1, d13, d5, d7);
                tessellator.func_983_a(d16, j + 1, d15, d5, d9);
                tessellator.func_983_a(d17, j + 1, d13, d6, d9);
                tessellator.func_983_a(d17, j + 1, d15, d6, d7);
                tessellator.func_983_a(d16, j + 1, d15, d5, d7);
                tessellator.func_983_a(d16, j + 1, d13, d5, d9);
            } else
            {
                if(j < l - 1 && field_1772_a.func_20084_d(i, j + 1, k - 1))
                {
                    tessellator.func_983_a(d16, j + 1, d13, d6, d7);
                    tessellator.func_983_a(d16, j + 1, d14, d6, d8);
                    tessellator.func_983_a(d17, j + 1, d14, d5, d8);
                    tessellator.func_983_a(d17, j + 1, d13, d5, d7);
                    tessellator.func_983_a(d16, j + 1, d14, d6, d7);
                    tessellator.func_983_a(d16, j + 1, d13, d6, d8);
                    tessellator.func_983_a(d17, j + 1, d13, d5, d8);
                    tessellator.func_983_a(d17, j + 1, d14, d5, d7);
                }
                if(j < l - 1 && field_1772_a.func_20084_d(i, j + 1, k + 1))
                {
                    tessellator.func_983_a(d16, j + 1, d14, d5, d8);
                    tessellator.func_983_a(d16, j + 1, d15, d5, d9);
                    tessellator.func_983_a(d17, j + 1, d15, d6, d9);
                    tessellator.func_983_a(d17, j + 1, d14, d6, d8);
                    tessellator.func_983_a(d16, j + 1, d15, d5, d8);
                    tessellator.func_983_a(d16, j + 1, d14, d5, d9);
                    tessellator.func_983_a(d17, j + 1, d14, d6, d9);
                    tessellator.func_983_a(d17, j + 1, d15, d6, d8);
                }
            }
            if(flag7)
            {
                tessellator.func_983_a(d17, j, d15, d6, d9);
                tessellator.func_983_a(d17, j, d13, d6, d7);
                tessellator.func_983_a(d16, j, d13, d5, d7);
                tessellator.func_983_a(d16, j, d15, d5, d9);
                tessellator.func_983_a(d17, j, d13, d6, d9);
                tessellator.func_983_a(d17, j, d15, d6, d7);
                tessellator.func_983_a(d16, j, d15, d5, d7);
                tessellator.func_983_a(d16, j, d13, d5, d9);
            } else
            {
                if(j > 1 && field_1772_a.func_20084_d(i, j - 1, k - 1))
                {
                    tessellator.func_983_a(d16, j, d13, d6, d7);
                    tessellator.func_983_a(d16, j, d14, d6, d8);
                    tessellator.func_983_a(d17, j, d14, d5, d8);
                    tessellator.func_983_a(d17, j, d13, d5, d7);
                    tessellator.func_983_a(d16, j, d14, d6, d7);
                    tessellator.func_983_a(d16, j, d13, d6, d8);
                    tessellator.func_983_a(d17, j, d13, d5, d8);
                    tessellator.func_983_a(d17, j, d14, d5, d7);
                }
                if(j > 1 && field_1772_a.func_20084_d(i, j - 1, k + 1))
                {
                    tessellator.func_983_a(d16, j, d14, d5, d8);
                    tessellator.func_983_a(d16, j, d15, d5, d9);
                    tessellator.func_983_a(d17, j, d15, d6, d9);
                    tessellator.func_983_a(d17, j, d14, d6, d8);
                    tessellator.func_983_a(d16, j, d15, d5, d8);
                    tessellator.func_983_a(d16, j, d14, d5, d9);
                    tessellator.func_983_a(d17, j, d14, d6, d9);
                    tessellator.func_983_a(d17, j, d15, d6, d8);
                }
            }
        }
        return true;
    }

    public boolean func_1226_h(Block block, int i, int j, int k)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j, k));
        float f = 1.0F;
        int l = block.func_207_d(field_1772_a, i, j, k);
        float f1 = (float)(l >> 16 & 0xff) / 255F;
        float f2 = (float)(l >> 8 & 0xff) / 255F;
        float f3 = (float)(l & 0xff) / 255F;
        if(EntityRenderer.field_28135_a)
        {
            float f4 = (f1 * 30F + f2 * 59F + f3 * 11F) / 100F;
            float f5 = (f1 * 30F + f2 * 70F) / 100F;
            float f6 = (f1 * 30F + f3 * 70F) / 100F;
            f1 = f4;
            f2 = f5;
            f3 = f6;
        }
        tessellator.func_987_a(f * f1, f * f2, f * f3);
        double d = i;
        double d1 = j;
        double d2 = k;
        if(block == Block.field_9257_X)
        {
            long l1 = (long)(i * 0x2fc20f) ^ (long)k * 0x6ebfff5L ^ (long)j;
            l1 = l1 * l1 * 0x285b825L + l1 * 11L;
            d += ((double)((float)(l1 >> 16 & 15L) / 15F) - 0.5D) * 0.5D;
            d1 += ((double)((float)(l1 >> 20 & 15L) / 15F) - 1.0D) * 0.20000000000000001D;
            d2 += ((double)((float)(l1 >> 24 & 15L) / 15F) - 0.5D) * 0.5D;
        }
        func_1239_a(block, field_1772_a.func_602_e(i, j, k), d, d1, d2);
        return true;
    }

    public boolean func_1232_i(Block block, int i, int j, int k)
    {
        BlockStem blockstem = (BlockStem)block;
        Tessellator tessellator = Tessellator.field_1512_a;
        tessellator.func_35835_b(blockstem.func_35275_c(field_1772_a, i, j, k));
        float f = 1.0F;
        int l = blockstem.func_207_d(field_1772_a, i, j, k);
        float f1 = (float)(l >> 16 & 0xff) / 255F;
        float f2 = (float)(l >> 8 & 0xff) / 255F;
        float f3 = (float)(l & 0xff) / 255F;
        if(EntityRenderer.field_28135_a)
        {
            float f4 = (f1 * 30F + f2 * 59F + f3 * 11F) / 100F;
            float f5 = (f1 * 30F + f2 * 70F) / 100F;
            float f6 = (f1 * 30F + f3 * 70F) / 100F;
            f1 = f4;
            f2 = f5;
            f3 = f6;
        }
        tessellator.func_987_a(f * f1, f * f2, f * f3);
        blockstem.func_238_a(field_1772_a, i, j, k);
        int i1 = blockstem.func_35296_f(field_1772_a, i, j, k);
        if(i1 < 0)
        {
            func_35928_a(blockstem, field_1772_a.func_602_e(i, j, k), blockstem.field_362_bj, i, j, k);
        } else
        {
            func_35928_a(blockstem, field_1772_a.func_602_e(i, j, k), 0.5D, i, j, k);
            func_35926_a(blockstem, field_1772_a.func_602_e(i, j, k), i1, blockstem.field_362_bj, i, j, k);
        }
        return true;
    }

    public boolean func_35930_l(Block block, int i, int j, int k)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j, k));
        tessellator.func_987_a(1.0F, 1.0F, 1.0F);
        func_1245_b(block, field_1772_a.func_602_e(i, j, k), i, (float)j - 0.0625F, k);
        return true;
    }

    public void func_1237_a(Block block, double d, double d1, double d2, 
            double d3, double d4)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int i = block.func_218_a(0);
        if(field_1771_b >= 0)
        {
            i = field_1771_b;
        }
        int j = (i & 0xf) << 4;
        int k = i & 0xf0;
        float f = (float)j / 256F;
        float f1 = ((float)j + 15.99F) / 256F;
        float f2 = (float)k / 256F;
        float f3 = ((float)k + 15.99F) / 256F;
        double d5 = (double)f + 0.02734375D;
        double d6 = (double)f2 + 0.0234375D;
        double d7 = (double)f + 0.03515625D;
        double d8 = (double)f2 + 0.03125D;
        d += 0.5D;
        d2 += 0.5D;
        double d9 = d - 0.5D;
        double d10 = d + 0.5D;
        double d11 = d2 - 0.5D;
        double d12 = d2 + 0.5D;
        double d13 = 0.0625D;
        double d14 = 0.625D;
        tessellator.func_983_a((d + d3 * (1.0D - d14)) - d13, d1 + d14, (d2 + d4 * (1.0D - d14)) - d13, d5, d6);
        tessellator.func_983_a((d + d3 * (1.0D - d14)) - d13, d1 + d14, d2 + d4 * (1.0D - d14) + d13, d5, d8);
        tessellator.func_983_a(d + d3 * (1.0D - d14) + d13, d1 + d14, d2 + d4 * (1.0D - d14) + d13, d7, d8);
        tessellator.func_983_a(d + d3 * (1.0D - d14) + d13, d1 + d14, (d2 + d4 * (1.0D - d14)) - d13, d7, d6);
        tessellator.func_983_a(d - d13, d1 + 1.0D, d11, f, f2);
        tessellator.func_983_a((d - d13) + d3, d1 + 0.0D, d11 + d4, f, f3);
        tessellator.func_983_a((d - d13) + d3, d1 + 0.0D, d12 + d4, f1, f3);
        tessellator.func_983_a(d - d13, d1 + 1.0D, d12, f1, f2);
        tessellator.func_983_a(d + d13, d1 + 1.0D, d12, f, f2);
        tessellator.func_983_a(d + d3 + d13, d1 + 0.0D, d12 + d4, f, f3);
        tessellator.func_983_a(d + d3 + d13, d1 + 0.0D, d11 + d4, f1, f3);
        tessellator.func_983_a(d + d13, d1 + 1.0D, d11, f1, f2);
        tessellator.func_983_a(d9, d1 + 1.0D, d2 + d13, f, f2);
        tessellator.func_983_a(d9 + d3, d1 + 0.0D, d2 + d13 + d4, f, f3);
        tessellator.func_983_a(d10 + d3, d1 + 0.0D, d2 + d13 + d4, f1, f3);
        tessellator.func_983_a(d10, d1 + 1.0D, d2 + d13, f1, f2);
        tessellator.func_983_a(d10, d1 + 1.0D, d2 - d13, f, f2);
        tessellator.func_983_a(d10 + d3, d1 + 0.0D, (d2 - d13) + d4, f, f3);
        tessellator.func_983_a(d9 + d3, d1 + 0.0D, (d2 - d13) + d4, f1, f3);
        tessellator.func_983_a(d9, d1 + 1.0D, d2 - d13, f1, f2);
    }

    public void func_1239_a(Block block, int i, double d, double d1, double d2)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int j = block.func_232_a(0, i);
        if(field_1771_b >= 0)
        {
            j = field_1771_b;
        }
        int k = (j & 0xf) << 4;
        int l = j & 0xf0;
        double d3 = (float)k / 256F;
        double d4 = ((float)k + 15.99F) / 256F;
        double d5 = (float)l / 256F;
        double d6 = ((float)l + 15.99F) / 256F;
        double d7 = (d + 0.5D) - 0.45000000000000001D;
        double d8 = d + 0.5D + 0.45000000000000001D;
        double d9 = (d2 + 0.5D) - 0.45000000000000001D;
        double d10 = d2 + 0.5D + 0.45000000000000001D;
        tessellator.func_983_a(d7, d1 + 1.0D, d9, d3, d5);
        tessellator.func_983_a(d7, d1 + 0.0D, d9, d3, d6);
        tessellator.func_983_a(d8, d1 + 0.0D, d10, d4, d6);
        tessellator.func_983_a(d8, d1 + 1.0D, d10, d4, d5);
        tessellator.func_983_a(d8, d1 + 1.0D, d10, d3, d5);
        tessellator.func_983_a(d8, d1 + 0.0D, d10, d3, d6);
        tessellator.func_983_a(d7, d1 + 0.0D, d9, d4, d6);
        tessellator.func_983_a(d7, d1 + 1.0D, d9, d4, d5);
        tessellator.func_983_a(d7, d1 + 1.0D, d10, d3, d5);
        tessellator.func_983_a(d7, d1 + 0.0D, d10, d3, d6);
        tessellator.func_983_a(d8, d1 + 0.0D, d9, d4, d6);
        tessellator.func_983_a(d8, d1 + 1.0D, d9, d4, d5);
        tessellator.func_983_a(d8, d1 + 1.0D, d9, d3, d5);
        tessellator.func_983_a(d8, d1 + 0.0D, d9, d3, d6);
        tessellator.func_983_a(d7, d1 + 0.0D, d10, d4, d6);
        tessellator.func_983_a(d7, d1 + 1.0D, d10, d4, d5);
    }

    public void func_35928_a(Block block, int i, double d, double d1, double d2, double d3)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int j = block.func_232_a(0, i);
        if(field_1771_b >= 0)
        {
            j = field_1771_b;
        }
        int k = (j & 0xf) << 4;
        int l = j & 0xf0;
        double d4 = (float)k / 256F;
        double d5 = ((float)k + 15.99F) / 256F;
        double d6 = (float)l / 256F;
        double d7 = ((double)l + 15.989999771118164D * d) / 256D;
        double d8 = (d1 + 0.5D) - 0.44999998807907104D;
        double d9 = d1 + 0.5D + 0.44999998807907104D;
        double d10 = (d3 + 0.5D) - 0.44999998807907104D;
        double d11 = d3 + 0.5D + 0.44999998807907104D;
        tessellator.func_983_a(d8, d2 + d, d10, d4, d6);
        tessellator.func_983_a(d8, d2 + 0.0D, d10, d4, d7);
        tessellator.func_983_a(d9, d2 + 0.0D, d11, d5, d7);
        tessellator.func_983_a(d9, d2 + d, d11, d5, d6);
        tessellator.func_983_a(d9, d2 + d, d11, d4, d6);
        tessellator.func_983_a(d9, d2 + 0.0D, d11, d4, d7);
        tessellator.func_983_a(d8, d2 + 0.0D, d10, d5, d7);
        tessellator.func_983_a(d8, d2 + d, d10, d5, d6);
        tessellator.func_983_a(d8, d2 + d, d11, d4, d6);
        tessellator.func_983_a(d8, d2 + 0.0D, d11, d4, d7);
        tessellator.func_983_a(d9, d2 + 0.0D, d10, d5, d7);
        tessellator.func_983_a(d9, d2 + d, d10, d5, d6);
        tessellator.func_983_a(d9, d2 + d, d10, d4, d6);
        tessellator.func_983_a(d9, d2 + 0.0D, d10, d4, d7);
        tessellator.func_983_a(d8, d2 + 0.0D, d11, d5, d7);
        tessellator.func_983_a(d8, d2 + d, d11, d5, d6);
    }

    public boolean func_40726_m(Block block, int i, int j, int k)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int l = block.field_378_bb;
        if(field_1771_b >= 0)
        {
            l = field_1771_b;
        }
        int i1 = (l & 0xf) << 4;
        int j1 = l & 0xf0;
        float f = 0.015625F;
        double d = (float)i1 / 256F;
        double d1 = ((float)i1 + 15.99F) / 256F;
        double d2 = (float)j1 / 256F;
        double d3 = ((float)j1 + 15.99F) / 256F;
        long l1 = (long)(i * 0x2fc20f) ^ (long)k * 0x6ebfff5L ^ (long)j;
        l1 = l1 * l1 * 0x285b825L + l1 * 11L;
        int k1 = (int)(l1 >> 16 & 3L);
        tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j, k));
        float f1 = (float)i + 0.5F;
        float f2 = (float)k + 0.5F;
        float f3 = (float)(k1 & 1) * 0.5F * (float)(1 - ((k1 / 2) % 2) * 2);
        float f4 = (float)(k1 + 1 & 1) * 0.5F * (float)(1 - (((k1 + 1) / 2) % 2) * 2);
        tessellator.func_990_b(block.func_35274_i());
        tessellator.func_983_a((f1 + f3) - f4, (float)j + f, f2 + f3 + f4, d, d2);
        tessellator.func_983_a(f1 + f3 + f4, (float)j + f, (f2 - f3) + f4, d1, d2);
        tessellator.func_983_a((f1 - f3) + f4, (float)j + f, f2 - f3 - f4, d1, d3);
        tessellator.func_983_a(f1 - f3 - f4, (float)j + f, (f2 + f3) - f4, d, d3);
        tessellator.func_990_b((block.func_35274_i() & 0xfefefe) >> 1);
        tessellator.func_983_a(f1 - f3 - f4, (float)j + f, (f2 + f3) - f4, d, d3);
        tessellator.func_983_a((f1 - f3) + f4, (float)j + f, f2 - f3 - f4, d1, d3);
        tessellator.func_983_a(f1 + f3 + f4, (float)j + f, (f2 - f3) + f4, d1, d2);
        tessellator.func_983_a((f1 + f3) - f4, (float)j + f, f2 + f3 + f4, d, d2);
        return true;
    }

    public void func_35926_a(Block block, int i, int j, double d, double d1, 
            double d2, double d3)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int k = block.func_232_a(0, i) + 16;
        if(field_1771_b >= 0)
        {
            k = field_1771_b;
        }
        int l = (k & 0xf) << 4;
        int i1 = k & 0xf0;
        double d4 = (float)l / 256F;
        double d5 = ((float)l + 15.99F) / 256F;
        double d6 = (float)i1 / 256F;
        double d7 = ((double)i1 + 15.989999771118164D * d) / 256D;
        double d8 = (d1 + 0.5D) - 0.5D;
        double d9 = d1 + 0.5D + 0.5D;
        double d10 = (d3 + 0.5D) - 0.5D;
        double d11 = d3 + 0.5D + 0.5D;
        double d12 = d1 + 0.5D;
        double d13 = d3 + 0.5D;
        if(((j + 1) / 2) % 2 == 1)
        {
            double d14 = d5;
            d5 = d4;
            d4 = d14;
        }
        if(j < 2)
        {
            tessellator.func_983_a(d8, d2 + d, d13, d4, d6);
            tessellator.func_983_a(d8, d2 + 0.0D, d13, d4, d7);
            tessellator.func_983_a(d9, d2 + 0.0D, d13, d5, d7);
            tessellator.func_983_a(d9, d2 + d, d13, d5, d6);
            tessellator.func_983_a(d9, d2 + d, d13, d5, d6);
            tessellator.func_983_a(d9, d2 + 0.0D, d13, d5, d7);
            tessellator.func_983_a(d8, d2 + 0.0D, d13, d4, d7);
            tessellator.func_983_a(d8, d2 + d, d13, d4, d6);
        } else
        {
            tessellator.func_983_a(d12, d2 + d, d11, d4, d6);
            tessellator.func_983_a(d12, d2 + 0.0D, d11, d4, d7);
            tessellator.func_983_a(d12, d2 + 0.0D, d10, d5, d7);
            tessellator.func_983_a(d12, d2 + d, d10, d5, d6);
            tessellator.func_983_a(d12, d2 + d, d10, d5, d6);
            tessellator.func_983_a(d12, d2 + 0.0D, d10, d5, d7);
            tessellator.func_983_a(d12, d2 + 0.0D, d11, d4, d7);
            tessellator.func_983_a(d12, d2 + d, d11, d4, d6);
        }
    }

    public void func_1245_b(Block block, int i, double d, double d1, double d2)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int j = block.func_232_a(0, i);
        if(field_1771_b >= 0)
        {
            j = field_1771_b;
        }
        int k = (j & 0xf) << 4;
        int l = j & 0xf0;
        double d3 = (float)k / 256F;
        double d4 = ((float)k + 15.99F) / 256F;
        double d5 = (float)l / 256F;
        double d6 = ((float)l + 15.99F) / 256F;
        double d7 = (d + 0.5D) - 0.25D;
        double d8 = d + 0.5D + 0.25D;
        double d9 = (d2 + 0.5D) - 0.5D;
        double d10 = d2 + 0.5D + 0.5D;
        tessellator.func_983_a(d7, d1 + 1.0D, d9, d3, d5);
        tessellator.func_983_a(d7, d1 + 0.0D, d9, d3, d6);
        tessellator.func_983_a(d7, d1 + 0.0D, d10, d4, d6);
        tessellator.func_983_a(d7, d1 + 1.0D, d10, d4, d5);
        tessellator.func_983_a(d7, d1 + 1.0D, d10, d3, d5);
        tessellator.func_983_a(d7, d1 + 0.0D, d10, d3, d6);
        tessellator.func_983_a(d7, d1 + 0.0D, d9, d4, d6);
        tessellator.func_983_a(d7, d1 + 1.0D, d9, d4, d5);
        tessellator.func_983_a(d8, d1 + 1.0D, d10, d3, d5);
        tessellator.func_983_a(d8, d1 + 0.0D, d10, d3, d6);
        tessellator.func_983_a(d8, d1 + 0.0D, d9, d4, d6);
        tessellator.func_983_a(d8, d1 + 1.0D, d9, d4, d5);
        tessellator.func_983_a(d8, d1 + 1.0D, d9, d3, d5);
        tessellator.func_983_a(d8, d1 + 0.0D, d9, d3, d6);
        tessellator.func_983_a(d8, d1 + 0.0D, d10, d4, d6);
        tessellator.func_983_a(d8, d1 + 1.0D, d10, d4, d5);
        d7 = (d + 0.5D) - 0.5D;
        d8 = d + 0.5D + 0.5D;
        d9 = (d2 + 0.5D) - 0.25D;
        d10 = d2 + 0.5D + 0.25D;
        tessellator.func_983_a(d7, d1 + 1.0D, d9, d3, d5);
        tessellator.func_983_a(d7, d1 + 0.0D, d9, d3, d6);
        tessellator.func_983_a(d8, d1 + 0.0D, d9, d4, d6);
        tessellator.func_983_a(d8, d1 + 1.0D, d9, d4, d5);
        tessellator.func_983_a(d8, d1 + 1.0D, d9, d3, d5);
        tessellator.func_983_a(d8, d1 + 0.0D, d9, d3, d6);
        tessellator.func_983_a(d7, d1 + 0.0D, d9, d4, d6);
        tessellator.func_983_a(d7, d1 + 1.0D, d9, d4, d5);
        tessellator.func_983_a(d8, d1 + 1.0D, d10, d3, d5);
        tessellator.func_983_a(d8, d1 + 0.0D, d10, d3, d6);
        tessellator.func_983_a(d7, d1 + 0.0D, d10, d4, d6);
        tessellator.func_983_a(d7, d1 + 1.0D, d10, d4, d5);
        tessellator.func_983_a(d7, d1 + 1.0D, d10, d3, d5);
        tessellator.func_983_a(d7, d1 + 0.0D, d10, d3, d6);
        tessellator.func_983_a(d8, d1 + 0.0D, d10, d4, d6);
        tessellator.func_983_a(d8, d1 + 1.0D, d10, d4, d5);
    }

    public boolean func_1222_j(Block block, int i, int j, int k)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        int l = block.func_207_d(field_1772_a, i, j, k);
        float f = (float)(l >> 16 & 0xff) / 255F;
        float f1 = (float)(l >> 8 & 0xff) / 255F;
        float f2 = (float)(l & 0xff) / 255F;
        boolean flag = block.func_260_c(field_1772_a, i, j + 1, k, 1);
        boolean flag1 = block.func_260_c(field_1772_a, i, j - 1, k, 0);
        boolean aflag[] = {
            block.func_260_c(field_1772_a, i, j, k - 1, 2), block.func_260_c(field_1772_a, i, j, k + 1, 3), block.func_260_c(field_1772_a, i - 1, j, k, 4), block.func_260_c(field_1772_a, i + 1, j, k, 5)
        };
        if(!flag && !flag1 && !aflag[0] && !aflag[1] && !aflag[2] && !aflag[3])
        {
            return false;
        }
        boolean flag2 = false;
        float f3 = 0.5F;
        float f4 = 1.0F;
        float f5 = 0.8F;
        float f6 = 0.6F;
        double d = 0.0D;
        double d1 = 1.0D;
        Material material = block.field_356_bn;
        int i1 = field_1772_a.func_602_e(i, j, k);
        double d2 = func_1224_a(i, j, k, material);
        double d3 = func_1224_a(i, j, k + 1, material);
        double d4 = func_1224_a(i + 1, j, k + 1, material);
        double d5 = func_1224_a(i + 1, j, k, material);
        double d6 = 0.0010000000474974513D;
        if(field_1773_d || flag)
        {
            flag2 = true;
            int j1 = block.func_232_a(1, i1);
            float f7 = (float)BlockFluid.func_293_a(field_1772_a, i, j, k, material);
            if(f7 > -999F)
            {
                j1 = block.func_232_a(2, i1);
            }
            d2 -= d6;
            d3 -= d6;
            d4 -= d6;
            d5 -= d6;
            int k2 = (j1 & 0xf) << 4;
            int l1 = j1 & 0xf0;
            double d7 = ((double)k2 + 8D) / 256D;
            double d8 = ((double)l1 + 8D) / 256D;
            if(f7 < -999F)
            {
                f7 = 0.0F;
            } else
            {
                d7 = (float)(k2 + 16) / 256F;
                d8 = (float)(l1 + 16) / 256F;
            }
            double d10 = (double)(MathHelper.func_1106_a(f7) * 8F) / 256D;
            double d12 = (double)(MathHelper.func_1114_b(f7) * 8F) / 256D;
            tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j, k));
            float f9 = 1.0F;
            tessellator.func_987_a(f4 * f9 * f, f4 * f9 * f1, f4 * f9 * f2);
            tessellator.func_983_a(i + 0, (double)j + d2, k + 0, d7 - d12 - d10, (d8 - d12) + d10);
            tessellator.func_983_a(i + 0, (double)j + d3, k + 1, (d7 - d12) + d10, d8 + d12 + d10);
            tessellator.func_983_a(i + 1, (double)j + d4, k + 1, d7 + d12 + d10, (d8 + d12) - d10);
            tessellator.func_983_a(i + 1, (double)j + d5, k + 0, (d7 + d12) - d10, d8 - d12 - d10);
        }
        if(field_1773_d || flag1)
        {
            tessellator.func_35835_b(block.func_35275_c(field_1772_a, i, j - 1, k));
            float f8 = 1.0F;
            tessellator.func_987_a(f3 * f8, f3 * f8, f3 * f8);
            func_1244_a(block, i, (double)j + d6, k, block.func_218_a(0));
            flag2 = true;
        }
        for(int k1 = 0; k1 < 4; k1++)
        {
            int j2 = i;
            int i2 = k;
            if(k1 == 0)
            {
                i2 = k - 1;
            }
            if(k1 == 1)
            {
                i2++;
            }
            if(k1 == 2)
            {
                j2 = i - 1;
            }
            if(k1 == 3)
            {
                j2++;
            }
            int l2 = block.func_232_a(k1 + 2, i1);
            int i3 = (l2 & 0xf) << 4;
            int j3 = l2 & 0xf0;
            if(field_1773_d || aflag[k1])
            {
                double d9;
                double d11;
                double d13;
                double d14;
                double d15;
                double d16;
                if(k1 == 0)
                {
                    d11 = d2;
                    d9 = d5;
                    d14 = i;
                    d16 = i + 1;
                    d13 = (double)k + d6;
                    d15 = (double)k + d6;
                } else
                if(k1 == 1)
                {
                    d11 = d4;
                    d9 = d3;
                    d14 = i + 1;
                    d16 = i;
                    d13 = (double)(k + 1) - d6;
                    d15 = (double)(k + 1) - d6;
                } else
                if(k1 == 2)
                {
                    d11 = d3;
                    d9 = d2;
                    d14 = (double)i + d6;
                    d16 = (double)i + d6;
                    d13 = k + 1;
                    d15 = k;
                } else
                {
                    d11 = d5;
                    d9 = d4;
                    d14 = (double)(i + 1) - d6;
                    d16 = (double)(i + 1) - d6;
                    d13 = k;
                    d15 = k + 1;
                }
                flag2 = true;
                double d17 = (float)(i3 + 0) / 256F;
                double d18 = ((double)(i3 + 16) - 0.01D) / 256D;
                double d19 = ((double)j3 + (1.0D - d11) * 16D) / 256D;
                double d20 = ((double)j3 + (1.0D - d9) * 16D) / 256D;
                double d21 = ((double)(j3 + 16) - 0.01D) / 256D;
                tessellator.func_35835_b(block.func_35275_c(field_1772_a, j2, j, i2));
                float f10 = 1.0F;
                if(k1 < 2)
                {
                    f10 *= f5;
                } else
                {
                    f10 *= f6;
                }
                tessellator.func_987_a(f4 * f10 * f, f4 * f10 * f1, f4 * f10 * f2);
                tessellator.func_983_a(d14, (double)j + d11, d13, d17, d19);
                tessellator.func_983_a(d16, (double)j + d9, d15, d18, d20);
                tessellator.func_983_a(d16, j + 0, d15, d18, d21);
                tessellator.func_983_a(d14, j + 0, d13, d17, d21);
            }
        }

        block.field_368_bg = d;
        block.field_362_bj = d1;
        return flag2;
    }

    public float func_1224_a(int i, int j, int k, Material material)
    {
        int l = 0;
        float f = 0.0F;
        for(int i1 = 0; i1 < 4; i1++)
        {
            int j1 = i - (i1 & 1);
            int k1 = k - (i1 >> 1 & 1);
            if(field_1772_a.func_599_f(j1, j + 1, k1) == material)
            {
                return 1.0F;
            }
            Material material1 = field_1772_a.func_599_f(j1, j, k1);
            if(material1 == material)
            {
                int l1 = field_1772_a.func_602_e(j1, j, k1);
                if(l1 >= 8 || l1 == 0)
                {
                    f += BlockFluid.func_288_b(l1) * 10F;
                    l += 10;
                }
                f += BlockFluid.func_288_b(l1);
                l++;
            } else
            if(!material1.func_878_a())
            {
                f++;
                l++;
            }
        }

        return 1.0F - f / (float)l;
    }

    public void func_1243_a(Block block, World world, int i, int j, int k)
    {
        float f = 0.5F;
        float f1 = 1.0F;
        float f2 = 0.8F;
        float f3 = 0.6F;
        Tessellator tessellator = Tessellator.field_1512_a;
        tessellator.func_977_b();
        tessellator.func_35835_b(block.func_35275_c(world, i, j, k));
        float f4 = 1.0F;
        float f5 = 1.0F;
        if(f5 < f4)
        {
            f5 = f4;
        }
        tessellator.func_987_a(f * f5, f * f5, f * f5);
        func_1244_a(block, -0.5D, -0.5D, -0.5D, block.func_218_a(0));
        f5 = 1.0F;
        if(f5 < f4)
        {
            f5 = f4;
        }
        tessellator.func_987_a(f1 * f5, f1 * f5, f1 * f5);
        func_1217_b(block, -0.5D, -0.5D, -0.5D, block.func_218_a(1));
        f5 = 1.0F;
        if(f5 < f4)
        {
            f5 = f4;
        }
        tessellator.func_987_a(f2 * f5, f2 * f5, f2 * f5);
        func_1220_c(block, -0.5D, -0.5D, -0.5D, block.func_218_a(2));
        f5 = 1.0F;
        if(f5 < f4)
        {
            f5 = f4;
        }
        tessellator.func_987_a(f2 * f5, f2 * f5, f2 * f5);
        func_1225_d(block, -0.5D, -0.5D, -0.5D, block.func_218_a(3));
        f5 = 1.0F;
        if(f5 < f4)
        {
            f5 = f4;
        }
        tessellator.func_987_a(f3 * f5, f3 * f5, f3 * f5);
        func_1231_e(block, -0.5D, -0.5D, -0.5D, block.func_218_a(4));
        f5 = 1.0F;
        if(f5 < f4)
        {
            f5 = f4;
        }
        tessellator.func_987_a(f3 * f5, f3 * f5, f3 * f5);
        func_1236_f(block, -0.5D, -0.5D, -0.5D, block.func_218_a(5));
        tessellator.func_982_a();
    }

    public boolean func_1228_k(Block block, int i, int j, int k)
    {
        int l = block.func_207_d(field_1772_a, i, j, k);
        float f = (float)(l >> 16 & 0xff) / 255F;
        float f1 = (float)(l >> 8 & 0xff) / 255F;
        float f2 = (float)(l & 0xff) / 255F;
        if(EntityRenderer.field_28135_a)
        {
            float f3 = (f * 30F + f1 * 59F + f2 * 11F) / 100F;
            float f4 = (f * 30F + f1 * 70F) / 100F;
            float f5 = (f * 30F + f2 * 70F) / 100F;
            f = f3;
            f1 = f4;
            f2 = f5;
        }
        return !Minecraft.func_22005_v() || Block.field_339_t[block.field_376_bc] != 0 ? func_4152_a(block, i, j, k, f, f1, f2) : func_22330_a(block, i, j, k, f, f1, f2);
    }

    public boolean func_22330_a(Block block, int i, int j, int k, float f, float f1, float f2)
    {
        field_22385_e = true;
        boolean flag = false;
        float f3 = field_22384_f;
        float f10 = field_22384_f;
        float f17 = field_22384_f;
        float f24 = field_22384_f;
        boolean flag1 = true;
        boolean flag2 = true;
        boolean flag3 = true;
        boolean flag4 = true;
        boolean flag5 = true;
        boolean flag6 = true;
        field_22384_f = block.func_35276_e(field_1772_a, i, j, k);
        field_22383_g = block.func_35276_e(field_1772_a, i - 1, j, k);
        field_22382_h = block.func_35276_e(field_1772_a, i, j - 1, k);
        field_22381_i = block.func_35276_e(field_1772_a, i, j, k - 1);
        field_22380_j = block.func_35276_e(field_1772_a, i + 1, j, k);
        field_22379_k = block.func_35276_e(field_1772_a, i, j + 1, k);
        field_22378_l = block.func_35276_e(field_1772_a, i, j, k + 1);
        int l = block.func_35275_c(field_1772_a, i, j, k);
        int i1 = l;
        int j1 = l;
        int k1 = l;
        int l1 = l;
        int i2 = l;
        int j2 = l;
        if(block.field_368_bg <= 0.0D)
        {
            j1 = block.func_35275_c(field_1772_a, i, j - 1, k);
        }
        if(block.field_362_bj >= 1.0D)
        {
            i2 = block.func_35275_c(field_1772_a, i, j + 1, k);
        }
        if(block.field_370_bf <= 0.0D)
        {
            i1 = block.func_35275_c(field_1772_a, i - 1, j, k);
        }
        if(block.field_364_bi >= 1.0D)
        {
            l1 = block.func_35275_c(field_1772_a, i + 1, j, k);
        }
        if(block.field_366_bh <= 0.0D)
        {
            k1 = block.func_35275_c(field_1772_a, i, j, k - 1);
        }
        if(block.field_360_bk >= 1.0D)
        {
            j2 = block.func_35275_c(field_1772_a, i, j, k + 1);
        }
        Tessellator tessellator = Tessellator.field_1512_a;
        tessellator.func_35835_b(0xf000f);
        field_22338_U = Block.field_340_s[field_1772_a.func_600_a(i + 1, j + 1, k)];
        field_22359_ac = Block.field_340_s[field_1772_a.func_600_a(i + 1, j - 1, k)];
        field_22334_Y = Block.field_340_s[field_1772_a.func_600_a(i + 1, j, k + 1)];
        field_22363_aa = Block.field_340_s[field_1772_a.func_600_a(i + 1, j, k - 1)];
        field_22337_V = Block.field_340_s[field_1772_a.func_600_a(i - 1, j + 1, k)];
        field_22357_ad = Block.field_340_s[field_1772_a.func_600_a(i - 1, j - 1, k)];
        field_22335_X = Block.field_340_s[field_1772_a.func_600_a(i - 1, j, k - 1)];
        field_22333_Z = Block.field_340_s[field_1772_a.func_600_a(i - 1, j, k + 1)];
        field_22336_W = Block.field_340_s[field_1772_a.func_600_a(i, j + 1, k + 1)];
        field_22339_T = Block.field_340_s[field_1772_a.func_600_a(i, j + 1, k - 1)];
        field_22355_ae = Block.field_340_s[field_1772_a.func_600_a(i, j - 1, k + 1)];
        field_22361_ab = Block.field_340_s[field_1772_a.func_600_a(i, j - 1, k - 1)];
        if(block.field_378_bb == 3)
        {
            flag6 = false;
            flag5 = false;
            flag4 = false;
            flag3 = false;
            flag1 = false;
        }
        if(field_1771_b >= 0)
        {
            flag6 = false;
            flag5 = false;
            flag4 = false;
            flag3 = false;
            flag1 = false;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i, j - 1, k, 0))
        {
            float f4;
            float f11;
            float f18;
            float f25;
            if(field_35946_aj > 0)
            {
                if(block.field_368_bg <= 0.0D)
                {
                    j--;
                }
                field_35935_Q = block.func_35275_c(field_1772_a, i - 1, j, k);
                field_35937_S = block.func_35275_c(field_1772_a, i, j, k - 1);
                field_35932_T = block.func_35275_c(field_1772_a, i, j, k + 1);
                field_35934_V = block.func_35275_c(field_1772_a, i + 1, j, k);
                field_22376_n = block.func_35276_e(field_1772_a, i - 1, j, k);
                field_22374_p = block.func_35276_e(field_1772_a, i, j, k - 1);
                field_22373_q = block.func_35276_e(field_1772_a, i, j, k + 1);
                field_22371_s = block.func_35276_e(field_1772_a, i + 1, j, k);
                if(!field_22361_ab && !field_22357_ad)
                {
                    field_22377_m = field_22376_n;
                    field_35936_P = field_35935_Q;
                } else
                {
                    field_22377_m = block.func_35276_e(field_1772_a, i - 1, j, k - 1);
                    field_35936_P = block.func_35275_c(field_1772_a, i - 1, j, k - 1);
                }
                if(!field_22355_ae && !field_22357_ad)
                {
                    field_22375_o = field_22376_n;
                    field_35938_R = field_35935_Q;
                } else
                {
                    field_22375_o = block.func_35276_e(field_1772_a, i - 1, j, k + 1);
                    field_35938_R = block.func_35275_c(field_1772_a, i - 1, j, k + 1);
                }
                if(!field_22361_ab && !field_22359_ac)
                {
                    field_22372_r = field_22371_s;
                    field_35931_U = field_35934_V;
                } else
                {
                    field_22372_r = block.func_35276_e(field_1772_a, i + 1, j, k - 1);
                    field_35931_U = block.func_35275_c(field_1772_a, i + 1, j, k - 1);
                }
                if(!field_22355_ae && !field_22359_ac)
                {
                    field_22370_t = field_22371_s;
                    field_35933_W = field_35934_V;
                } else
                {
                    field_22370_t = block.func_35276_e(field_1772_a, i + 1, j, k + 1);
                    field_35933_W = block.func_35275_c(field_1772_a, i + 1, j, k + 1);
                }
                if(block.field_368_bg <= 0.0D)
                {
                    j++;
                }
                f4 = (field_22375_o + field_22376_n + field_22373_q + field_22382_h) / 4F;
                f25 = (field_22373_q + field_22382_h + field_22370_t + field_22371_s) / 4F;
                f18 = (field_22382_h + field_22374_p + field_22371_s + field_22372_r) / 4F;
                f11 = (field_22376_n + field_22377_m + field_22382_h + field_22374_p) / 4F;
                field_35943_ak = func_35924_c(field_35938_R, field_35935_Q, field_35932_T, j1);
                field_35948_an = func_35924_c(field_35932_T, field_35933_W, field_35934_V, j1);
                field_35947_am = func_35924_c(field_35937_S, field_35934_V, field_35931_U, j1);
                field_35944_al = func_35924_c(field_35935_Q, field_35936_P, field_35937_S, j1);
            } else
            {
                f25 = field_22382_h;
                f18 = field_22382_h;
                f11 = field_22382_h;
                f4 = field_22382_h;
                field_35943_ak = field_35944_al = field_35947_am = field_35948_an = field_35935_Q;
            }
            field_22351_H = field_22350_I = field_22349_J = field_22348_K = (flag1 ? f : 1.0F) * 0.5F;
            field_22347_L = field_22346_M = field_22345_N = field_22344_O = (flag1 ? f1 : 1.0F) * 0.5F;
            field_22343_P = field_22342_Q = field_22341_R = field_22340_S = (flag1 ? f2 : 1.0F) * 0.5F;
            field_22351_H *= f4;
            field_22347_L *= f4;
            field_22343_P *= f4;
            field_22350_I *= f11;
            field_22346_M *= f11;
            field_22342_Q *= f11;
            field_22349_J *= f18;
            field_22345_N *= f18;
            field_22341_R *= f18;
            field_22348_K *= f25;
            field_22344_O *= f25;
            field_22340_S *= f25;
            func_1244_a(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 0));
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i, j + 1, k, 1))
        {
            float f5;
            float f12;
            float f19;
            float f26;
            if(field_35946_aj > 0)
            {
                if(block.field_362_bj >= 1.0D)
                {
                    j++;
                }
                field_35939_Y = block.func_35275_c(field_1772_a, i - 1, j, k);
                field_35949_ac = block.func_35275_c(field_1772_a, i + 1, j, k);
                field_35951_aa = block.func_35275_c(field_1772_a, i, j, k - 1);
                field_35950_ad = block.func_35275_c(field_1772_a, i, j, k + 1);
                field_22368_v = block.func_35276_e(field_1772_a, i - 1, j, k);
                field_22364_z = block.func_35276_e(field_1772_a, i + 1, j, k);
                field_22366_x = block.func_35276_e(field_1772_a, i, j, k - 1);
                field_22362_A = block.func_35276_e(field_1772_a, i, j, k + 1);
                if(!field_22339_T && !field_22337_V)
                {
                    field_22369_u = field_22368_v;
                    field_35940_X = field_35939_Y;
                } else
                {
                    field_22369_u = block.func_35276_e(field_1772_a, i - 1, j, k - 1);
                    field_35940_X = block.func_35275_c(field_1772_a, i - 1, j, k - 1);
                }
                if(!field_22339_T && !field_22338_U)
                {
                    field_22365_y = field_22364_z;
                    field_35952_ab = field_35949_ac;
                } else
                {
                    field_22365_y = block.func_35276_e(field_1772_a, i + 1, j, k - 1);
                    field_35952_ab = block.func_35275_c(field_1772_a, i + 1, j, k - 1);
                }
                if(!field_22336_W && !field_22337_V)
                {
                    field_22367_w = field_22368_v;
                    field_35941_Z = field_35939_Y;
                } else
                {
                    field_22367_w = block.func_35276_e(field_1772_a, i - 1, j, k + 1);
                    field_35941_Z = block.func_35275_c(field_1772_a, i - 1, j, k + 1);
                }
                if(!field_22336_W && !field_22338_U)
                {
                    field_22360_B = field_22364_z;
                    field_35955_ae = field_35949_ac;
                } else
                {
                    field_22360_B = block.func_35276_e(field_1772_a, i + 1, j, k + 1);
                    field_35955_ae = block.func_35275_c(field_1772_a, i + 1, j, k + 1);
                }
                if(block.field_362_bj >= 1.0D)
                {
                    j--;
                }
                f26 = (field_22367_w + field_22368_v + field_22362_A + field_22379_k) / 4F;
                f5 = (field_22362_A + field_22379_k + field_22360_B + field_22364_z) / 4F;
                f12 = (field_22379_k + field_22366_x + field_22364_z + field_22365_y) / 4F;
                f19 = (field_22368_v + field_22369_u + field_22379_k + field_22366_x) / 4F;
                field_35948_an = func_35924_c(field_35941_Z, field_35939_Y, field_35950_ad, i2);
                field_35943_ak = func_35924_c(field_35950_ad, field_35955_ae, field_35949_ac, i2);
                field_35944_al = func_35924_c(field_35951_aa, field_35949_ac, field_35952_ab, i2);
                field_35947_am = func_35924_c(field_35939_Y, field_35940_X, field_35951_aa, i2);
            } else
            {
                f26 = field_22379_k;
                f19 = field_22379_k;
                f12 = field_22379_k;
                f5 = field_22379_k;
                field_35943_ak = field_35944_al = field_35947_am = field_35948_an = i2;
            }
            field_22351_H = field_22350_I = field_22349_J = field_22348_K = flag2 ? f : 1.0F;
            field_22347_L = field_22346_M = field_22345_N = field_22344_O = flag2 ? f1 : 1.0F;
            field_22343_P = field_22342_Q = field_22341_R = field_22340_S = flag2 ? f2 : 1.0F;
            field_22351_H *= f5;
            field_22347_L *= f5;
            field_22343_P *= f5;
            field_22350_I *= f12;
            field_22346_M *= f12;
            field_22342_Q *= f12;
            field_22349_J *= f19;
            field_22345_N *= f19;
            field_22341_R *= f19;
            field_22348_K *= f26;
            field_22344_O *= f26;
            field_22340_S *= f26;
            func_1217_b(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 1));
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i, j, k - 1, 2))
        {
            float f6;
            float f13;
            float f20;
            float f27;
            if(field_35946_aj > 0)
            {
                if(block.field_366_bh <= 0.0D)
                {
                    k--;
                }
                field_22358_C = block.func_35276_e(field_1772_a, i - 1, j, k);
                field_22374_p = block.func_35276_e(field_1772_a, i, j - 1, k);
                field_22366_x = block.func_35276_e(field_1772_a, i, j + 1, k);
                field_22356_D = block.func_35276_e(field_1772_a, i + 1, j, k);
                field_35956_af = block.func_35275_c(field_1772_a, i - 1, j, k);
                field_35937_S = block.func_35275_c(field_1772_a, i, j - 1, k);
                field_35951_aa = block.func_35275_c(field_1772_a, i, j + 1, k);
                field_35953_ag = block.func_35275_c(field_1772_a, i + 1, j, k);
                if(!field_22335_X && !field_22361_ab)
                {
                    field_22377_m = field_22358_C;
                    field_35936_P = field_35956_af;
                } else
                {
                    field_22377_m = block.func_35276_e(field_1772_a, i - 1, j - 1, k);
                    field_35936_P = block.func_35275_c(field_1772_a, i - 1, j - 1, k);
                }
                if(!field_22335_X && !field_22339_T)
                {
                    field_22369_u = field_22358_C;
                    field_35940_X = field_35956_af;
                } else
                {
                    field_22369_u = block.func_35276_e(field_1772_a, i - 1, j + 1, k);
                    field_35940_X = block.func_35275_c(field_1772_a, i - 1, j + 1, k);
                }
                if(!field_22363_aa && !field_22361_ab)
                {
                    field_22372_r = field_22356_D;
                    field_35931_U = field_35953_ag;
                } else
                {
                    field_22372_r = block.func_35276_e(field_1772_a, i + 1, j - 1, k);
                    field_35931_U = block.func_35275_c(field_1772_a, i + 1, j - 1, k);
                }
                if(!field_22363_aa && !field_22339_T)
                {
                    field_22365_y = field_22356_D;
                    field_35952_ab = field_35953_ag;
                } else
                {
                    field_22365_y = block.func_35276_e(field_1772_a, i + 1, j + 1, k);
                    field_35952_ab = block.func_35275_c(field_1772_a, i + 1, j + 1, k);
                }
                if(block.field_366_bh <= 0.0D)
                {
                    k++;
                }
                f6 = (field_22358_C + field_22369_u + field_22381_i + field_22366_x) / 4F;
                f13 = (field_22381_i + field_22366_x + field_22356_D + field_22365_y) / 4F;
                f20 = (field_22374_p + field_22381_i + field_22372_r + field_22356_D) / 4F;
                f27 = (field_22377_m + field_22358_C + field_22374_p + field_22381_i) / 4F;
                field_35943_ak = func_35924_c(field_35956_af, field_35940_X, field_35951_aa, k1);
                field_35944_al = func_35924_c(field_35951_aa, field_35953_ag, field_35952_ab, k1);
                field_35947_am = func_35924_c(field_35937_S, field_35931_U, field_35953_ag, k1);
                field_35948_an = func_35924_c(field_35936_P, field_35956_af, field_35937_S, k1);
            } else
            {
                f27 = field_22381_i;
                f20 = field_22381_i;
                f13 = field_22381_i;
                f6 = field_22381_i;
                field_35943_ak = field_35944_al = field_35947_am = field_35948_an = k1;
            }
            field_22351_H = field_22350_I = field_22349_J = field_22348_K = (flag3 ? f : 1.0F) * 0.8F;
            field_22347_L = field_22346_M = field_22345_N = field_22344_O = (flag3 ? f1 : 1.0F) * 0.8F;
            field_22343_P = field_22342_Q = field_22341_R = field_22340_S = (flag3 ? f2 : 1.0F) * 0.8F;
            field_22351_H *= f6;
            field_22347_L *= f6;
            field_22343_P *= f6;
            field_22350_I *= f13;
            field_22346_M *= f13;
            field_22342_Q *= f13;
            field_22349_J *= f20;
            field_22345_N *= f20;
            field_22341_R *= f20;
            field_22348_K *= f27;
            field_22344_O *= f27;
            field_22340_S *= f27;
            int k2 = block.func_211_a(field_1772_a, i, j, k, 2);
            func_1220_c(block, i, j, k, k2);
            if(cfgGrassFix && k2 == 3 && field_1771_b < 0)
            {
                field_22351_H *= f;
                field_22350_I *= f;
                field_22349_J *= f;
                field_22348_K *= f;
                field_22347_L *= f1;
                field_22346_M *= f1;
                field_22345_N *= f1;
                field_22344_O *= f1;
                field_22343_P *= f2;
                field_22342_Q *= f2;
                field_22341_R *= f2;
                field_22340_S *= f2;
                func_1220_c(block, i, j, k, 38);
            }
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i, j, k + 1, 3))
        {
            float f7;
            float f14;
            float f21;
            float f28;
            if(field_35946_aj > 0)
            {
                if(block.field_360_bk >= 1.0D)
                {
                    k++;
                }
                field_22354_E = block.func_35276_e(field_1772_a, i - 1, j, k);
                field_22353_F = block.func_35276_e(field_1772_a, i + 1, j, k);
                field_22373_q = block.func_35276_e(field_1772_a, i, j - 1, k);
                field_22362_A = block.func_35276_e(field_1772_a, i, j + 1, k);
                field_35954_ah = block.func_35275_c(field_1772_a, i - 1, j, k);
                field_35945_ai = block.func_35275_c(field_1772_a, i + 1, j, k);
                field_35932_T = block.func_35275_c(field_1772_a, i, j - 1, k);
                field_35950_ad = block.func_35275_c(field_1772_a, i, j + 1, k);
                if(!field_22333_Z && !field_22355_ae)
                {
                    field_22375_o = field_22354_E;
                    field_35938_R = field_35954_ah;
                } else
                {
                    field_22375_o = block.func_35276_e(field_1772_a, i - 1, j - 1, k);
                    field_35938_R = block.func_35275_c(field_1772_a, i - 1, j - 1, k);
                }
                if(!field_22333_Z && !field_22336_W)
                {
                    field_22367_w = field_22354_E;
                    field_35941_Z = field_35954_ah;
                } else
                {
                    field_22367_w = block.func_35276_e(field_1772_a, i - 1, j + 1, k);
                    field_35941_Z = block.func_35275_c(field_1772_a, i - 1, j + 1, k);
                }
                if(!field_22334_Y && !field_22355_ae)
                {
                    field_22370_t = field_22353_F;
                    field_35933_W = field_35945_ai;
                } else
                {
                    field_22370_t = block.func_35276_e(field_1772_a, i + 1, j - 1, k);
                    field_35933_W = block.func_35275_c(field_1772_a, i + 1, j - 1, k);
                }
                if(!field_22334_Y && !field_22336_W)
                {
                    field_22360_B = field_22353_F;
                    field_35955_ae = field_35945_ai;
                } else
                {
                    field_22360_B = block.func_35276_e(field_1772_a, i + 1, j + 1, k);
                    field_35955_ae = block.func_35275_c(field_1772_a, i + 1, j + 1, k);
                }
                if(block.field_360_bk >= 1.0D)
                {
                    k--;
                }
                f7 = (field_22354_E + field_22367_w + field_22378_l + field_22362_A) / 4F;
                f28 = (field_22378_l + field_22362_A + field_22353_F + field_22360_B) / 4F;
                f21 = (field_22373_q + field_22378_l + field_22370_t + field_22353_F) / 4F;
                f14 = (field_22375_o + field_22354_E + field_22373_q + field_22378_l) / 4F;
                field_35943_ak = func_35924_c(field_35954_ah, field_35941_Z, field_35950_ad, j2);
                field_35948_an = func_35924_c(field_35950_ad, field_35945_ai, field_35955_ae, j2);
                field_35947_am = func_35924_c(field_35932_T, field_35933_W, field_35945_ai, j2);
                field_35944_al = func_35924_c(field_35938_R, field_35954_ah, field_35932_T, j2);
            } else
            {
                f28 = field_22378_l;
                f21 = field_22378_l;
                f14 = field_22378_l;
                f7 = field_22378_l;
                field_35943_ak = field_35944_al = field_35947_am = field_35948_an = j2;
            }
            field_22351_H = field_22350_I = field_22349_J = field_22348_K = (flag4 ? f : 1.0F) * 0.8F;
            field_22347_L = field_22346_M = field_22345_N = field_22344_O = (flag4 ? f1 : 1.0F) * 0.8F;
            field_22343_P = field_22342_Q = field_22341_R = field_22340_S = (flag4 ? f2 : 1.0F) * 0.8F;
            field_22351_H *= f7;
            field_22347_L *= f7;
            field_22343_P *= f7;
            field_22350_I *= f14;
            field_22346_M *= f14;
            field_22342_Q *= f14;
            field_22349_J *= f21;
            field_22345_N *= f21;
            field_22341_R *= f21;
            field_22348_K *= f28;
            field_22344_O *= f28;
            field_22340_S *= f28;
            int l2 = block.func_211_a(field_1772_a, i, j, k, 3);
            func_1225_d(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 3));
            if(cfgGrassFix && l2 == 3 && field_1771_b < 0)
            {
                field_22351_H *= f;
                field_22350_I *= f;
                field_22349_J *= f;
                field_22348_K *= f;
                field_22347_L *= f1;
                field_22346_M *= f1;
                field_22345_N *= f1;
                field_22344_O *= f1;
                field_22343_P *= f2;
                field_22342_Q *= f2;
                field_22341_R *= f2;
                field_22340_S *= f2;
                func_1225_d(block, i, j, k, 38);
            }
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i - 1, j, k, 4))
        {
            float f8;
            float f15;
            float f22;
            float f29;
            if(field_35946_aj > 0)
            {
                if(block.field_370_bf <= 0.0D)
                {
                    i--;
                }
                field_22376_n = block.func_35276_e(field_1772_a, i, j - 1, k);
                field_22358_C = block.func_35276_e(field_1772_a, i, j, k - 1);
                field_22354_E = block.func_35276_e(field_1772_a, i, j, k + 1);
                field_22368_v = block.func_35276_e(field_1772_a, i, j + 1, k);
                field_35935_Q = block.func_35275_c(field_1772_a, i, j - 1, k);
                field_35956_af = block.func_35275_c(field_1772_a, i, j, k - 1);
                field_35954_ah = block.func_35275_c(field_1772_a, i, j, k + 1);
                field_35939_Y = block.func_35275_c(field_1772_a, i, j + 1, k);
                if(!field_22335_X && !field_22357_ad)
                {
                    field_22377_m = field_22358_C;
                    field_35936_P = field_35956_af;
                } else
                {
                    field_22377_m = block.func_35276_e(field_1772_a, i, j - 1, k - 1);
                    field_35936_P = block.func_35275_c(field_1772_a, i, j - 1, k - 1);
                }
                if(!field_22333_Z && !field_22357_ad)
                {
                    field_22375_o = field_22354_E;
                    field_35938_R = field_35954_ah;
                } else
                {
                    field_22375_o = block.func_35276_e(field_1772_a, i, j - 1, k + 1);
                    field_35938_R = block.func_35275_c(field_1772_a, i, j - 1, k + 1);
                }
                if(!field_22335_X && !field_22337_V)
                {
                    field_22369_u = field_22358_C;
                    field_35940_X = field_35956_af;
                } else
                {
                    field_22369_u = block.func_35276_e(field_1772_a, i, j + 1, k - 1);
                    field_35940_X = block.func_35275_c(field_1772_a, i, j + 1, k - 1);
                }
                if(!field_22333_Z && !field_22337_V)
                {
                    field_22367_w = field_22354_E;
                    field_35941_Z = field_35954_ah;
                } else
                {
                    field_22367_w = block.func_35276_e(field_1772_a, i, j + 1, k + 1);
                    field_35941_Z = block.func_35275_c(field_1772_a, i, j + 1, k + 1);
                }
                if(block.field_370_bf <= 0.0D)
                {
                    i++;
                }
                f29 = (field_22376_n + field_22375_o + field_22383_g + field_22354_E) / 4F;
                f8 = (field_22383_g + field_22354_E + field_22368_v + field_22367_w) / 4F;
                f15 = (field_22358_C + field_22383_g + field_22369_u + field_22368_v) / 4F;
                f22 = (field_22377_m + field_22376_n + field_22358_C + field_22383_g) / 4F;
                field_35948_an = func_35924_c(field_35935_Q, field_35938_R, field_35954_ah, i1);
                field_35943_ak = func_35924_c(field_35954_ah, field_35939_Y, field_35941_Z, i1);
                field_35944_al = func_35924_c(field_35956_af, field_35940_X, field_35939_Y, i1);
                field_35947_am = func_35924_c(field_35936_P, field_35935_Q, field_35956_af, i1);
            } else
            {
                f29 = field_22383_g;
                f22 = field_22383_g;
                f15 = field_22383_g;
                f8 = field_22383_g;
                field_35943_ak = field_35944_al = field_35947_am = field_35948_an = i1;
            }
            field_22351_H = field_22350_I = field_22349_J = field_22348_K = (flag5 ? f : 1.0F) * 0.6F;
            field_22347_L = field_22346_M = field_22345_N = field_22344_O = (flag5 ? f1 : 1.0F) * 0.6F;
            field_22343_P = field_22342_Q = field_22341_R = field_22340_S = (flag5 ? f2 : 1.0F) * 0.6F;
            field_22351_H *= f8;
            field_22347_L *= f8;
            field_22343_P *= f8;
            field_22350_I *= f15;
            field_22346_M *= f15;
            field_22342_Q *= f15;
            field_22349_J *= f22;
            field_22345_N *= f22;
            field_22341_R *= f22;
            field_22348_K *= f29;
            field_22344_O *= f29;
            field_22340_S *= f29;
            int i3 = block.func_211_a(field_1772_a, i, j, k, 4);
            func_1231_e(block, i, j, k, i3);
            if(cfgGrassFix && i3 == 3 && field_1771_b < 0)
            {
                field_22351_H *= f;
                field_22350_I *= f;
                field_22349_J *= f;
                field_22348_K *= f;
                field_22347_L *= f1;
                field_22346_M *= f1;
                field_22345_N *= f1;
                field_22344_O *= f1;
                field_22343_P *= f2;
                field_22342_Q *= f2;
                field_22341_R *= f2;
                field_22340_S *= f2;
                func_1231_e(block, i, j, k, 38);
            }
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i + 1, j, k, 5))
        {
            float f9;
            float f16;
            float f23;
            float f30;
            if(field_35946_aj > 0)
            {
                if(block.field_364_bi >= 1.0D)
                {
                    i++;
                }
                field_22371_s = block.func_35276_e(field_1772_a, i, j - 1, k);
                field_22356_D = block.func_35276_e(field_1772_a, i, j, k - 1);
                field_22353_F = block.func_35276_e(field_1772_a, i, j, k + 1);
                field_22364_z = block.func_35276_e(field_1772_a, i, j + 1, k);
                field_35934_V = block.func_35275_c(field_1772_a, i, j - 1, k);
                field_35953_ag = block.func_35275_c(field_1772_a, i, j, k - 1);
                field_35945_ai = block.func_35275_c(field_1772_a, i, j, k + 1);
                field_35949_ac = block.func_35275_c(field_1772_a, i, j + 1, k);
                if(!field_22359_ac && !field_22363_aa)
                {
                    field_22372_r = field_22356_D;
                    field_35931_U = field_35953_ag;
                } else
                {
                    field_22372_r = block.func_35276_e(field_1772_a, i, j - 1, k - 1);
                    field_35931_U = block.func_35275_c(field_1772_a, i, j - 1, k - 1);
                }
                if(!field_22359_ac && !field_22334_Y)
                {
                    field_22370_t = field_22353_F;
                    field_35933_W = field_35945_ai;
                } else
                {
                    field_22370_t = block.func_35276_e(field_1772_a, i, j - 1, k + 1);
                    field_35933_W = block.func_35275_c(field_1772_a, i, j - 1, k + 1);
                }
                if(!field_22338_U && !field_22363_aa)
                {
                    field_22365_y = field_22356_D;
                    field_35952_ab = field_35953_ag;
                } else
                {
                    field_22365_y = block.func_35276_e(field_1772_a, i, j + 1, k - 1);
                    field_35952_ab = block.func_35275_c(field_1772_a, i, j + 1, k - 1);
                }
                if(!field_22338_U && !field_22334_Y)
                {
                    field_22360_B = field_22353_F;
                    field_35955_ae = field_35945_ai;
                } else
                {
                    field_22360_B = block.func_35276_e(field_1772_a, i, j + 1, k + 1);
                    field_35955_ae = block.func_35275_c(field_1772_a, i, j + 1, k + 1);
                }
                if(block.field_364_bi >= 1.0D)
                {
                    i--;
                }
                f9 = (field_22371_s + field_22370_t + field_22380_j + field_22353_F) / 4F;
                f30 = (field_22380_j + field_22353_F + field_22364_z + field_22360_B) / 4F;
                f23 = (field_22356_D + field_22380_j + field_22365_y + field_22364_z) / 4F;
                f16 = (field_22372_r + field_22371_s + field_22356_D + field_22380_j) / 4F;
                field_35943_ak = func_35924_c(field_35934_V, field_35933_W, field_35945_ai, l1);
                field_35948_an = func_35924_c(field_35945_ai, field_35949_ac, field_35955_ae, l1);
                field_35947_am = func_35924_c(field_35953_ag, field_35952_ab, field_35949_ac, l1);
                field_35944_al = func_35924_c(field_35931_U, field_35934_V, field_35953_ag, l1);
            } else
            {
                f30 = field_22380_j;
                f23 = field_22380_j;
                f16 = field_22380_j;
                f9 = field_22380_j;
                field_35943_ak = field_35944_al = field_35947_am = field_35948_an = l1;
            }
            field_22351_H = field_22350_I = field_22349_J = field_22348_K = (flag6 ? f : 1.0F) * 0.6F;
            field_22347_L = field_22346_M = field_22345_N = field_22344_O = (flag6 ? f1 : 1.0F) * 0.6F;
            field_22343_P = field_22342_Q = field_22341_R = field_22340_S = (flag6 ? f2 : 1.0F) * 0.6F;
            field_22351_H *= f9;
            field_22347_L *= f9;
            field_22343_P *= f9;
            field_22350_I *= f16;
            field_22346_M *= f16;
            field_22342_Q *= f16;
            field_22349_J *= f23;
            field_22345_N *= f23;
            field_22341_R *= f23;
            field_22348_K *= f30;
            field_22344_O *= f30;
            field_22340_S *= f30;
            int j3 = block.func_211_a(field_1772_a, i, j, k, 5);
            func_1236_f(block, i, j, k, j3);
            if(cfgGrassFix && j3 == 3 && field_1771_b < 0)
            {
                field_22351_H *= f;
                field_22350_I *= f;
                field_22349_J *= f;
                field_22348_K *= f;
                field_22347_L *= f1;
                field_22346_M *= f1;
                field_22345_N *= f1;
                field_22344_O *= f1;
                field_22343_P *= f2;
                field_22342_Q *= f2;
                field_22341_R *= f2;
                field_22340_S *= f2;
                func_1236_f(block, i, j, k, 38);
            }
            flag = true;
        }
        field_22385_e = false;
        return flag;
    }

    public int func_35924_c(int i, int j, int k, int l)
    {
        if(i == 0)
        {
            i = l;
        }
        if(j == 0)
        {
            j = l;
        }
        if(k == 0)
        {
            k = l;
        }
        return i + j + k + l >> 2 & 0xff00ff;
    }

    public boolean func_4152_a(Block block, int i, int j, int k, float f, float f1, float f2)
    {
        field_22385_e = false;
        Tessellator tessellator = Tessellator.field_1512_a;
        boolean flag = false;
        float f3 = 0.5F;
        float f4 = 1.0F;
        float f5 = 0.8F;
        float f6 = 0.6F;
        float f7 = f4 * f;
        float f8 = f4 * f1;
        float f9 = f4 * f2;
        float f10 = f3;
        float f11 = f5;
        float f12 = f6;
        float f13 = f3;
        float f14 = f5;
        float f15 = f6;
        float f16 = f3;
        float f17 = f5;
        float f18 = f6;
        if(block != Block.field_337_v)
        {
            f10 = f3 * f;
            f11 = f5 * f;
            f12 = f6 * f;
            f13 = f3 * f1;
            f14 = f5 * f1;
            f15 = f6 * f1;
            f16 = f3 * f2;
            f17 = f5 * f2;
            f18 = f6 * f2;
        }
        int l = block.func_35275_c(field_1772_a, i, j, k);
        if(field_1773_d || block.func_260_c(field_1772_a, i, j - 1, k, 0))
        {
            tessellator.func_35835_b(block.field_368_bg <= 0.0D ? block.func_35275_c(field_1772_a, i, j - 1, k) : l);
            tessellator.func_987_a(f10, f13, f16);
            func_1244_a(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 0));
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i, j + 1, k, 1))
        {
            tessellator.func_35835_b(block.field_362_bj >= 1.0D ? block.func_35275_c(field_1772_a, i, j + 1, k) : l);
            tessellator.func_987_a(f7, f8, f9);
            func_1217_b(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 1));
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i, j, k - 1, 2))
        {
            tessellator.func_35835_b(block.field_366_bh <= 0.0D ? block.func_35275_c(field_1772_a, i, j, k - 1) : l);
            tessellator.func_987_a(f11, f14, f17);
            int i1 = block.func_211_a(field_1772_a, i, j, k, 2);
            func_1220_c(block, i, j, k, i1);
            if(cfgGrassFix && i1 == 3 && field_1771_b < 0)
            {
                tessellator.func_987_a(f11 * f, f14 * f1, f17 * f2);
                func_1220_c(block, i, j, k, 38);
            }
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i, j, k + 1, 3))
        {
            tessellator.func_35835_b(block.field_360_bk >= 1.0D ? block.func_35275_c(field_1772_a, i, j, k + 1) : l);
            tessellator.func_987_a(f11, f14, f17);
            int j1 = block.func_211_a(field_1772_a, i, j, k, 3);
            func_1225_d(block, i, j, k, j1);
            if(cfgGrassFix && j1 == 3 && field_1771_b < 0)
            {
                tessellator.func_987_a(f11 * f, f14 * f1, f17 * f2);
                func_1225_d(block, i, j, k, 38);
            }
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i - 1, j, k, 4))
        {
            tessellator.func_35835_b(block.field_370_bf <= 0.0D ? block.func_35275_c(field_1772_a, i - 1, j, k) : l);
            tessellator.func_987_a(f12, f15, f18);
            int k1 = block.func_211_a(field_1772_a, i, j, k, 4);
            func_1231_e(block, i, j, k, k1);
            if(cfgGrassFix && k1 == 3 && field_1771_b < 0)
            {
                tessellator.func_987_a(f12 * f, f15 * f1, f18 * f2);
                func_1231_e(block, i, j, k, 38);
            }
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i + 1, j, k, 5))
        {
            tessellator.func_35835_b(block.field_364_bi >= 1.0D ? block.func_35275_c(field_1772_a, i + 1, j, k) : l);
            tessellator.func_987_a(f12, f15, f18);
            int l1 = block.func_211_a(field_1772_a, i, j, k, 5);
            func_1236_f(block, i, j, k, l1);
            if(cfgGrassFix && l1 == 3 && field_1771_b < 0)
            {
                tessellator.func_987_a(f12 * f, f15 * f1, f18 * f2);
                func_1236_f(block, i, j, k, 38);
            }
            flag = true;
        }
        return flag;
    }

    public boolean func_1233_l(Block block, int i, int j, int k)
    {
        int l = block.func_207_d(field_1772_a, i, j, k);
        float f = (float)(l >> 16 & 0xff) / 255F;
        float f1 = (float)(l >> 8 & 0xff) / 255F;
        float f2 = (float)(l & 0xff) / 255F;
        if(EntityRenderer.field_28135_a)
        {
            float f3 = (f * 30F + f1 * 59F + f2 * 11F) / 100F;
            float f4 = (f * 30F + f1 * 70F) / 100F;
            float f5 = (f * 30F + f2 * 70F) / 100F;
            f = f3;
            f1 = f4;
            f2 = f5;
        }
        return func_1230_b(block, i, j, k, f, f1, f2);
    }

    public boolean func_1230_b(Block block, int i, int j, int k, float f, float f1, float f2)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        boolean flag = false;
        float f3 = 0.5F;
        float f4 = 1.0F;
        float f5 = 0.8F;
        float f6 = 0.6F;
        float f7 = f3 * f;
        float f8 = f4 * f;
        float f9 = f5 * f;
        float f10 = f6 * f;
        float f11 = f3 * f1;
        float f12 = f4 * f1;
        float f13 = f5 * f1;
        float f14 = f6 * f1;
        float f15 = f3 * f2;
        float f16 = f4 * f2;
        float f17 = f5 * f2;
        float f18 = f6 * f2;
        float f19 = 0.0625F;
        int l = block.func_35275_c(field_1772_a, i, j, k);
        if(field_1773_d || block.func_260_c(field_1772_a, i, j - 1, k, 0))
        {
            tessellator.func_35835_b(block.field_368_bg <= 0.0D ? block.func_35275_c(field_1772_a, i, j - 1, k) : l);
            tessellator.func_987_a(f7, f11, f15);
            func_1244_a(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 0));
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i, j + 1, k, 1))
        {
            tessellator.func_35835_b(block.field_362_bj >= 1.0D ? block.func_35275_c(field_1772_a, i, j + 1, k) : l);
            tessellator.func_987_a(f8, f12, f16);
            func_1217_b(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 1));
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i, j, k - 1, 2))
        {
            tessellator.func_35835_b(block.field_366_bh <= 0.0D ? block.func_35275_c(field_1772_a, i, j, k - 1) : l);
            tessellator.func_987_a(f9, f13, f17);
            tessellator.func_988_c(0.0F, 0.0F, f19);
            func_1220_c(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 2));
            tessellator.func_988_c(0.0F, 0.0F, -f19);
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i, j, k + 1, 3))
        {
            tessellator.func_35835_b(block.field_360_bk >= 1.0D ? block.func_35275_c(field_1772_a, i, j, k + 1) : l);
            tessellator.func_987_a(f9, f13, f17);
            tessellator.func_988_c(0.0F, 0.0F, -f19);
            func_1225_d(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 3));
            tessellator.func_988_c(0.0F, 0.0F, f19);
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i - 1, j, k, 4))
        {
            tessellator.func_35835_b(block.field_370_bf <= 0.0D ? block.func_35275_c(field_1772_a, i - 1, j, k) : l);
            tessellator.func_987_a(f10, f14, f18);
            tessellator.func_988_c(f19, 0.0F, 0.0F);
            func_1231_e(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 4));
            tessellator.func_988_c(-f19, 0.0F, 0.0F);
            flag = true;
        }
        if(field_1773_d || block.func_260_c(field_1772_a, i + 1, j, k, 5))
        {
            tessellator.func_35835_b(block.field_364_bi >= 1.0D ? block.func_35275_c(field_1772_a, i + 1, j, k) : l);
            tessellator.func_987_a(f10, f14, f18);
            tessellator.func_988_c(-f19, 0.0F, 0.0F);
            func_1236_f(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 5));
            tessellator.func_988_c(f19, 0.0F, 0.0F);
            flag = true;
        }
        return flag;
    }

    public boolean func_35925_a(BlockFence blockfence, int i, int j, int k)
    {
        boolean flag = false;
        float f = 0.375F;
        float f1 = 0.625F;
        blockfence.func_213_a(f, 0.0F, f, f1, 1.0F, f1);
        func_1228_k(blockfence, i, j, k);
        flag = true;
        boolean flag1 = false;
        boolean flag2 = false;
        if(blockfence.func_35303_f(field_1772_a, i - 1, j, k) || blockfence.func_35303_f(field_1772_a, i + 1, j, k))
        {
            flag1 = true;
        }
        if(blockfence.func_35303_f(field_1772_a, i, j, k - 1) || blockfence.func_35303_f(field_1772_a, i, j, k + 1))
        {
            flag2 = true;
        }
        boolean flag3 = blockfence.func_35303_f(field_1772_a, i - 1, j, k);
        boolean flag4 = blockfence.func_35303_f(field_1772_a, i + 1, j, k);
        boolean flag5 = blockfence.func_35303_f(field_1772_a, i, j, k - 1);
        boolean flag6 = blockfence.func_35303_f(field_1772_a, i, j, k + 1);
        if(!flag1 && !flag2)
        {
            flag1 = true;
        }
        f = 0.4375F;
        f1 = 0.5625F;
        float f2 = 0.75F;
        float f3 = 0.9375F;
        float f4 = flag3 ? 0.0F : f;
        float f5 = flag4 ? 1.0F : f1;
        float f6 = flag5 ? 0.0F : f;
        float f7 = flag6 ? 1.0F : f1;
        if(flag1)
        {
            blockfence.func_213_a(f4, f2, f, f5, f3, f1);
            func_1228_k(blockfence, i, j, k);
            flag = true;
        }
        if(flag2)
        {
            blockfence.func_213_a(f, f2, f6, f1, f3, f7);
            func_1228_k(blockfence, i, j, k);
            flag = true;
        }
        f2 = 0.375F;
        f3 = 0.5625F;
        if(flag1)
        {
            blockfence.func_213_a(f4, f2, f, f5, f3, f1);
            func_1228_k(blockfence, i, j, k);
            flag = true;
        }
        if(flag2)
        {
            blockfence.func_213_a(f, f2, f6, f1, f3, f7);
            func_1228_k(blockfence, i, j, k);
            flag = true;
        }
        blockfence.func_238_a(field_1772_a, i, j, k);
        return flag;
    }

    public boolean func_41088_a(BlockDragonEgg blockdragonegg, int i, int j, int k)
    {
        boolean flag = false;
        int l = 0;
        for(int i1 = 0; i1 < 8; i1++)
        {
            int j1 = 0;
            byte byte0 = 1;
            if(i1 == 0)
            {
                j1 = 2;
            }
            if(i1 == 1)
            {
                j1 = 3;
            }
            if(i1 == 2)
            {
                j1 = 4;
            }
            if(i1 == 3)
            {
                j1 = 5;
                byte0 = 2;
            }
            if(i1 == 4)
            {
                j1 = 6;
                byte0 = 3;
            }
            if(i1 == 5)
            {
                j1 = 7;
                byte0 = 5;
            }
            if(i1 == 6)
            {
                j1 = 6;
                byte0 = 2;
            }
            if(i1 == 7)
            {
                j1 = 3;
            }
            float f = (float)j1 / 16F;
            float f1 = 1.0F - (float)l / 16F;
            float f2 = 1.0F - (float)(l + byte0) / 16F;
            l += byte0;
            blockdragonegg.func_213_a(0.5F - f, f2, 0.5F - f, 0.5F + f, f1, 0.5F + f);
            func_1228_k(blockdragonegg, i, j, k);
        }

        flag = true;
        blockdragonegg.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
        return flag;
    }

    public boolean func_35923_a(BlockFenceGate blockfencegate, int i, int j, int k)
    {
        boolean flag = true;
        int l = field_1772_a.func_602_e(i, j, k);
        boolean flag1 = BlockFenceGate.func_35291_d(l);
        int i1 = BlockFenceGate.func_35290_f(l);
        if(i1 != 3 && i1 != 1)
        {
            float f = 0.0F;
            float f8 = 0.125F;
            float f4 = 0.4375F;
            float f12 = 0.5625F;
            blockfencegate.func_213_a(f, 0.3125F, f4, f8, 1.0F, f12);
            func_1228_k(blockfencegate, i, j, k);
            f = 0.875F;
            f8 = 1.0F;
            blockfencegate.func_213_a(f, 0.3125F, f4, f8, 1.0F, f12);
            func_1228_k(blockfencegate, i, j, k);
        } else
        {
            float f1 = 0.4375F;
            float f9 = 0.5625F;
            float f5 = 0.0F;
            float f13 = 0.125F;
            blockfencegate.func_213_a(f1, 0.3125F, f5, f9, 1.0F, f13);
            func_1228_k(blockfencegate, i, j, k);
            f5 = 0.875F;
            f13 = 1.0F;
            blockfencegate.func_213_a(f1, 0.3125F, f5, f9, 1.0F, f13);
            func_1228_k(blockfencegate, i, j, k);
        }
        if(!flag1)
        {
            if(i1 != 3 && i1 != 1)
            {
                float f2 = 0.375F;
                float f10 = 0.5F;
                float f6 = 0.4375F;
                float f14 = 0.5625F;
                blockfencegate.func_213_a(f2, 0.375F, f6, f10, 0.9375F, f14);
                func_1228_k(blockfencegate, i, j, k);
                f2 = 0.5F;
                f10 = 0.625F;
                blockfencegate.func_213_a(f2, 0.375F, f6, f10, 0.9375F, f14);
                func_1228_k(blockfencegate, i, j, k);
                f2 = 0.625F;
                f10 = 0.875F;
                blockfencegate.func_213_a(f2, 0.375F, f6, f10, 0.5625F, f14);
                func_1228_k(blockfencegate, i, j, k);
                blockfencegate.func_213_a(f2, 0.75F, f6, f10, 0.9375F, f14);
                func_1228_k(blockfencegate, i, j, k);
                f2 = 0.125F;
                f10 = 0.375F;
                blockfencegate.func_213_a(f2, 0.375F, f6, f10, 0.5625F, f14);
                func_1228_k(blockfencegate, i, j, k);
                blockfencegate.func_213_a(f2, 0.75F, f6, f10, 0.9375F, f14);
                func_1228_k(blockfencegate, i, j, k);
            } else
            {
                float f3 = 0.4375F;
                float f11 = 0.5625F;
                float f7 = 0.375F;
                float f15 = 0.5F;
                blockfencegate.func_213_a(f3, 0.375F, f7, f11, 0.9375F, f15);
                func_1228_k(blockfencegate, i, j, k);
                f7 = 0.5F;
                f15 = 0.625F;
                blockfencegate.func_213_a(f3, 0.375F, f7, f11, 0.9375F, f15);
                func_1228_k(blockfencegate, i, j, k);
                f7 = 0.625F;
                f15 = 0.875F;
                blockfencegate.func_213_a(f3, 0.375F, f7, f11, 0.5625F, f15);
                func_1228_k(blockfencegate, i, j, k);
                blockfencegate.func_213_a(f3, 0.75F, f7, f11, 0.9375F, f15);
                func_1228_k(blockfencegate, i, j, k);
                f7 = 0.125F;
                f15 = 0.375F;
                blockfencegate.func_213_a(f3, 0.375F, f7, f11, 0.5625F, f15);
                func_1228_k(blockfencegate, i, j, k);
                blockfencegate.func_213_a(f3, 0.75F, f7, f11, 0.9375F, f15);
                func_1228_k(blockfencegate, i, j, k);
            }
        } else
        if(i1 == 3)
        {
            blockfencegate.func_213_a(0.8125F, 0.375F, 0.0F, 0.9375F, 0.9375F, 0.125F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.8125F, 0.375F, 0.875F, 0.9375F, 0.9375F, 1.0F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.5625F, 0.375F, 0.0F, 0.8125F, 0.5625F, 0.125F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.5625F, 0.375F, 0.875F, 0.8125F, 0.5625F, 1.0F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.5625F, 0.75F, 0.0F, 0.8125F, 0.9375F, 0.125F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.5625F, 0.75F, 0.875F, 0.8125F, 0.9375F, 1.0F);
            func_1228_k(blockfencegate, i, j, k);
        } else
        if(i1 == 1)
        {
            blockfencegate.func_213_a(0.0625F, 0.375F, 0.0F, 0.1875F, 0.9375F, 0.125F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.0625F, 0.375F, 0.875F, 0.1875F, 0.9375F, 1.0F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.1875F, 0.375F, 0.0F, 0.4375F, 0.5625F, 0.125F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.1875F, 0.375F, 0.875F, 0.4375F, 0.5625F, 1.0F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.1875F, 0.75F, 0.0F, 0.4375F, 0.9375F, 0.125F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.1875F, 0.75F, 0.875F, 0.4375F, 0.9375F, 1.0F);
            func_1228_k(blockfencegate, i, j, k);
        } else
        if(i1 == 0)
        {
            blockfencegate.func_213_a(0.0F, 0.375F, 0.8125F, 0.125F, 0.9375F, 0.9375F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.875F, 0.375F, 0.8125F, 1.0F, 0.9375F, 0.9375F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.0F, 0.375F, 0.5625F, 0.125F, 0.5625F, 0.8125F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.875F, 0.375F, 0.5625F, 1.0F, 0.5625F, 0.8125F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.0F, 0.75F, 0.5625F, 0.125F, 0.9375F, 0.8125F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.875F, 0.75F, 0.5625F, 1.0F, 0.9375F, 0.8125F);
            func_1228_k(blockfencegate, i, j, k);
        } else
        if(i1 == 2)
        {
            blockfencegate.func_213_a(0.0F, 0.375F, 0.0625F, 0.125F, 0.9375F, 0.1875F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.875F, 0.375F, 0.0625F, 1.0F, 0.9375F, 0.1875F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.0F, 0.375F, 0.1875F, 0.125F, 0.5625F, 0.4375F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.875F, 0.375F, 0.1875F, 1.0F, 0.5625F, 0.4375F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.0F, 0.75F, 0.1875F, 0.125F, 0.9375F, 0.4375F);
            func_1228_k(blockfencegate, i, j, k);
            blockfencegate.func_213_a(0.875F, 0.75F, 0.1875F, 1.0F, 0.9375F, 0.4375F);
            func_1228_k(blockfencegate, i, j, k);
        }
        blockfencegate.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
        return flag;
    }

    public boolean func_1214_n(Block block, int i, int j, int k)
    {
        boolean flag = false;
        int l = field_1772_a.func_602_e(i, j, k);
        if(l == 0)
        {
            block.func_213_a(0.0F, 0.0F, 0.0F, 0.5F, 0.5F, 1.0F);
            func_1228_k(block, i, j, k);
            block.func_213_a(0.5F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
            func_1228_k(block, i, j, k);
            flag = true;
        } else
        if(l == 1)
        {
            block.func_213_a(0.0F, 0.0F, 0.0F, 0.5F, 1.0F, 1.0F);
            func_1228_k(block, i, j, k);
            block.func_213_a(0.5F, 0.0F, 0.0F, 1.0F, 0.5F, 1.0F);
            func_1228_k(block, i, j, k);
            flag = true;
        } else
        if(l == 2)
        {
            block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 0.5F, 0.5F);
            func_1228_k(block, i, j, k);
            block.func_213_a(0.0F, 0.0F, 0.5F, 1.0F, 1.0F, 1.0F);
            func_1228_k(block, i, j, k);
            flag = true;
        } else
        if(l == 3)
        {
            block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.5F);
            func_1228_k(block, i, j, k);
            block.func_213_a(0.0F, 0.0F, 0.5F, 1.0F, 0.5F, 1.0F);
            func_1228_k(block, i, j, k);
            flag = true;
        }
        block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
        return flag;
    }

    public boolean func_1218_o(Block block, int i, int j, int k)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        BlockDoor blockdoor = (BlockDoor)block;
        boolean flag = false;
        float f = 0.5F;
        float f1 = 1.0F;
        float f2 = 0.8F;
        float f3 = 0.6F;
        int l = block.func_35275_c(field_1772_a, i, j, k);
        tessellator.func_35835_b(block.field_368_bg <= 0.0D ? block.func_35275_c(field_1772_a, i, j - 1, k) : l);
        tessellator.func_987_a(f, f, f);
        func_1244_a(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 0));
        flag = true;
        tessellator.func_35835_b(block.field_362_bj >= 1.0D ? block.func_35275_c(field_1772_a, i, j + 1, k) : l);
        tessellator.func_987_a(f1, f1, f1);
        func_1217_b(block, i, j, k, block.func_211_a(field_1772_a, i, j, k, 1));
        flag = true;
        tessellator.func_35835_b(block.field_366_bh <= 0.0D ? block.func_35275_c(field_1772_a, i, j, k - 1) : l);
        tessellator.func_987_a(f2, f2, f2);
        int i1 = block.func_211_a(field_1772_a, i, j, k, 2);
        if(i1 < 0)
        {
            field_1774_c = true;
            i1 = -i1;
        }
        func_1220_c(block, i, j, k, i1);
        flag = true;
        field_1774_c = false;
        tessellator.func_35835_b(block.field_360_bk >= 1.0D ? block.func_35275_c(field_1772_a, i, j, k + 1) : l);
        tessellator.func_987_a(f2, f2, f2);
        i1 = block.func_211_a(field_1772_a, i, j, k, 3);
        if(i1 < 0)
        {
            field_1774_c = true;
            i1 = -i1;
        }
        func_1225_d(block, i, j, k, i1);
        flag = true;
        field_1774_c = false;
        tessellator.func_35835_b(block.field_370_bf <= 0.0D ? block.func_35275_c(field_1772_a, i - 1, j, k) : l);
        tessellator.func_987_a(f3, f3, f3);
        i1 = block.func_211_a(field_1772_a, i, j, k, 4);
        if(i1 < 0)
        {
            field_1774_c = true;
            i1 = -i1;
        }
        func_1231_e(block, i, j, k, i1);
        flag = true;
        field_1774_c = false;
        tessellator.func_35835_b(block.field_364_bi >= 1.0D ? block.func_35275_c(field_1772_a, i + 1, j, k) : l);
        tessellator.func_987_a(f3, f3, f3);
        i1 = block.func_211_a(field_1772_a, i, j, k, 5);
        if(i1 < 0)
        {
            field_1774_c = true;
            i1 = -i1;
        }
        func_1236_f(block, i, j, k, i1);
        flag = true;
        field_1774_c = false;
        return flag;
    }

    public void func_1244_a(Block block, double d, double d1, double d2, 
            int i)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        if(field_1771_b >= 0)
        {
            i = field_1771_b;
        }
        int j = (i & 0xf) << 4;
        int k = i & 0xf0;
        double d3 = ((double)j + block.field_370_bf * 16D) / 256D;
        double d4 = (((double)j + block.field_364_bi * 16D) - 0.01D) / 256D;
        double d5 = ((double)k + block.field_366_bh * 16D) / 256D;
        double d6 = (((double)k + block.field_360_bk * 16D) - 0.01D) / 256D;
        if(block.field_370_bf < 0.0D || block.field_364_bi > 1.0D)
        {
            d3 = ((float)j + 0.0F) / 256F;
            d4 = ((float)j + 15.99F) / 256F;
        }
        if(block.field_366_bh < 0.0D || block.field_360_bk > 1.0D)
        {
            d5 = ((float)k + 0.0F) / 256F;
            d6 = ((float)k + 15.99F) / 256F;
        }
        double d7 = d4;
        double d8 = d3;
        double d9 = d5;
        double d10 = d6;
        if(field_31082_l == 2)
        {
            d3 = ((double)j + block.field_366_bh * 16D) / 256D;
            d5 = ((double)(k + 16) - block.field_364_bi * 16D) / 256D;
            d4 = ((double)j + block.field_360_bk * 16D) / 256D;
            d6 = ((double)(k + 16) - block.field_370_bf * 16D) / 256D;
            d9 = d5;
            d10 = d6;
            d7 = d3;
            d8 = d4;
            d5 = d6;
            d6 = d9;
        } else
        if(field_31082_l == 1)
        {
            d3 = ((double)(j + 16) - block.field_360_bk * 16D) / 256D;
            d5 = ((double)k + block.field_370_bf * 16D) / 256D;
            d4 = ((double)(j + 16) - block.field_366_bh * 16D) / 256D;
            d6 = ((double)k + block.field_364_bi * 16D) / 256D;
            d7 = d4;
            d8 = d3;
            d3 = d4;
            d4 = d8;
            d9 = d6;
            d10 = d5;
        } else
        if(field_31082_l == 3)
        {
            d3 = ((double)(j + 16) - block.field_370_bf * 16D) / 256D;
            d4 = ((double)(j + 16) - block.field_364_bi * 16D - 0.01D) / 256D;
            d5 = ((double)(k + 16) - block.field_366_bh * 16D) / 256D;
            d6 = ((double)(k + 16) - block.field_360_bk * 16D - 0.01D) / 256D;
            d7 = d4;
            d8 = d3;
            d9 = d5;
            d10 = d6;
        }
        double d11 = d + block.field_370_bf;
        double d12 = d + block.field_364_bi;
        double d13 = d1 + block.field_368_bg;
        double d14 = d2 + block.field_366_bh;
        double d15 = d2 + block.field_360_bk;
        if(field_22385_e)
        {
            tessellator.func_987_a(field_22351_H, field_22347_L, field_22343_P);
            tessellator.func_35835_b(field_35943_ak);
            tessellator.func_983_a(d11, d13, d15, d8, d10);
            tessellator.func_987_a(field_22350_I, field_22346_M, field_22342_Q);
            tessellator.func_35835_b(field_35944_al);
            tessellator.func_983_a(d11, d13, d14, d3, d5);
            tessellator.func_987_a(field_22349_J, field_22345_N, field_22341_R);
            tessellator.func_35835_b(field_35947_am);
            tessellator.func_983_a(d12, d13, d14, d7, d9);
            tessellator.func_987_a(field_22348_K, field_22344_O, field_22340_S);
            tessellator.func_35835_b(field_35948_an);
            tessellator.func_983_a(d12, d13, d15, d4, d6);
        } else
        {
            tessellator.func_983_a(d11, d13, d15, d8, d10);
            tessellator.func_983_a(d11, d13, d14, d3, d5);
            tessellator.func_983_a(d12, d13, d14, d7, d9);
            tessellator.func_983_a(d12, d13, d15, d4, d6);
        }
    }

    public void func_1217_b(Block block, double d, double d1, double d2, 
            int i)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        if(field_1771_b >= 0)
        {
            i = field_1771_b;
        }
        int j = (i & 0xf) << 4;
        int k = i & 0xf0;
        double d3 = ((double)j + block.field_370_bf * 16D) / 256D;
        double d4 = (((double)j + block.field_364_bi * 16D) - 0.01D) / 256D;
        double d5 = ((double)k + block.field_366_bh * 16D) / 256D;
        double d6 = (((double)k + block.field_360_bk * 16D) - 0.01D) / 256D;
        if(block.field_370_bf < 0.0D || block.field_364_bi > 1.0D)
        {
            d3 = ((float)j + 0.0F) / 256F;
            d4 = ((float)j + 15.99F) / 256F;
        }
        if(block.field_366_bh < 0.0D || block.field_360_bk > 1.0D)
        {
            d5 = ((float)k + 0.0F) / 256F;
            d6 = ((float)k + 15.99F) / 256F;
        }
        double d7 = d4;
        double d8 = d3;
        double d9 = d5;
        double d10 = d6;
        if(field_31083_k == 1)
        {
            d3 = ((double)j + block.field_366_bh * 16D) / 256D;
            d5 = ((double)(k + 16) - block.field_364_bi * 16D) / 256D;
            d4 = ((double)j + block.field_360_bk * 16D) / 256D;
            d6 = ((double)(k + 16) - block.field_370_bf * 16D) / 256D;
            d9 = d5;
            d10 = d6;
            d7 = d3;
            d8 = d4;
            d5 = d6;
            d6 = d9;
        } else
        if(field_31083_k == 2)
        {
            d3 = ((double)(j + 16) - block.field_360_bk * 16D) / 256D;
            d5 = ((double)k + block.field_370_bf * 16D) / 256D;
            d4 = ((double)(j + 16) - block.field_366_bh * 16D) / 256D;
            d6 = ((double)k + block.field_364_bi * 16D) / 256D;
            d7 = d4;
            d8 = d3;
            d3 = d4;
            d4 = d8;
            d9 = d6;
            d10 = d5;
        } else
        if(field_31083_k == 3)
        {
            d3 = ((double)(j + 16) - block.field_370_bf * 16D) / 256D;
            d4 = ((double)(j + 16) - block.field_364_bi * 16D - 0.01D) / 256D;
            d5 = ((double)(k + 16) - block.field_366_bh * 16D) / 256D;
            d6 = ((double)(k + 16) - block.field_360_bk * 16D - 0.01D) / 256D;
            d7 = d4;
            d8 = d3;
            d9 = d5;
            d10 = d6;
        }
        double d11 = d + block.field_370_bf;
        double d12 = d + block.field_364_bi;
        double d13 = d1 + block.field_362_bj;
        double d14 = d2 + block.field_366_bh;
        double d15 = d2 + block.field_360_bk;
        if(field_22385_e)
        {
            tessellator.func_987_a(field_22351_H, field_22347_L, field_22343_P);
            tessellator.func_35835_b(field_35943_ak);
            tessellator.func_983_a(d12, d13, d15, d4, d6);
            tessellator.func_987_a(field_22350_I, field_22346_M, field_22342_Q);
            tessellator.func_35835_b(field_35944_al);
            tessellator.func_983_a(d12, d13, d14, d7, d9);
            tessellator.func_987_a(field_22349_J, field_22345_N, field_22341_R);
            tessellator.func_35835_b(field_35947_am);
            tessellator.func_983_a(d11, d13, d14, d3, d5);
            tessellator.func_987_a(field_22348_K, field_22344_O, field_22340_S);
            tessellator.func_35835_b(field_35948_an);
            tessellator.func_983_a(d11, d13, d15, d8, d10);
        } else
        {
            tessellator.func_983_a(d12, d13, d15, d4, d6);
            tessellator.func_983_a(d12, d13, d14, d7, d9);
            tessellator.func_983_a(d11, d13, d14, d3, d5);
            tessellator.func_983_a(d11, d13, d15, d8, d10);
        }
    }

    public void func_1220_c(Block block, double d, double d1, double d2, 
            int i)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        if(field_1771_b >= 0)
        {
            i = field_1771_b;
        }
        int j = (i & 0xf) << 4;
        int k = i & 0xf0;
        double d3 = ((double)j + block.field_370_bf * 16D) / 256D;
        double d4 = (((double)j + block.field_364_bi * 16D) - 0.01D) / 256D;
        double d5 = ((double)(k + 16) - block.field_362_bj * 16D) / 256D;
        double d6 = ((double)(k + 16) - block.field_368_bg * 16D - 0.01D) / 256D;
        if(field_1774_c)
        {
            double d7 = d3;
            d3 = d4;
            d4 = d7;
        }
        if(block.field_370_bf < 0.0D || block.field_364_bi > 1.0D)
        {
            d3 = ((float)j + 0.0F) / 256F;
            d4 = ((float)j + 15.99F) / 256F;
        }
        if(block.field_368_bg < 0.0D || block.field_362_bj > 1.0D)
        {
            d5 = ((float)k + 0.0F) / 256F;
            d6 = ((float)k + 15.99F) / 256F;
        }
        double d8 = d4;
        double d9 = d3;
        double d10 = d5;
        double d11 = d6;
        if(field_31087_g == 2)
        {
            d3 = ((double)j + block.field_368_bg * 16D) / 256D;
            d5 = ((double)(k + 16) - block.field_370_bf * 16D) / 256D;
            d4 = ((double)j + block.field_362_bj * 16D) / 256D;
            d6 = ((double)(k + 16) - block.field_364_bi * 16D) / 256D;
            d10 = d5;
            d11 = d6;
            d8 = d3;
            d9 = d4;
            d5 = d6;
            d6 = d10;
        } else
        if(field_31087_g == 1)
        {
            d3 = ((double)(j + 16) - block.field_362_bj * 16D) / 256D;
            d5 = ((double)k + block.field_364_bi * 16D) / 256D;
            d4 = ((double)(j + 16) - block.field_368_bg * 16D) / 256D;
            d6 = ((double)k + block.field_370_bf * 16D) / 256D;
            d8 = d4;
            d9 = d3;
            d3 = d4;
            d4 = d9;
            d10 = d6;
            d11 = d5;
        } else
        if(field_31087_g == 3)
        {
            d3 = ((double)(j + 16) - block.field_370_bf * 16D) / 256D;
            d4 = ((double)(j + 16) - block.field_364_bi * 16D - 0.01D) / 256D;
            d5 = ((double)k + block.field_362_bj * 16D) / 256D;
            d6 = (((double)k + block.field_368_bg * 16D) - 0.01D) / 256D;
            d8 = d4;
            d9 = d3;
            d10 = d5;
            d11 = d6;
        }
        double d12 = d + block.field_370_bf;
        double d13 = d + block.field_364_bi;
        double d14 = d1 + block.field_368_bg;
        double d15 = d1 + block.field_362_bj;
        double d16 = d2 + block.field_366_bh;
        if(field_22385_e)
        {
            tessellator.func_987_a(field_22351_H, field_22347_L, field_22343_P);
            tessellator.func_35835_b(field_35943_ak);
            tessellator.func_983_a(d12, d15, d16, d8, d10);
            tessellator.func_987_a(field_22350_I, field_22346_M, field_22342_Q);
            tessellator.func_35835_b(field_35944_al);
            tessellator.func_983_a(d13, d15, d16, d3, d5);
            tessellator.func_987_a(field_22349_J, field_22345_N, field_22341_R);
            tessellator.func_35835_b(field_35947_am);
            tessellator.func_983_a(d13, d14, d16, d9, d11);
            tessellator.func_987_a(field_22348_K, field_22344_O, field_22340_S);
            tessellator.func_35835_b(field_35948_an);
            tessellator.func_983_a(d12, d14, d16, d4, d6);
        } else
        {
            tessellator.func_983_a(d12, d15, d16, d8, d10);
            tessellator.func_983_a(d13, d15, d16, d3, d5);
            tessellator.func_983_a(d13, d14, d16, d9, d11);
            tessellator.func_983_a(d12, d14, d16, d4, d6);
        }
    }

    public void func_1225_d(Block block, double d, double d1, double d2, 
            int i)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        if(field_1771_b >= 0)
        {
            i = field_1771_b;
        }
        int j = (i & 0xf) << 4;
        int k = i & 0xf0;
        double d3 = ((double)j + block.field_370_bf * 16D) / 256D;
        double d4 = (((double)j + block.field_364_bi * 16D) - 0.01D) / 256D;
        double d5 = ((double)(k + 16) - block.field_362_bj * 16D) / 256D;
        double d6 = ((double)(k + 16) - block.field_368_bg * 16D - 0.01D) / 256D;
        if(field_1774_c)
        {
            double d7 = d3;
            d3 = d4;
            d4 = d7;
        }
        if(block.field_370_bf < 0.0D || block.field_364_bi > 1.0D)
        {
            d3 = ((float)j + 0.0F) / 256F;
            d4 = ((float)j + 15.99F) / 256F;
        }
        if(block.field_368_bg < 0.0D || block.field_362_bj > 1.0D)
        {
            d5 = ((float)k + 0.0F) / 256F;
            d6 = ((float)k + 15.99F) / 256F;
        }
        double d8 = d4;
        double d9 = d3;
        double d10 = d5;
        double d11 = d6;
        if(field_31086_h == 1)
        {
            d3 = ((double)j + block.field_368_bg * 16D) / 256D;
            d6 = ((double)(k + 16) - block.field_370_bf * 16D) / 256D;
            d4 = ((double)j + block.field_362_bj * 16D) / 256D;
            d5 = ((double)(k + 16) - block.field_364_bi * 16D) / 256D;
            d10 = d5;
            d11 = d6;
            d8 = d3;
            d9 = d4;
            d5 = d6;
            d6 = d10;
        } else
        if(field_31086_h == 2)
        {
            d3 = ((double)(j + 16) - block.field_362_bj * 16D) / 256D;
            d5 = ((double)k + block.field_370_bf * 16D) / 256D;
            d4 = ((double)(j + 16) - block.field_368_bg * 16D) / 256D;
            d6 = ((double)k + block.field_364_bi * 16D) / 256D;
            d8 = d4;
            d9 = d3;
            d3 = d4;
            d4 = d9;
            d10 = d6;
            d11 = d5;
        } else
        if(field_31086_h == 3)
        {
            d3 = ((double)(j + 16) - block.field_370_bf * 16D) / 256D;
            d4 = ((double)(j + 16) - block.field_364_bi * 16D - 0.01D) / 256D;
            d5 = ((double)k + block.field_362_bj * 16D) / 256D;
            d6 = (((double)k + block.field_368_bg * 16D) - 0.01D) / 256D;
            d8 = d4;
            d9 = d3;
            d10 = d5;
            d11 = d6;
        }
        double d12 = d + block.field_370_bf;
        double d13 = d + block.field_364_bi;
        double d14 = d1 + block.field_368_bg;
        double d15 = d1 + block.field_362_bj;
        double d16 = d2 + block.field_360_bk;
        if(field_22385_e)
        {
            tessellator.func_987_a(field_22351_H, field_22347_L, field_22343_P);
            tessellator.func_35835_b(field_35943_ak);
            tessellator.func_983_a(d12, d15, d16, d3, d5);
            tessellator.func_987_a(field_22350_I, field_22346_M, field_22342_Q);
            tessellator.func_35835_b(field_35944_al);
            tessellator.func_983_a(d12, d14, d16, d9, d11);
            tessellator.func_987_a(field_22349_J, field_22345_N, field_22341_R);
            tessellator.func_35835_b(field_35947_am);
            tessellator.func_983_a(d13, d14, d16, d4, d6);
            tessellator.func_987_a(field_22348_K, field_22344_O, field_22340_S);
            tessellator.func_35835_b(field_35948_an);
            tessellator.func_983_a(d13, d15, d16, d8, d10);
        } else
        {
            tessellator.func_983_a(d12, d15, d16, d3, d5);
            tessellator.func_983_a(d12, d14, d16, d9, d11);
            tessellator.func_983_a(d13, d14, d16, d4, d6);
            tessellator.func_983_a(d13, d15, d16, d8, d10);
        }
    }

    public void func_1231_e(Block block, double d, double d1, double d2, 
            int i)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        if(field_1771_b >= 0)
        {
            i = field_1771_b;
        }
        int j = (i & 0xf) << 4;
        int k = i & 0xf0;
        double d3 = ((double)j + block.field_366_bh * 16D) / 256D;
        double d4 = (((double)j + block.field_360_bk * 16D) - 0.01D) / 256D;
        double d5 = ((double)(k + 16) - block.field_362_bj * 16D) / 256D;
        double d6 = ((double)(k + 16) - block.field_368_bg * 16D - 0.01D) / 256D;
        if(field_1774_c)
        {
            double d7 = d3;
            d3 = d4;
            d4 = d7;
        }
        if(block.field_366_bh < 0.0D || block.field_360_bk > 1.0D)
        {
            d3 = ((float)j + 0.0F) / 256F;
            d4 = ((float)j + 15.99F) / 256F;
        }
        if(block.field_368_bg < 0.0D || block.field_362_bj > 1.0D)
        {
            d5 = ((float)k + 0.0F) / 256F;
            d6 = ((float)k + 15.99F) / 256F;
        }
        double d8 = d4;
        double d9 = d3;
        double d10 = d5;
        double d11 = d6;
        if(field_31084_j == 1)
        {
            d3 = ((double)j + block.field_368_bg * 16D) / 256D;
            d5 = ((double)(k + 16) - block.field_360_bk * 16D) / 256D;
            d4 = ((double)j + block.field_362_bj * 16D) / 256D;
            d6 = ((double)(k + 16) - block.field_366_bh * 16D) / 256D;
            d10 = d5;
            d11 = d6;
            d8 = d3;
            d9 = d4;
            d5 = d6;
            d6 = d10;
        } else
        if(field_31084_j == 2)
        {
            d3 = ((double)(j + 16) - block.field_362_bj * 16D) / 256D;
            d5 = ((double)k + block.field_366_bh * 16D) / 256D;
            d4 = ((double)(j + 16) - block.field_368_bg * 16D) / 256D;
            d6 = ((double)k + block.field_360_bk * 16D) / 256D;
            d8 = d4;
            d9 = d3;
            d3 = d4;
            d4 = d9;
            d10 = d6;
            d11 = d5;
        } else
        if(field_31084_j == 3)
        {
            d3 = ((double)(j + 16) - block.field_366_bh * 16D) / 256D;
            d4 = ((double)(j + 16) - block.field_360_bk * 16D - 0.01D) / 256D;
            d5 = ((double)k + block.field_362_bj * 16D) / 256D;
            d6 = (((double)k + block.field_368_bg * 16D) - 0.01D) / 256D;
            d8 = d4;
            d9 = d3;
            d10 = d5;
            d11 = d6;
        }
        double d12 = d + block.field_370_bf;
        double d13 = d1 + block.field_368_bg;
        double d14 = d1 + block.field_362_bj;
        double d15 = d2 + block.field_366_bh;
        double d16 = d2 + block.field_360_bk;
        if(field_22385_e)
        {
            tessellator.func_987_a(field_22351_H, field_22347_L, field_22343_P);
            tessellator.func_35835_b(field_35943_ak);
            tessellator.func_983_a(d12, d14, d16, d8, d10);
            tessellator.func_987_a(field_22350_I, field_22346_M, field_22342_Q);
            tessellator.func_35835_b(field_35944_al);
            tessellator.func_983_a(d12, d14, d15, d3, d5);
            tessellator.func_987_a(field_22349_J, field_22345_N, field_22341_R);
            tessellator.func_35835_b(field_35947_am);
            tessellator.func_983_a(d12, d13, d15, d9, d11);
            tessellator.func_987_a(field_22348_K, field_22344_O, field_22340_S);
            tessellator.func_35835_b(field_35948_an);
            tessellator.func_983_a(d12, d13, d16, d4, d6);
        } else
        {
            tessellator.func_983_a(d12, d14, d16, d8, d10);
            tessellator.func_983_a(d12, d14, d15, d3, d5);
            tessellator.func_983_a(d12, d13, d15, d9, d11);
            tessellator.func_983_a(d12, d13, d16, d4, d6);
        }
    }

    public void func_1236_f(Block block, double d, double d1, double d2, 
            int i)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        if(field_1771_b >= 0)
        {
            i = field_1771_b;
        }
        int j = (i & 0xf) << 4;
        int k = i & 0xf0;
        double d3 = ((double)j + block.field_366_bh * 16D) / 256D;
        double d4 = (((double)j + block.field_360_bk * 16D) - 0.01D) / 256D;
        double d5 = ((double)(k + 16) - block.field_362_bj * 16D) / 256D;
        double d6 = ((double)(k + 16) - block.field_368_bg * 16D - 0.01D) / 256D;
        if(field_1774_c)
        {
            double d7 = d3;
            d3 = d4;
            d4 = d7;
        }
        if(block.field_366_bh < 0.0D || block.field_360_bk > 1.0D)
        {
            d3 = ((float)j + 0.0F) / 256F;
            d4 = ((float)j + 15.99F) / 256F;
        }
        if(block.field_368_bg < 0.0D || block.field_362_bj > 1.0D)
        {
            d5 = ((float)k + 0.0F) / 256F;
            d6 = ((float)k + 15.99F) / 256F;
        }
        double d8 = d4;
        double d9 = d3;
        double d10 = d5;
        double d11 = d6;
        if(field_31085_i == 2)
        {
            d3 = ((double)j + block.field_368_bg * 16D) / 256D;
            d5 = ((double)(k + 16) - block.field_366_bh * 16D) / 256D;
            d4 = ((double)j + block.field_362_bj * 16D) / 256D;
            d6 = ((double)(k + 16) - block.field_360_bk * 16D) / 256D;
            d10 = d5;
            d11 = d6;
            d8 = d3;
            d9 = d4;
            d5 = d6;
            d6 = d10;
        } else
        if(field_31085_i == 1)
        {
            d3 = ((double)(j + 16) - block.field_362_bj * 16D) / 256D;
            d5 = ((double)k + block.field_360_bk * 16D) / 256D;
            d4 = ((double)(j + 16) - block.field_368_bg * 16D) / 256D;
            d6 = ((double)k + block.field_366_bh * 16D) / 256D;
            d8 = d4;
            d9 = d3;
            d3 = d4;
            d4 = d9;
            d10 = d6;
            d11 = d5;
        } else
        if(field_31085_i == 3)
        {
            d3 = ((double)(j + 16) - block.field_366_bh * 16D) / 256D;
            d4 = ((double)(j + 16) - block.field_360_bk * 16D - 0.01D) / 256D;
            d5 = ((double)k + block.field_362_bj * 16D) / 256D;
            d6 = (((double)k + block.field_368_bg * 16D) - 0.01D) / 256D;
            d8 = d4;
            d9 = d3;
            d10 = d5;
            d11 = d6;
        }
        double d12 = d + block.field_364_bi;
        double d13 = d1 + block.field_368_bg;
        double d14 = d1 + block.field_362_bj;
        double d15 = d2 + block.field_366_bh;
        double d16 = d2 + block.field_360_bk;
        if(field_22385_e)
        {
            tessellator.func_987_a(field_22351_H, field_22347_L, field_22343_P);
            tessellator.func_35835_b(field_35943_ak);
            tessellator.func_983_a(d12, d13, d16, d9, d11);
            tessellator.func_987_a(field_22350_I, field_22346_M, field_22342_Q);
            tessellator.func_35835_b(field_35944_al);
            tessellator.func_983_a(d12, d13, d15, d4, d6);
            tessellator.func_987_a(field_22349_J, field_22345_N, field_22341_R);
            tessellator.func_35835_b(field_35947_am);
            tessellator.func_983_a(d12, d14, d15, d8, d10);
            tessellator.func_987_a(field_22348_K, field_22344_O, field_22340_S);
            tessellator.func_35835_b(field_35948_an);
            tessellator.func_983_a(d12, d14, d16, d3, d5);
        } else
        {
            tessellator.func_983_a(d12, d13, d16, d9, d11);
            tessellator.func_983_a(d12, d13, d15, d4, d6);
            tessellator.func_983_a(d12, d14, d15, d8, d10);
            tessellator.func_983_a(d12, d14, d16, d3, d5);
        }
    }

    public void func_1227_a(Block block, int i, float f)
    {
        Tessellator tessellator = Tessellator.field_1512_a;
        boolean flag = block.field_376_bc == Block.field_337_v.field_376_bc;
        if(field_31088_b)
        {
            int j = block.func_31030_b(i);
            if(flag)
            {
                j = 0xffffff;
            }
            float f1 = (float)(j >> 16 & 0xff) / 255F;
            float f3 = (float)(j >> 8 & 0xff) / 255F;
            float f7 = (float)(j & 0xff) / 255F;
            GL11.glColor4f(f1 * f, f3 * f, f7 * f, 1.0F);
        }
        int k = block.func_210_f();
        if(k != 0 && k != 16)
        {
            if(k == 1)
            {
                tessellator.func_977_b();
                tessellator.func_980_b(0.0F, -1F, 0.0F);
                func_1239_a(block, i, -0.5D, -0.5D, -0.5D);
                tessellator.func_982_a();
            } else
            if(k == 19)
            {
                tessellator.func_977_b();
                tessellator.func_980_b(0.0F, -1F, 0.0F);
                block.func_237_e();
                func_35928_a(block, i, block.field_362_bj, -0.5D, -0.5D, -0.5D);
                tessellator.func_982_a();
            } else
            if(k == 23)
            {
                tessellator.func_977_b();
                tessellator.func_980_b(0.0F, -1F, 0.0F);
                block.func_237_e();
                tessellator.func_982_a();
            } else
            if(k == 13)
            {
                block.func_237_e();
                GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
                float f2 = 0.0625F;
                tessellator.func_977_b();
                tessellator.func_980_b(0.0F, -1F, 0.0F);
                func_1244_a(block, 0.0D, 0.0D, 0.0D, block.func_218_a(0));
                tessellator.func_982_a();
                tessellator.func_977_b();
                tessellator.func_980_b(0.0F, 1.0F, 0.0F);
                func_1217_b(block, 0.0D, 0.0D, 0.0D, block.func_218_a(1));
                tessellator.func_982_a();
                tessellator.func_977_b();
                tessellator.func_980_b(0.0F, 0.0F, -1F);
                tessellator.func_988_c(0.0F, 0.0F, f2);
                func_1220_c(block, 0.0D, 0.0D, 0.0D, block.func_218_a(2));
                tessellator.func_988_c(0.0F, 0.0F, -f2);
                tessellator.func_982_a();
                tessellator.func_977_b();
                tessellator.func_980_b(0.0F, 0.0F, 1.0F);
                tessellator.func_988_c(0.0F, 0.0F, -f2);
                func_1225_d(block, 0.0D, 0.0D, 0.0D, block.func_218_a(3));
                tessellator.func_988_c(0.0F, 0.0F, f2);
                tessellator.func_982_a();
                tessellator.func_977_b();
                tessellator.func_980_b(-1F, 0.0F, 0.0F);
                tessellator.func_988_c(f2, 0.0F, 0.0F);
                func_1231_e(block, 0.0D, 0.0D, 0.0D, block.func_218_a(4));
                tessellator.func_988_c(-f2, 0.0F, 0.0F);
                tessellator.func_982_a();
                tessellator.func_977_b();
                tessellator.func_980_b(1.0F, 0.0F, 0.0F);
                tessellator.func_988_c(-f2, 0.0F, 0.0F);
                func_1236_f(block, 0.0D, 0.0D, 0.0D, block.func_218_a(5));
                tessellator.func_988_c(f2, 0.0F, 0.0F);
                tessellator.func_982_a();
                GL11.glTranslatef(0.5F, 0.5F, 0.5F);
            } else
            if(k == 22)
            {
                ChestItemRenderHelper.field_35611_a.func_35609_a(block, i, f);
                GL11.glEnable(32826);
            } else
            if(k == 6)
            {
                tessellator.func_977_b();
                tessellator.func_980_b(0.0F, -1F, 0.0F);
                func_1245_b(block, i, -0.5D, -0.5D, -0.5D);
                tessellator.func_982_a();
            } else
            if(k == 2)
            {
                tessellator.func_977_b();
                tessellator.func_980_b(0.0F, -1F, 0.0F);
                func_1237_a(block, -0.5D, -0.5D, -0.5D, 0.0D, 0.0D);
                tessellator.func_982_a();
            } else
            if(k == 10)
            {
                for(int l = 0; l < 2; l++)
                {
                    if(l == 0)
                    {
                        block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.5F);
                    }
                    if(l == 1)
                    {
                        block.func_213_a(0.0F, 0.0F, 0.5F, 1.0F, 0.5F, 1.0F);
                    }
                    GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
                    tessellator.func_977_b();
                    tessellator.func_980_b(0.0F, -1F, 0.0F);
                    func_1244_a(block, 0.0D, 0.0D, 0.0D, block.func_218_a(0));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(0.0F, 1.0F, 0.0F);
                    func_1217_b(block, 0.0D, 0.0D, 0.0D, block.func_218_a(1));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(0.0F, 0.0F, -1F);
                    func_1220_c(block, 0.0D, 0.0D, 0.0D, block.func_218_a(2));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(0.0F, 0.0F, 1.0F);
                    func_1225_d(block, 0.0D, 0.0D, 0.0D, block.func_218_a(3));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(-1F, 0.0F, 0.0F);
                    func_1231_e(block, 0.0D, 0.0D, 0.0D, block.func_218_a(4));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(1.0F, 0.0F, 0.0F);
                    func_1236_f(block, 0.0D, 0.0D, 0.0D, block.func_218_a(5));
                    tessellator.func_982_a();
                    GL11.glTranslatef(0.5F, 0.5F, 0.5F);
                }

            } else
            if(k == 27)
            {
                int i1 = 0;
                GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
                tessellator.func_977_b();
                for(int i2 = 0; i2 < 8; i2++)
                {
                    int j2 = 0;
                    byte byte0 = 1;
                    if(i2 == 0)
                    {
                        j2 = 2;
                    }
                    if(i2 == 1)
                    {
                        j2 = 3;
                    }
                    if(i2 == 2)
                    {
                        j2 = 4;
                    }
                    if(i2 == 3)
                    {
                        j2 = 5;
                        byte0 = 2;
                    }
                    if(i2 == 4)
                    {
                        j2 = 6;
                        byte0 = 3;
                    }
                    if(i2 == 5)
                    {
                        j2 = 7;
                        byte0 = 5;
                    }
                    if(i2 == 6)
                    {
                        j2 = 6;
                        byte0 = 2;
                    }
                    if(i2 == 7)
                    {
                        j2 = 3;
                    }
                    float f10 = (float)j2 / 16F;
                    float f11 = 1.0F - (float)i1 / 16F;
                    float f12 = 1.0F - (float)(i1 + byte0) / 16F;
                    i1 += byte0;
                    block.func_213_a(0.5F - f10, f12, 0.5F - f10, 0.5F + f10, f11, 0.5F + f10);
                    tessellator.func_980_b(0.0F, -1F, 0.0F);
                    func_1244_a(block, 0.0D, 0.0D, 0.0D, block.func_218_a(0));
                    tessellator.func_980_b(0.0F, 1.0F, 0.0F);
                    func_1217_b(block, 0.0D, 0.0D, 0.0D, block.func_218_a(1));
                    tessellator.func_980_b(0.0F, 0.0F, -1F);
                    func_1220_c(block, 0.0D, 0.0D, 0.0D, block.func_218_a(2));
                    tessellator.func_980_b(0.0F, 0.0F, 1.0F);
                    func_1225_d(block, 0.0D, 0.0D, 0.0D, block.func_218_a(3));
                    tessellator.func_980_b(-1F, 0.0F, 0.0F);
                    func_1231_e(block, 0.0D, 0.0D, 0.0D, block.func_218_a(4));
                    tessellator.func_980_b(1.0F, 0.0F, 0.0F);
                    func_1236_f(block, 0.0D, 0.0D, 0.0D, block.func_218_a(5));
                }

                tessellator.func_982_a();
                GL11.glTranslatef(0.5F, 0.5F, 0.5F);
                block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
            } else
            if(k == 11)
            {
                for(int j1 = 0; j1 < 4; j1++)
                {
                    float f4 = 0.125F;
                    if(j1 == 0)
                    {
                        block.func_213_a(0.5F - f4, 0.0F, 0.0F, 0.5F + f4, 1.0F, f4 * 2.0F);
                    }
                    if(j1 == 1)
                    {
                        block.func_213_a(0.5F - f4, 0.0F, 1.0F - f4 * 2.0F, 0.5F + f4, 1.0F, 1.0F);
                    }
                    f4 = 0.0625F;
                    if(j1 == 2)
                    {
                        block.func_213_a(0.5F - f4, 1.0F - f4 * 3F, -f4 * 2.0F, 0.5F + f4, 1.0F - f4, 1.0F + f4 * 2.0F);
                    }
                    if(j1 == 3)
                    {
                        block.func_213_a(0.5F - f4, 0.5F - f4 * 3F, -f4 * 2.0F, 0.5F + f4, 0.5F - f4, 1.0F + f4 * 2.0F);
                    }
                    GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
                    tessellator.func_977_b();
                    tessellator.func_980_b(0.0F, -1F, 0.0F);
                    func_1244_a(block, 0.0D, 0.0D, 0.0D, block.func_218_a(0));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(0.0F, 1.0F, 0.0F);
                    func_1217_b(block, 0.0D, 0.0D, 0.0D, block.func_218_a(1));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(0.0F, 0.0F, -1F);
                    func_1220_c(block, 0.0D, 0.0D, 0.0D, block.func_218_a(2));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(0.0F, 0.0F, 1.0F);
                    func_1225_d(block, 0.0D, 0.0D, 0.0D, block.func_218_a(3));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(-1F, 0.0F, 0.0F);
                    func_1231_e(block, 0.0D, 0.0D, 0.0D, block.func_218_a(4));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(1.0F, 0.0F, 0.0F);
                    func_1236_f(block, 0.0D, 0.0D, 0.0D, block.func_218_a(5));
                    tessellator.func_982_a();
                    GL11.glTranslatef(0.5F, 0.5F, 0.5F);
                }

                block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
            } else
            if(k == 21)
            {
                for(int k1 = 0; k1 < 3; k1++)
                {
                    float f5 = 0.0625F;
                    if(k1 == 0)
                    {
                        block.func_213_a(0.5F - f5, 0.3F, 0.0F, 0.5F + f5, 1.0F, f5 * 2.0F);
                    }
                    if(k1 == 1)
                    {
                        block.func_213_a(0.5F - f5, 0.3F, 1.0F - f5 * 2.0F, 0.5F + f5, 1.0F, 1.0F);
                    }
                    f5 = 0.0625F;
                    if(k1 == 2)
                    {
                        block.func_213_a(0.5F - f5, 0.5F, 0.0F, 0.5F + f5, 1.0F - f5, 1.0F);
                    }
                    GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
                    tessellator.func_977_b();
                    tessellator.func_980_b(0.0F, -1F, 0.0F);
                    func_1244_a(block, 0.0D, 0.0D, 0.0D, block.func_218_a(0));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(0.0F, 1.0F, 0.0F);
                    func_1217_b(block, 0.0D, 0.0D, 0.0D, block.func_218_a(1));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(0.0F, 0.0F, -1F);
                    func_1220_c(block, 0.0D, 0.0D, 0.0D, block.func_218_a(2));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(0.0F, 0.0F, 1.0F);
                    func_1225_d(block, 0.0D, 0.0D, 0.0D, block.func_218_a(3));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(-1F, 0.0F, 0.0F);
                    func_1231_e(block, 0.0D, 0.0D, 0.0D, block.func_218_a(4));
                    tessellator.func_982_a();
                    tessellator.func_977_b();
                    tessellator.func_980_b(1.0F, 0.0F, 0.0F);
                    func_1236_f(block, 0.0D, 0.0D, 0.0D, block.func_218_a(5));
                    tessellator.func_982_a();
                    GL11.glTranslatef(0.5F, 0.5F, 0.5F);
                }

                block.func_213_a(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
            } else
            {
                ModLoader.RenderInvBlock(this, block, i, k);
            }
        } else
        {
            if(k == 16)
            {
                i = 1;
            }
            block.func_237_e();
            GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
            tessellator.func_977_b();
            tessellator.func_980_b(0.0F, -1F, 0.0F);
            func_1244_a(block, 0.0D, 0.0D, 0.0D, block.func_232_a(0, i));
            tessellator.func_982_a();
            if(flag && field_31088_b)
            {
                int l1 = block.func_31030_b(i);
                float f6 = (float)(l1 >> 16 & 0xff) / 255F;
                float f8 = (float)(l1 >> 8 & 0xff) / 255F;
                float f9 = (float)(l1 & 0xff) / 255F;
                GL11.glColor4f(f6 * f, f8 * f, f9 * f, 1.0F);
            }
            tessellator.func_977_b();
            tessellator.func_980_b(0.0F, 1.0F, 0.0F);
            func_1217_b(block, 0.0D, 0.0D, 0.0D, block.func_232_a(1, i));
            tessellator.func_982_a();
            if(flag && field_31088_b)
            {
                GL11.glColor4f(f, f, f, 1.0F);
            }
            tessellator.func_977_b();
            tessellator.func_980_b(0.0F, 0.0F, -1F);
            func_1220_c(block, 0.0D, 0.0D, 0.0D, block.func_232_a(2, i));
            tessellator.func_982_a();
            tessellator.func_977_b();
            tessellator.func_980_b(0.0F, 0.0F, 1.0F);
            func_1225_d(block, 0.0D, 0.0D, 0.0D, block.func_232_a(3, i));
            tessellator.func_982_a();
            tessellator.func_977_b();
            tessellator.func_980_b(-1F, 0.0F, 0.0F);
            func_1231_e(block, 0.0D, 0.0D, 0.0D, block.func_232_a(4, i));
            tessellator.func_982_a();
            tessellator.func_977_b();
            tessellator.func_980_b(1.0F, 0.0F, 0.0F);
            func_1236_f(block, 0.0D, 0.0D, 0.0D, block.func_232_a(5, i));
            tessellator.func_982_a();
            GL11.glTranslatef(0.5F, 0.5F, 0.5F);
        }
    }

    public static boolean func_1219_a(int i)
    {
        return i != 0 ? i != 13 ? i != 10 ? i != 11 ? i != 27 ? i != 22 ? i != 21 ? ModLoader.RenderBlockIsItemFull3D(i) : true : true : true : true : true : true : true;
    }

}
